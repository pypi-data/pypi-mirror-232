/** Tag family with 453 distinct codes.
    bits: 24,
    minimum hamming in sonar: 6,
    minimum hamming in camera: 6

    Max bits corrected (Sonar)       False positive rate (Sonar)
            0                  0.00270009 %
            1                  0.06750226 %
            2                  0.81272721 %

    Max bits corrected (Camera)       False positive rate (Camera)
            0                  0.00270009 %
            1                  0.06750226 %
            2                  0.81272721 %

    Generation time: 374.485000 s

    Hamming distance between pairs of codes in sonar (accounting for rotation and reversal):

       0  0
       1  0
       2  0
       3  0
       4  0
       5  0
       6  12574
       7  4894
       8  38905
       9  7769
      10  32027
      11  2269
      12  3737
      13  79
      14  122
      15  1
      16  1
      17  0
      18  0
      19  0
      20  0
      21  0
      22  0
      23  0
      24  0

    Hamming distance between pairs of codes in camera (accounting for rotation):

       0  0
       1  0
       2  0
       3  0
       4  0
       5  0
       6  6754
       7  2710
       8  25531
       9  6265
      10  38922
      11  5049
      12  14734
      13  931
      14  1376
      15  56
      16  49
      17  1
      18  0
      19  0
      20  0
      21  0
      22  0
      23  0
      24  0
**/
package april.tag;

public class AcTag24h6 extends TagFamily
{
	private static class ConstructCodes0 {
		private static long[] constructCodes() {
			return new long[] { 0xd35f2aL, 0x6264efL, 0xbc878dL, 0x4b8d52L, 0xda9317L, 0x6998dcL, 0x16aa2bL, 0xa5aff0L, 0x34b5b5L, 0xc3bb7aL, 0x52c13fL, 0x70ccc9L, 0xffd28eL, 0x3be9a2L, 0xe8faf1L, 0x251205L, 0xb417caL, 0x612919L, 0xf02edeL, 0x685d06L, 0xf762cbL, 0x6f90f3L, 0x8d9c7dL, 0xd0e77eL, 0xeef308L, 0x7df8cdL, 0x14327fL, 0x504993L, 0x6e551dL, 0xfd5ae2L, 0xaa6c31L, 0x3971f6L, 0xe68345L, 0x40a5e3L, 0x7cbcf7L, 0x29ce46L, 0xb8d40bL, 0x65e55aL, 0xa1fc6eL, 0xa9305bL, 0xc73be5L, 0x744d34L, 0x9258beL, 0xce6fd2L, 0xec7b5cL, 0xb79835L, 0x469dfaL, 0x64a984L, 0x89e8fbL, 0x2022adL, 0xeb3f86L, 0x9850d5L, 0xbd904cL, 0x4c9611L, 0x17b2eaL, 0xf1379dL, 0x2d4eb1L, 0x7099b2L, 0x3bb68bL, 0xcabc50L, 0x59c215L, 0xeffbc7L, 0x4a1e65L, 0x6829efL, 0x515252L, 0xb2a8ddL, 0x41aea2L, 0x48e28fL, 0x0b8fa5L, 0x299b2fL, 0x19f77fL, 0xa8fd44L, 0x560e93L, 0x2f9346L, 0xbe990bL, 0x6a6e84L, 0x177fd3L, 0x96e1e8L, 0xe160d6L, 0xca8939L, 0xe894c3L, 0x24abd7L, 0xb3b19cL, 0x67f6d8L, 0xf6fc9dL, 0xd7b53dL, 0x22342bL, 0x8abea3L, 0xaffe1aL, 0x549fa6L, 0x5363d0L, 0x25b496L, 0xab0ec2L, 0x38d8b1L, 0x92fb4fL, 0xb106d9L, 0xa89716L, 0x379cdbL, 0xa75b40L, 0x33e959L, 0xb34b6eL, 0x5f20e7L, 0xfc8e86L, 0xf66358L, 0x7cf95aL, 0xb7d498L, 0x4cd274L, 0x626e3bL, 0xb42116L, 0xf76c17L, 0xa939a7L, 0x745680L, 0xf9b0acL, 0xb529d5L, 0x8eae88L, 0xd1f989L, 0x9d1662L, 0x647fb9L, 0xeb15bbL, 0x3cc896L, 0x6f3411L, 0xf5ca13L, 0xaa0f4fL, 0xddb6a0L, 0x644ca2L, 0x3dd155L, 0xa9dc38L, 0xeaaf8dL, 0xd3d7f0L, 0x6a11a2L, 0xa628b6L, 0xd29c1aL, 0x209b73L, 0xc2c553L, 0xcd79abL, 0x721b37L, 0x8daf15L, 0xb2ee8cL, 0x144517L, 0xa34adcL, 0x505c2bL, 0x9f975aL, 0x53dc96L, 0xc5df90L, 0x71b509L, 0x5131d3L, 0x3f1677L, 0x90c952L, 0x8e51a6L, 0xe70557L, 0x485be2L, 0xd9a63cL, 0x1cf13dL, 0x951f65L, 0x64f87fL, 0x374945L, 0x9fd3bdL, 0x4f29a1L, 0x0ef8ddL, 0x9cc2ccL, 0x49d41bL, 0x945309L, 0x2b957aL, 0xd9af88L, 0xf9ffa7L, 0x5666daL, 0xd48d19L, 0xfd4cfbL, 0xf129b6L, 0x95982bL, 0xf57fc9L, 0x138b53L, 0x4d2abbL, 0xb1ce9aL, 0x52bca4L, 0x24a73cL, 0xefc415L, 0x476f07L, 0x052cc5L, 0x1258c9L, 0x96771fL, 0xb2e0a5L, 0x7dca67L, 0xd786d7L, 0x77390bL, 0x3ea262L, 0x33baf3L, 0xfabe1cL, 0xdaaa60L, 0x4de930L, 0x76a912L, 0x5e959fL, 0x29b278L, 0xc4a86bL, 0x165b46L, 0xf713e6L, 0x96c61aL, 0xcb4313L, 0xcec37eL, 0x2c6687L, 0x47c74eL, 0xd8de91L, 0x809a5aL, 0xa92725L, 0x9f7b8cL, 0xbd20e8L, 0x591f9aL, 0xc2b2d1L, 0x0dd450L, 0x6ef7c4L, 0x8357b5L, 0x842d5dL, 0x3f7cbbL, 0x36d9e1L, 0x593b7eL, 0xe8e3d4L, 0x0b125aL, 0xa0b2c7L, 0x2f8575L, 0x3a39cdL, 0x99bb3dL, 0xa2cd91L, 0x608b4fL, 0x432256L, 0x9a9a31L, 0x4c67c1L, 0x1e5259L, 0x951194L, 0x64eaaeL, 0xfc2d1fL, 0x89f70eL, 0xd3105bL, 0x8babaaL, 0x4724d3L, 0x1dcbacL, 0x5fdad7L, 0xbcb184L, 0xdc685eL, 0x1e7789L, 0xd3926dL, 0x0c6579L, 0x613291L, 0x5a6e1eL, 0x551898L, 0xc92d10L, 0x55bb29L, 0x95c222L, 0xdf053aL, 0xefb1a9L, 0x1c250dL, 0x6ac6f7L, 0x246b05L, 0x9a5de4L, 0x8a871dL, 0x9c6f62L, 0x316d3eL, 0xf5f8bbL, 0xca8e16L, 0x9ef05aL, 0xc36375L, 0x7c64f2L, 0xfee144L, 0x0125d9L, 0x5e05d2L, 0x80d6e9L, 0x9d0d58L, 0x564b38L, 0x94a6e1L, 0xd3028aL, 0xb7ab0fL, 0x4aaa05L, 0x75484eL, 0x6858adL, 0x9cdef2L, 0xba63cfL, 0xcf6651L, 0x225e4eL, 0xc91158L, 0xb83b1eL, 0xceb5d9L, 0xd7fb44L, 0x62b442L, 0x21ea39L, 0x5b2373L, 0x03456aL, 0x706ba4L, 0xb48c4dL, 0x242a33L, 0xe0256eL, 0x111415L, 0x47abd8L, 0xec89c7L, 0x345df2L, 0x0daf8eL, 0x19eeb7L, 0x330ae9L, 0x2578b7L, 0xf273f7L, 0x888d2aL, 0x26b93eL, 0x568c8eL, 0x5aaaefL, 0x9d8fc2L, 0xb53d07L, 0x8bb0c9L, 0x298de2L, 0xa68197L, 0x1d9919L, 0xdb3658L, 0x2f8f5bL, 0x741f7eL, 0x6b578aL, 0x3f3c6dL, 0x9723c2L, 0xf78d72L, 0x4bd3ddL, 0x105f5aL, 0xf3dea1L, 0x6ab074L, 0x27ab22L, 0x4d2261L, 0x0d374cL, 0x46e94cL, 0x4c279fL, 0xd8f21bL, 0xce0aacL, 0x28e273L, 0x81dbd3L, 0xfc8af3L, 0x5a16c9L, 0xfb04d3L, 0x82594aL, 0xcb5b64L, 0xd79141L, 0x3ba527L, 0x531f55L, 0xb39251L, 0xa53874L, 0x683485L, 0x1ddf78L, 0x7394d0L, 0xe50336L, 0xc4564bL, 0x93d283L, 0xde6d55L, 0x419dacL, 0x0aa46cL, 0xedd969L, 0x8379d6L, 0x71d740L, 0xd966f6L, 0x8c137aL, 0x50d20eL, 0xafc385L, 0xa720abL, 0x3b2d11L, 0xa5c907L, 0x75203bL, 0x40545dL, 0x906534L, 0xf1638eL, 0x152631L, 0xd19597L, 0x7df66eL, 0xb6e55eL, 0x82d344L, 0xa5e0beL, 0x60fd1bL, 0x2845f3L, 0x169ec2L, 0x8c34bfL, 0x31585dL, 0x0f45d1L, 0x539991L, 0xbff36fL, 0x0b6415L, 0x2762d2L, 0xcce845L, 0xae230dL, 0x2cb8c6L, 0xd9dcadL, 0x6fb97dL, 0xccac0eL, 0xee414fL, 0x00f155L, 0x7c193bL, 0x434f91L, 0x745eb7L, 0xeb5109L, 0x14aa46L, 0x97b1f6L, 0x16c9d7L, 0xb246a3L, 0xa138cdL, 0x5cb238L, 0x4dfbd1L, 0x4811cdL, 0x9a6765L, 0xd52717L, 0xa6ab81L, 0xa83fb4L, 0x8edde9L, 0x4d714fL, 0x5ba612L, 0x41b8e9L, 0xc9372bL, 0x70149aL, 0x2a9c63L, 0xa3f3dfL, 0x1334e3L, 0xd9baabL, 0x67c129L, 0x6cc319L, 0x193219L, 0x10bdd1L, 0x2fa84fL, 0x6711cfL, 0xc142acL, 0x61efceL, 0xfba5beL, 0x92f1d3L, 0x789a23L, 0x37e34cL, 0xc25216L, 0x6fea6aL, 0xe4ebe9L, 0x263de9L, 0x4c0f53L, 0xbf0d67L, 0x8f31d3L, 0x1197faL, 0xb776a6L, 0xcf9da3L, 0x5a3187L, 0x645fccL, 0x5cd047L, 0xbc2459L, 0x4fd04aL, 0x8e1544L, 0x9ecaffL, 0xd4c05dL, 0x642346L, 0x15850eL, 0x73aa55L, 0xae2057L, 0x2886a3L, 0x199707L, 0xcc1ad1L, 0x0f537cL, 0x29b580L, 0x479331L, 0x11d609L, 0xe5b02fL };
		}
	}

	private static long[] constructCodes() {
		long[] codes = new long[453];
		System.arraycopy(ConstructCodes0.constructCodes(), 0, codes, 0, 453);
		return codes;
	}

	public AcTag24h6()
	{
		super(ImageLayout.Factory.createFromString("Sonar", "ddddddddbbbbbddbwwwbddbwwwbddbwwwbddbbbbbdddddddd"), 6, constructCodes());
	}
}

