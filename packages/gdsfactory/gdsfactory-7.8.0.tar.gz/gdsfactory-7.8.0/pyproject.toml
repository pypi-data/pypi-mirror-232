# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html

[build-system]
build-backend = "flit_core.buildapi"
requires = ["flit_core >=3.2,<4"]

[project]
authors = [{name = "gdsfactory community", email = "contact@gdsfactory.com"}]
classifiers = [
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Operating System :: OS Independent"
]
dependencies = [
  "flatdict",
  "gdstk<1",
  "jinja2",
  "loguru<1",
  "matplotlib",
  "numpy",
  "omegaconf<3",
  "orjson",
  "pandas",
  "pydantic>=2,<2.4",
  "pydantic-settings",
  "pydantic-extra-types",
  "pyyaml",
  "qrcode",
  "rectpack",
  "rich",
  "scipy",
  "shapely<3",
  "toolz",
  "tqdm",
  "types-PyYAML",
  "typer",
  "watchdog"
]
description = "python library to generate GDS layouts"
keywords = ["eda", "photonics", "python"]
license = {file = "LICENSE"}
name = "gdsfactory"
readme = "README.md"
requires-python = ">=3.10"
version = "7.8.0"

[project.optional-dependencies]
cad = [
  "freetype-py",
  "ipycytoscape",
  "ipyevents",
  "ipykernel",
  "ipympl",
  "ipytree",
  "ipywidgets",
  "jupytext",
  "kweb==1.1.9",
  "kfactory[git,ipy]>=0.8.4,<0.9",
  "mapbox_earcut",
  "networkx",
  "pyglet<2",
  "scikit-image",
  "trimesh"
]
dev = [
  "autotyping",
  "black>=21",
  "doc8",
  "ipykernel",
  "jsondiff",
  "mypy",
  "pre-commit",
  "pylsp-mypy",
  "pytest",
  "pytest-cov",
  "pytest_regressions",
  "types-PyYAML",
  "types-cachetools",
  "xdoctest"
]
docs = [
  "autodoc_pydantic>=2.0.1,<3",
  "jupytext",
  "jupyter-book>=0.15.1,<0.16",
  "plotly"
]
full = [
  "gplugins[database,devsim,femwell,gmsh,meow,meshwell,ray,sax,schematic,tidy3d,web]"
]

[project.scripts]
gf = "gdsfactory.cli:app"

[tool.black]
exclude = '''  # Specify the files/dirs that should be ignored by the black formatter
/(
    \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | env
    | _build
    | buck-out
    | build
    | dist
 )/
'''
include = '\.pyi?$'
line-length = 88
target-version = ['py310']

[tool.codespell]
ignore-words-list = "te, te/tm, te, ba, fpr, fpr_spacing, ro, nd, donot, schem"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
version_files = ["pyproject.toml:version"]

[tool.flake8]
exclude = [
  ".git",
  "__pycache__",
  "lib",
  "docs/source/conf.py",
  "build",
  "dist",
  ".ipynb_checkpoints",
  ".tox",
  "extra",
  "deprecated",
  "gdslib",
  ".mypy_cache",
  "venv",
  "devsim"
]
extend-ignore = "RST303"
ignore = [
  "E501",
  "E503",
  "E722",
  "W503",
  "W503",
  "E203",
  "B950",
  "B305",
  "B018",
  "B902",
  "B020",
  "B905"
]
max-complexity = 57
max-line-length = 88
select = ["B", "C", "E", "F", "W", "T4", "B9"]

[tool.jupytext]
cell_metadata_filter = "-all"
notebook_metadata_filter = "-all"

[tool.mypy]
python_version = "3.10"
strict = true

[tool.pylsp-mypy]
enabled = true
live_mode = true
strict = true

[tool.pytest.ini_options]
# addopts = --tb=no
addopts = '--tb=short --ignore=gdsfactory/schematic_editor.py --ignore=gdsfactory/klayout_tech.py --ignore=gdsfactory/geometry/maskprep_flat.py --ignore=gdsfactory/fill_klayout.py'
datadir = "test-data-regression"
norecursedirs = [
  "gdsfactory/samples/notebooks",
  "gdsfactory/geometry",
  "gdsfactory/plugins",
  "gdsfactory/simulation",
  "extra",
  "gdsfactory/watch.py",
  "gdsfactory/schematic_editor.py",
  "gdsfactory/generic_tech/klayout",
  "docs"
]
python_files = ["gdsfactory/*.py", "tests/*.py"]
testpaths = ["gdsfactory/", "tests"]

[tool.ruff]
extend-exclude = ['docs/notebooks/']
fix = true
ignore = [
  "E501",  # line too long, handled by black
  "B008",  # do not perform function calls in argument defaults
  "C901",  # too complex
  "B905",  # `zip()` without an explicit `strict=` parameter
  "C408",  # C408 Unnecessary `dict` call (rewrite as a literal)
  "B904",
  "B028"  # stacklevel
]
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "C",  # flake8-comprehensions
  "B",  # flake8-bugbear
  "UP"
]

[tool.ruff.per-file-ignores]
"docs/notebooks/*.py" = ["F821", 'E402', 'F405', 'F403']
"gdsfactory/typings.py" = ["UP035"]

[tool.setuptools.package-data]
mypkg = [
  "*.gds",
  "*.lym",
  "*.lyp",
  "*.lyt",
  "*.csv",
  "*.yaml",
  "*.md",
  "LICENSE"
]

[tool.setuptools.packages]
find = {}
