# coding: utf-8

"""
    Platform API

    _OpenAPI specification for the **Platform API** of **Empire**, the allocation and nomination platform of BritNed_  ---  Additional documentation available in the API's [GitHub repository](https://github.com/britned/empire-platform-api)   # noqa: E501

    The version of the OpenAPI document: 1.0.4
    Contact: britned.info@britned.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import empire_platform_api_public_client
from empire_platform_api_public_client.models.invoice_line_item import InvoiceLineItem  # noqa: E501
from empire_platform_api_public_client.rest import ApiException

class TestInvoiceLineItem(unittest.TestCase):
    """InvoiceLineItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test InvoiceLineItem
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InvoiceLineItem`
        """
        model = empire_platform_api_public_client.models.invoice_line_item.InvoiceLineItem()  # noqa: E501
        if include_optional :
            return InvoiceLineItem(
                id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09', 
                code = 'NL_GB_EXPLICIT_ANNUAL_AUCTIONS', 
                direction = 'GB_NL', 
                delivery_month = 0, 
                net_amount = 1.337, 
                vat_rate = 0, 
                vat_amount = 1.337, 
                gross_amount = 1.337, 
                manually_added = True
            )
        else :
            return InvoiceLineItem(
                code = 'NL_GB_EXPLICIT_ANNUAL_AUCTIONS',
                direction = 'GB_NL',
                delivery_month = 0,
                net_amount = 1.337,
                vat_rate = 0,
                vat_amount = 1.337,
                gross_amount = 1.337,
                manually_added = True,
        )
        """

    def testInvoiceLineItem(self):
        """Test InvoiceLineItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
