# coding: utf-8

"""
    Platform API

    _OpenAPI specification for the **Platform API** of **Empire**, the allocation and nomination platform of BritNed_  ---  Additional documentation available in the API's [GitHub repository](https://github.com/britned/empire-platform-api)   # noqa: E501

    The version of the OpenAPI document: 1.0.5
    Contact: britned.info@britned.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import empire_platform_api_public_client
from empire_platform_api_public_client.models.aggregated_nominations_nl_mtus_inner import AggregatedNominationsNlMtusInner  # noqa: E501
from empire_platform_api_public_client.rest import ApiException

class TestAggregatedNominationsNlMtusInner(unittest.TestCase):
    """AggregatedNominationsNlMtusInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AggregatedNominationsNlMtusInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AggregatedNominationsNlMtusInner`
        """
        model = empire_platform_api_public_client.models.aggregated_nominations_nl_mtus_inner.AggregatedNominationsNlMtusInner()  # noqa: E501
        if include_optional :
            return AggregatedNominationsNlMtusInner(
                mtu = '2022-01-04T10:00Z', 
                values = [
                    empire_platform_api_public_client.models.aggregated_nominations_mtu_value.AggregatedNominationsMtuValue(
                        direction = 'GB_NL', 
                        value = 56, )
                    ], 
                netted_nominations = empire_platform_api_public_client.models.aggregated_nominations_mtu_netted_nominations.AggregatedNominationsMtuNettedNominations(
                    direction = 'GB_NL', 
                    flow = 56, ), 
                eprogram_values = empire_platform_api_public_client.models.aggregated_nominations_nl_mtus_inner_eprogram_values.AggregatedNominationsNl_mtus_inner_eprogramValues(
                    participant = 56, 
                    system = 56, )
            )
        else :
            return AggregatedNominationsNlMtusInner(
                mtu = '2022-01-04T10:00Z',
                values = [
                    empire_platform_api_public_client.models.aggregated_nominations_mtu_value.AggregatedNominationsMtuValue(
                        direction = 'GB_NL', 
                        value = 56, )
                    ],
                netted_nominations = empire_platform_api_public_client.models.aggregated_nominations_mtu_netted_nominations.AggregatedNominationsMtuNettedNominations(
                    direction = 'GB_NL', 
                    flow = 56, ),
                eprogram_values = empire_platform_api_public_client.models.aggregated_nominations_nl_mtus_inner_eprogram_values.AggregatedNominationsNl_mtus_inner_eprogramValues(
                    participant = 56, 
                    system = 56, ),
        )
        """

    def testAggregatedNominationsNlMtusInner(self):
        """Test AggregatedNominationsNlMtusInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
