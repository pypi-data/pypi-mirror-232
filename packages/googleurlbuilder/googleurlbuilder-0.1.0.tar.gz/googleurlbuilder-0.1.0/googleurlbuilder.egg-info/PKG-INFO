Metadata-Version: 2.1
Name: googleurlbuilder
Version: 0.1.0
Summary: Simple pure Python Google URL generator based on google(.com) advanced search.
Author: alexandrerbb
License: MIT License
        
        Copyright (c) 2023 alexandrerbb
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://alexandrerbb.github.io/Google-URL-Builder/
Project-URL: Source, https://github.com/alexandrerbb/Google-URL-Builder
Keywords: google,url,generator,generate,link
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE

# Google URL Builder.

Simple pure Python Google URL generator based on 
[Google advanced search](https://www.google.com/advanced_search).

### Why?

In some development cases, you may need to generate Google search URLs without the wish 
to request Google(.com).

<ins>In example :</ins>
-   for displaying/providing those URLs directly to the end user.
-   to have more control over what your code makes.


### Package principles.

-   Pure Python â†’ No more depedencies needed.
-   Strong typing.

## Examples.

### Import package.


```python
from googleurlbuilder import (
    GoogleURL,
    SearchFilters,
    parameters as pr, # Aliases are optionnal.
    # Query parameters.
    operators as op,
    # Operators over query parameters.
    filters as ft,
    # Filters.
)
```

### Simple use case.


```python
url = GoogleURL((pr.Words(["search", "google"]) + pr.ExactPhrases(["google search"])))

print(url.compute_url())
```

    https://google.com/search?q=%28%28search+google%29+%22google+search%22%29
    

### Use filters.


```python
url = GoogleURL(
    query=pr.Words(["search", "google"]),
    filters=SearchFilters(language=ft.Languages.French),
    tld="fr",
)

print(url.compute_url())
```

    https://google.fr/search?lr=lang_fr&q=%28search+google%29
    

### Use operators over search parameters.


```python
query = op.Or(pr.Words(["search"]), pr.ExactPhrases(["google"]))
print(query)
query = pr.Words(["search"]) | pr.ExactPhrases(["google"])  # equivalent.
print(query)
```

    (search OR "google")
    (search OR "google")
    
