// *****************************************************
// SlurmExecutor
// https://github.com/nextflow-io/nextflow/blob/master/modules/nextflow/src/main/groovy/nextflow/executor/SlurmExecutor.groovy
// *****************************************************

singularity.autoMounts = true

profiles {
    slurm {
        slurm.enabled          = true
        singularity.enabled    = true
        params.enable_conda    = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
}

process {
    executor='slurm'
    queueSize = 15
    pollInterval = '5 min'
    dumpInterval = '6 min'
    queueStatInterval = '5 min'
    exitReadTimeout = '13 min'
    killBatchSize = 30
    submitRateLimit = '20 min'
    maxRetries = 3
    cache = 'lenient'
    errorStrategy = 'retry'

    //****************************************
    // Defaults
    //****************************************

    // In order to set a default configuration
    label = 'process_medium'

    //****************************************
    // Nextflow Default Labels
    //****************************************

    {% for key in default_processes.keys() %}
    withLabel:process_{{key}} {
        queue = '{{default_processes[key].queue}}'
        cpus = {{ default_processes[key].vcpu }}
        {% if use_memory %}
        memory = '{{ default_processes[key].scheduleable_memory_gib }}GB'
        clusterOptions = '--exclusive'
        {% else %}
        // memory = '{{ default_processes[key].scheduleable_memory_gib }}GB'
        memory = ''
        clusterOptions = '--exclusive --constraint {{default_processes[key].constraint}}'
        {% endif %}
    }
    {% endfor %}

    //****************************************
    // Nextflow PCluster Labels
    //****************************************

    {% for key in processes.keys() %}
    withLabel:process_{{processes[key].label}} {
        cpus = {{ processes[key].vcpu }}
        queue = '{{processes[key].queue}}'
        {% if use_memory %}
        memory = '{{ processes[key].scheduleable_memory_gib }}GB'
        clusterOptions = '--constraint {{processes[key].constraint}}'
        {% else %}
        // memory = '{{ processes[key].scheduleable_memory_gib }}GB'
        memory = ''
        clusterOptions = '--exclusive --constraint {{processes[key].constraint}}'
        {% endif %}
    }
    {% endfor %}
}
