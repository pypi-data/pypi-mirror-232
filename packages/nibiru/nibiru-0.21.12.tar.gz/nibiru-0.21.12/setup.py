# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['nibiru',
 'nibiru.crypto',
 'nibiru.jsonrpc',
 'nibiru.msg',
 'nibiru.pytypes',
 'nibiru.query_clients',
 'nibiru.tmrpc',
 'nibiru_proto',
 'nibiru_proto.amino',
 'nibiru_proto.cosmos.app.runtime.v1alpha1',
 'nibiru_proto.cosmos.app.v1alpha1',
 'nibiru_proto.cosmos.auth.module.v1',
 'nibiru_proto.cosmos.auth.v1beta1',
 'nibiru_proto.cosmos.authz.module.v1',
 'nibiru_proto.cosmos.authz.v1beta1',
 'nibiru_proto.cosmos.autocli.v1',
 'nibiru_proto.cosmos.bank.module.v1',
 'nibiru_proto.cosmos.bank.v1beta1',
 'nibiru_proto.cosmos.base.abci.v1beta1',
 'nibiru_proto.cosmos.base.kv.v1beta1',
 'nibiru_proto.cosmos.base.node.v1beta1',
 'nibiru_proto.cosmos.base.query.v1beta1',
 'nibiru_proto.cosmos.base.reflection.v1beta1',
 'nibiru_proto.cosmos.base.reflection.v2alpha1',
 'nibiru_proto.cosmos.base.snapshots.v1beta1',
 'nibiru_proto.cosmos.base.store.v1beta1',
 'nibiru_proto.cosmos.base.tendermint.v1beta1',
 'nibiru_proto.cosmos.base.v1beta1',
 'nibiru_proto.cosmos.capability.module.v1',
 'nibiru_proto.cosmos.capability.v1beta1',
 'nibiru_proto.cosmos.consensus.module.v1',
 'nibiru_proto.cosmos.consensus.v1',
 'nibiru_proto.cosmos.crisis.module.v1',
 'nibiru_proto.cosmos.crisis.v1beta1',
 'nibiru_proto.cosmos.crypto.ed25519',
 'nibiru_proto.cosmos.crypto.hd.v1',
 'nibiru_proto.cosmos.crypto.keyring.v1',
 'nibiru_proto.cosmos.crypto.multisig',
 'nibiru_proto.cosmos.crypto.multisig.v1beta1',
 'nibiru_proto.cosmos.crypto.secp256k1',
 'nibiru_proto.cosmos.crypto.secp256r1',
 'nibiru_proto.cosmos.distribution.module.v1',
 'nibiru_proto.cosmos.distribution.v1beta1',
 'nibiru_proto.cosmos.evidence.module.v1',
 'nibiru_proto.cosmos.evidence.v1beta1',
 'nibiru_proto.cosmos.feegrant.module.v1',
 'nibiru_proto.cosmos.feegrant.v1beta1',
 'nibiru_proto.cosmos.genutil.module.v1',
 'nibiru_proto.cosmos.genutil.v1beta1',
 'nibiru_proto.cosmos.gov.module.v1',
 'nibiru_proto.cosmos.gov.v1',
 'nibiru_proto.cosmos.gov.v1beta1',
 'nibiru_proto.cosmos.group.module.v1',
 'nibiru_proto.cosmos.group.v1',
 'nibiru_proto.cosmos.mint.module.v1',
 'nibiru_proto.cosmos.mint.v1beta1',
 'nibiru_proto.cosmos.msg.v1',
 'nibiru_proto.cosmos.nft.module.v1',
 'nibiru_proto.cosmos.nft.v1beta1',
 'nibiru_proto.cosmos.orm.module.v1alpha1',
 'nibiru_proto.cosmos.orm.query.v1alpha1',
 'nibiru_proto.cosmos.orm.v1',
 'nibiru_proto.cosmos.orm.v1alpha1',
 'nibiru_proto.cosmos.params.module.v1',
 'nibiru_proto.cosmos.params.v1beta1',
 'nibiru_proto.cosmos.query.v1',
 'nibiru_proto.cosmos.reflection.v1',
 'nibiru_proto.cosmos.slashing.module.v1',
 'nibiru_proto.cosmos.slashing.v1beta1',
 'nibiru_proto.cosmos.staking.module.v1',
 'nibiru_proto.cosmos.staking.v1beta1',
 'nibiru_proto.cosmos.tx.config.v1',
 'nibiru_proto.cosmos.tx.signing.v1beta1',
 'nibiru_proto.cosmos.tx.v1beta1',
 'nibiru_proto.cosmos.upgrade.module.v1',
 'nibiru_proto.cosmos.upgrade.v1beta1',
 'nibiru_proto.cosmos.vesting.module.v1',
 'nibiru_proto.cosmos.vesting.v1beta1',
 'nibiru_proto.cosmos_proto',
 'nibiru_proto.gogoproto',
 'nibiru_proto.google.api',
 'nibiru_proto.nibiru',
 'nibiru_proto.nibiru.epochs',
 'nibiru_proto.nibiru.epochs.v1',
 'nibiru_proto.nibiru.genmsg',
 'nibiru_proto.nibiru.genmsg.v1',
 'nibiru_proto.nibiru.inflation',
 'nibiru_proto.nibiru.inflation.v1',
 'nibiru_proto.nibiru.oracle',
 'nibiru_proto.nibiru.oracle.v1',
 'nibiru_proto.nibiru.perp',
 'nibiru_proto.nibiru.perp.v2',
 'nibiru_proto.nibiru.spot',
 'nibiru_proto.nibiru.spot.v1',
 'nibiru_proto.nibiru.stablecoin',
 'nibiru_proto.nibiru.stablecoin.v1',
 'nibiru_proto.nibiru.sudo',
 'nibiru_proto.nibiru.sudo.v1',
 'nibiru_proto.tendermint.abci',
 'nibiru_proto.tendermint.crypto',
 'nibiru_proto.tendermint.libs.bits',
 'nibiru_proto.tendermint.p2p',
 'nibiru_proto.tendermint.types',
 'nibiru_proto.tendermint.version']

package_data = \
{'': ['*']}

install_requires = \
['bech32>=1.2.0,<2.0.0',
 'bip32>=3.4,<4.0',
 'ecdsa>=0.18.0,<0.19.0',
 'grpcio>=1.58.0,<2.0.0',
 'mnemonic>=0.20,<0.21',
 'packaging>=23.1,<24.0',
 'protobuf>=4.24.3,<5.0.0',
 'python-dotenv>=1.0.0,<2.0.0',
 'requests>=2.31.0,<3.0.0',
 'websocket-client>=1.6.3,<2.0.0']

setup_kwargs = {
    'name': 'nibiru',
    'version': '0.21.12',
    'description': 'Python SDK for interacting with Nibiru.',
    'long_description': '# Python SDK - Nibiru Chain    <!-- omit in toc -->\n\n> Python-based client for interacting with the Nibiru blockchain.\n\n<!-- Badges -->\n\n[![Nibiru Test workflow][tests-badge]][tests-workflow]\n[![Examples tests][examples-badge]][tests-example]\n[![PyPI Version][pypi-image]][pypi-url]\n[![][documentation-image]][documentation-url]\n[![][discord-badge]][discord-url]\n[![][stars-image]][stars-url]\n[![MIT license][license-badge]][license-link]\n\n<!-- Badges links -->\n\n<!-- pypi -->\n[pypi-image]: https://img.shields.io/pypi/v/nibiru\n[pypi-url]: https://pypi.org/project/nibiru/\n[stars-image]: https://img.shields.io/github/stars/NibiruChain?style=social\n[stars-url]: https://github.com/NibiruChain\n[documentation-image]: https://readthedocs.org/projects/nibiru-py/badge/?version=latest\n[documentation-url]: https://nibiru-py.readthedocs.io/en/latest/?badge=latest\n[discord-badge]: https://dcbadge.vercel.app/api/server/nibirufi?style=flat\n[discord-url]: https://discord.gg/nibirufi\n[license-badge]: https://img.shields.io/badge/License-MIT-blue.svg\n[license-link]: https://github.com/NibiruChain/py-sdk/blob/master/LICENSE\n[tests-badge]: https://github.com/NibiruChain/py-sdk/actions/workflows/pytests.yml/badge.svg\n[examples-badge]: https://github.com/NibiruChain/py-sdk/actions/workflows/notebooks.yml/badge.svg\n[tests-workflow]: https://github.com/NibiruChain/py-sdk/actions/workflows/pytests.yml\n[tests-example]: https://github.com/NibiruChain/py-sdk/actions/workflows/notebooks.yml\n\nThe `nibiru` package allows you to index, query, and send transactions on Nibiru Chain using Python. It provides access to market data for analysis, visualization, indicator development, algorithmic trading, strategy backtesting, bot programming, and related software engineering.\n\nThe package is intended to be used by coders, developers, technically-skilled traders and  data-scientists for building trading algorithms.\n\n## Try running nibiru sdk online\n\nOpen the google collab link below to try running Niburu code online: \n\n<a href="https://colab.research.google.com/github/NibiruChain/py-sdk/blob/main/examples/colab_notebook.ipynb" target="_blank">\n<p align="center">\n  <img src="https://colab.research.google.com/assets/colab-badge.svg" style="width: 300px;">\n</p>\n</a>\n\nOr go to the [examples folder](examples) to see the codes and run Jupyter notebooks locally.\n\n## Installation\n```bash\npip install nibiru  # requires Python 3.8+\n```\n\n## Usage\n\n### Querying the chain\n\n```python\nimport json\nfrom nibiru import Network, ChainClient\n\nclient = ChainClient(Network.testnet(2))\n\n# Query perp markets\nprint(json.dumps(client.query.perp.markets(), indent=4))\n\n# Query trader\'s positions\nprint(\n  json.dumps(\n    client.query.perp.all_positions(\n      trader="nibi1jle8khj3aennq24zx6g93aam9rt0fqhgyp4h52"\n    ),\n    indent=4)\n)\n```\n\n### Submitting transactions to the chain\n\nTo send a tx you need to authenticate using your wallet mnemonic or private key.\n\nTo create a new wallet, generate a mnemonic key using any service or using SDK call.\n\n```python\nimport json\nimport nibiru\nfrom nibiru import Network, ChainClient, Msg, PrivateKey\n\nmnemonic, private_key = PrivateKey.generate()\nprint(mnemonic)\n# Example OUTPUT:\n# enlist satisfy inspire hobby romance caught great neither kitchen unfair cage awesome update fade object eagle sun ordinary again journey spell gown tiger spin\n\n# Your wallet address\nprint(private_key.to_public_key().to_address().to_acc_bech32())\n# Example OUTPUT:\n# nibi1efsh4dq3ve58dgu68rxp8cfe4mgf89el0qfucm\n```\n\nStore your mnemonic key in a safe place and use it going forward. \n\nUse faucet to get some test tokens into your wallet: https://app.nibiru.fi/faucet\n\nСreate your chain client and authenticate with the mnemoniс generated\n\n```python\nmnemonic = "put your mnemonic here..."\nclient = ChainClient(network=Network.testnet(2))\nclient.authenticate(mnemonic=mnemonic)\nprint(client.address)\n```\n\nCheck your bank balances. If the faucet succeded - your wallet should not be empty.\n\n```python\nprint(client.query.get_bank_balances(client.address))\n```\n\n### Send tx\n\n```python\noutput = client.tx.execute_msgs(\n  Msg.perp.open_position(\n    pair=pair,\n    is_long=True,\n    margin=10,\n    leverage=2,\n  )\n)\nprint(output)\n```\n\nYou can broadcast any available transaction by passing its corresponding `Msg` to the `client.tx.execute_msgs` function.\n\n## Documentation Website\n\nDocumentation can be found here: [Nibiru-py documentation](https://nibiru-py.readthedocs.io/en/latest/index.html)\n\n- Learn more about opening and managing your spot and perp positions [here](https://nibiru-py.readthedocs.io/en/latest/nibiru.sdks.tx.html#nibiru-sdks-tx-package)\n- Learn about querying the chain using the Sdk [here](https://nibiru-py.readthedocs.io/en/latest/nibiru.clients.html#nibiru-clients-package)\n\n## Contributing\n\nPlease read [HACKING.MD](HACKING.md) for developer environment setup.\n',
    'author': 'Nibiru Chain',
    'author_email': 'dev@nibiru.fi',
    'maintainer': 'NibiruHeisenberg',
    'maintainer_email': 'dev@nibiru.fi',
    'url': 'https://github.com/NibiruChain/py-sdk',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.8.16,<4.0.0',
}


setup(**setup_kwargs)
