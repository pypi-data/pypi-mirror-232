"use strict";(self.webpackChunkjupyterlab_gist_it=self.webpackChunkjupyterlab_gist_it||[]).push([[74],{74:(t,e,i)=>{i.r(e),i.d(e,{GistItWidgetExtension:()=>g,default:()=>p});var s=i(680),a=i(778),o=i(119),n=i(769);const r={"X-GitHub-Api-Version":"2022-11-28"};class l extends a.Widget{constructor(t="",e=""){super({node:l.createFormNode(e,t)})}getValue(){const t=this.node.querySelector("input");let e="";return null!==t&&(e=t.value.trim()),e}static createFormNode(t,e){const i=document.createElement("div"),s=document.createElement("span"),a=document.createElement("div"),o=document.createElement("label"),n=document.createElement("input"),r=document.createElement("span");return s.innerHTML=t,i.appendChild(s),a.appendChild(i),r.textContent="Description: ",n.placeholder="",n.value=e,o.appendChild(r),o.appendChild(n),a.appendChild(o),a}}class c{constructor(t,e,i){if(null===t||""===t)throw new Error("A Personal Access Token is required");this.octokit=new n.Octokit({auth:t}),this.panel=e,this.model=i}getFiles(){return{[this.panel.title._label]:{content:this.model.toString()}}}async createGist(){const t=await(0,o.showDialog)({title:"Upload Gist",body:new l,checkbox:{label:"Private?",caption:"private",checked:!1}});let e,i;if("Cancel"===t.button.label)return{};e=!t.isChecked,i=t.value?t.value:"";const s=this.getFiles(),a={};try{const t=await this.octokit.request("POST /gists",{description:i,public:e,files:s,headers:r});a.gist_url=t.data.html_url,a.gist_id=t.data.id,a.create_date=t.data.created_at,o.Notification.success(`Created a new gist ${a.gist_id}`,{actions:[{label:"Copy URL",callback:()=>{void 0!==a.gist_url&&navigator.clipboard.writeText(a.gist_url)}},{label:"Open Gist",callback:()=>window.open(a.gist_url,"_blank")}],autoClose:1e4})}catch(t){return o.Notification.error("Failed to create Gist",{autoClose:5e3}),a}return this.model.setMetadata("gist_info",a),a}async updateGist(t){let e;try{e=await this.octokit.request(`GET /gists/${t.gist_id}`,{gist_id:t.gist_id,headers:r})}catch(t){if(404===t.status){console.log("Gist doesn't exist, but notebook metadata contains a Gist ID");const t=await(0,o.showDialog)({title:"Gist does not exist on GitHub but a Gist ID is stored in the notebook metadata. Create a new Gist instead?"});if("Cancel"===t.button.label)return{};if("Ok"===t.button.label)return this.createGist();throw new Error("Unexpected error")}throw o.Notification.error("Unexpected error with Gist It",{autoClose:5e3}),t}const i=await(0,o.showDialog)({title:"Gist already exists! Update Existing Gist?",body:new l(e.data.description,`Existing gist: <a href='${t.gist_url}'>${t.gist_id}</a>`)});let s;if("Cancel"===i.button.label)return{};s=i.value?i.value:"";const a={};try{const e=await this.octokit.request(`PATCH /gists/${t.gist_id}`,{description:s,files:this.getFiles(),headers:r});a.gist_url=e.data.html_url,a.gist_id=e.data.id,a.create_date=e.data.created_at,o.Notification.success(`Updated gist ${a.gist_id}`,{actions:[{label:"Copy URL",callback:()=>{void 0!==a.gist_url&&navigator.clipboard.writeText(a.gist_url)}},{label:"Open Gist",callback:()=>window.open(a.gist_url,"_blank")}],autoClose:1e4})}catch(t){o.Notification.error(`Failed to update gist ${a.gist_id}`,{autoClose:5e3})}return this.model.setMetadata("gist_info",a),a}}const d="jupyterlab_gist_it";class u extends a.Widget{constructor(t,e){super(),this._settings={personalAccessToken:""},this._panel=t,this._settingRegistry=e,this._settingRegistry.load(`${d}:settings`).then((t=>{this._updateSettings(t),t.changed.connect(this._updateSettings.bind(this))}),(t=>{console.error(`Could not load settings for ${d}: ${t}`)}));const i=this._panel.model,s=[];s.push(["gistItSend",new o.ToolbarButton({className:"gistItSend",iconClass:"fa fa-github ",onClick:async()=>{if(null===i)return;if(""===this._settings.personalAccessToken)return void window.alert("Please save a GitHub personal access token (with Gist access) in the Gist It settings.");let t=i.getMetadata("gist_info");const e=new c(this._settings.personalAccessToken,this._panel,i);t=void 0===t||void 0===t.gist_id?await e.createGist():await e.updateGist(t)},tooltip:"Gist It"})]),this._panel.content,s.reverse(),s.forEach((e=>{t.toolbar.insertItem(9,e[0],e[1])}))}_updateSettings(t){this._settings.personalAccessToken=t.get("personalAccessToken").composite}}class g{constructor(t){this._settingRegistry=t}createNew(t,e){return new u(t,this._settingRegistry)}}const p={id:d,description:"Upload Jupyter notebooks to GitHub Gist.",autoStart:!0,optional:[s.ISettingRegistry],activate:(t,e)=>{t.docRegistry.addWidgetExtension("Notebook",new g(e)),console.log("JupyterLab extension jupyterlab_gist_it is activated!")}}}}]);