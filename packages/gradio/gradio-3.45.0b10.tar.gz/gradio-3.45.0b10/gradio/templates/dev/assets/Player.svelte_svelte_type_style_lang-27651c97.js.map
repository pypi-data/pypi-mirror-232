{"version":3,"file":"Player.svelte_svelte_type_style_lang-27651c97.js","sources":["../../../../js/video/shared/utils.ts"],"sourcesContent":["import type { ActionReturn } from \"svelte/action\";\n\nexport const prettyBytes = (bytes: number): string => {\n\tlet units = [\"B\", \"KB\", \"MB\", \"GB\", \"PB\"];\n\tlet i = 0;\n\twhile (bytes > 1024) {\n\t\tbytes /= 1024;\n\t\ti++;\n\t}\n\tlet unit = units[i];\n\treturn bytes.toFixed(1) + \" \" + unit;\n};\n\nexport const playable = (): boolean => {\n\t// TODO: Fix this\n\t// let video_element = document.createElement(\"video\");\n\t// let mime_type = mime.lookup(filename);\n\t// return video_element.canPlayType(mime_type) != \"\";\n\treturn true; // FIX BEFORE COMMIT - mime import causing issues\n};\n\nexport function loaded(\n\tnode: HTMLVideoElement,\n\t{ autoplay }: { autoplay: boolean }\n): ActionReturn {\n\tasync function handle_playback(): Promise<void> {\n\t\tif (!autoplay) return;\n\t\tawait node.play();\n\t}\n\n\tnode.addEventListener(\"loadeddata\", handle_playback);\n\n\treturn {\n\t\tdestroy(): void {\n\t\t\tnode.removeEventListener(\"loadeddata\", handle_playback);\n\t\t}\n\t};\n}\n"],"names":[],"mappings":"AAEa,MAAA,WAAA,GAAc,CAAC,KAA0B,KAAA;AACrD,EAAA,IAAI,QAAQ,CAAC,GAAA,EAAK,IAAM,EAAA,IAAA,EAAM,MAAM,IAAI,CAAA,CAAA;AACxC,EAAA,IAAI,CAAI,GAAA,CAAA,CAAA;AACR,EAAA,OAAO,QAAQ,IAAM,EAAA;AACpB,IAAS,KAAA,IAAA,IAAA,CAAA;AACT,IAAA,CAAA,EAAA,CAAA;AAAA,GACD;AACA,EAAI,IAAA,IAAA,GAAO,MAAM,CAAC,CAAA,CAAA;AAClB,EAAA,OAAO,KAAM,CAAA,OAAA,CAAQ,CAAC,CAAA,GAAI,GAAM,GAAA,IAAA,CAAA;AACjC,EAAA;AAEO,MAAM,WAAW,MAAe;AAKtC,EAAO,OAAA,IAAA,CAAA;AACR,EAAA;AAEO,SAAS,MACf,CAAA,IAAA,EACA,EAAE,QAAA,EACa,EAAA;AACf,EAAA,eAAe,eAAiC,GAAA;AAC/C,IAAA,IAAI,CAAC,QAAA;AAAU,MAAA,OAAA;AACf,IAAA,MAAM,KAAK,IAAK,EAAA,CAAA;AAAA,GACjB;AAEA,EAAK,IAAA,CAAA,gBAAA,CAAiB,cAAc,eAAe,CAAA,CAAA;AAEnD,EAAO,OAAA;AAAA,IACN,OAAgB,GAAA;AACf,MAAK,IAAA,CAAA,mBAAA,CAAoB,cAAc,eAAe,CAAA,CAAA;AAAA,KACvD;AAAA,GACD,CAAA;AACD;;;;;;"}