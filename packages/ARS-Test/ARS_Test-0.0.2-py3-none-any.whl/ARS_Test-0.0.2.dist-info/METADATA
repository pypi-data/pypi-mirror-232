Metadata-Version: 2.1
Name: ARS-Test
Version: 0.0.2
Summary: Python package for ARS pass/fail test
Home-page: https://github.com/NCATSTranslator/ARS_Test
Author: Shervin Abdollahi, Mark Williams
Author-email: shervin.abdollahi@Nih.gov, mark.williams5@nih.gov
License: Public Domain
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Description-Content-Type: text/markdown
License-File: LICENSE.txt
Requires-Dist: requests
Requires-Dist: httpx
Requires-Dist: reasoner-validator
Requires-Dist: numpy
Requires-Dist: attrs (>=20.3.0)
Requires-Dist: click
Requires-Dist: twine


Translator ARS Pass/Fail Testing 
==========================================================

This testing framework performs single level pass/Fail analysis on queries it receives from the Test Runner. 

### ARS_Test Implementation
```bash
pip install ARS_Test 
```

### CLI
The command-line interface is the easiest way to run the ARS_Test
After installation, simply type ARS_Test --help to see required input arguments & options
- `ARS_Test`
    - env : the environment to run the queries against (dev|ci|test|prod)
    - query_type: treats(creative)
    - expected_output: TopAnswer|Acceptable|BadButForgivable|NeverShow
    - input_curie: normalized curie taken from assest.csv
    - output_curie: target output curie to do analysis on

- example:
ARS_Test --env 'test' --query_type 'treats(creative)' --expected_output 'TopAnswer' 'MONDO:0015564' 'PUBCHEM.COMPOUND:5284616' 

### python
``` python 
from ARS_Test.semantic_test import run_semantic_test
report = run_semantic_test(env, query_type, expected_output, input_curie, output_curie)
```









