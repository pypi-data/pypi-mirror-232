Metadata-Version: 2.1
Name: litelama
Version: 0.1.7
Summary: A lightweight LAMA model inference wrapper
Author-email: novita <novitalabs@gmail.com>
Requires-Python: >=3.8
Requires-Dist: kornia>=0.7.0
Requires-Dist: numpy>=1.24.4
Requires-Dist: omegaconf>=2.3.0
Requires-Dist: opencv-python>=4.8.0.76
Requires-Dist: pillow>=10.0.1
Requires-Dist: requests>=2.31.0
Requires-Dist: safetensors>=0.3.3
Requires-Dist: torch>=2.0.1
Description-Content-Type: text/markdown

# Lite Lama - A lightweight LAMA inference wrapper

```python
from litelama import LiteLama
import requests
from PIL import Image
from io import BytesIO


def download_image(url):
    response = requests.get(url)
    return Image.open(BytesIO(response.content)).convert("RGB")


img_url = "https://raw.githubusercontent.com/CompVis/latent-diffusion/main/data/inpainting_examples/overture-creations-5sI6fQgYIuo.png"
mask_url = "https://raw.githubusercontent.com/CompVis/latent-diffusion/main/data/inpainting_examples/overture-creations-5sI6fQgYIuo_mask.png"


lama = LiteLama()
lama.to("cuda:0")
init_image = download_image(img_url).resize((512, 512))
mask_image = download_image(mask_url).resize((512, 512))

lama.predict(init_image, mask_image).save("result.png")
```