# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: frequenz/api/common/v1/metrics/electrical.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from frequenz.api.common.v1 import metrics_pb2 as frequenz_dot_api_dot_common_dot_v1_dot_metrics__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n/frequenz/api/common/v1/metrics/electrical.proto\x12)frequenz.api.common.v1.metrics.electrical\x1a$frequenz/api/common/v1/metrics.proto\"\xad\x01\n\x02\x44\x43\x12\x37\n\x07voltage\x18\x01 \x01(\x0b\x32&.frequenz.api.common.v1.metrics.Metric\x12\x37\n\x07\x63urrent\x18\x02 \x01(\x0b\x32&.frequenz.api.common.v1.metrics.Metric\x12\x35\n\x05power\x18\x03 \x01(\x0b\x32&.frequenz.api.common.v1.metrics.Metric\"\xce\x10\n\x02\x41\x43\x12\x39\n\tfrequency\x18\x01 \x01(\x0b\x32&.frequenz.api.common.v1.metrics.Metric\x12\x37\n\x07\x63urrent\x18\x02 \x01(\x0b\x32&.frequenz.api.common.v1.metrics.Metric\x12>\n\x0epower_apparent\x18\x03 \x01(\x0b\x32&.frequenz.api.common.v1.metrics.Metric\x12<\n\x0cpower_active\x18\x04 \x01(\x0b\x32&.frequenz.api.common.v1.metrics.Metric\x12>\n\x0epower_reactive\x18\x05 \x01(\x0b\x32&.frequenz.api.common.v1.metrics.Metric\x12?\n\x0f\x65nergy_apparent\x18\x06 \x01(\x0b\x32&.frequenz.api.common.v1.metrics.Metric\x12Q\n\renergy_active\x18\x07 \x01(\x0b\x32:.frequenz.api.common.v1.metrics.electrical.AC.ActiveEnergy\x12U\n\x0f\x65nergy_reactive\x18\x08 \x01(\x0b\x32<.frequenz.api.common.v1.metrics.electrical.AC.ReactiveEnergy\x12W\n\x16harmonics_power_active\x18\t \x01(\x0b\x32\x37.frequenz.api.common.v1.metrics.electrical.AC.Harmonics\x12\x18\n\x10thd_power_active\x18\n \x01(\x02\x12\x46\n\x07phase_1\x18\x0b \x01(\x0b\x32\x35.frequenz.api.common.v1.metrics.electrical.AC.ACPhase\x12\x46\n\x07phase_2\x18\x0c \x01(\x0b\x32\x35.frequenz.api.common.v1.metrics.electrical.AC.ACPhase\x12\x46\n\x07phase_3\x18\r \x01(\x0b\x32\x35.frequenz.api.common.v1.metrics.electrical.AC.ACPhase\x1a\xc9\x01\n\x0c\x41\x63tiveEnergy\x12\x36\n\x06\x65nergy\x18\x01 \x01(\x0b\x32&.frequenz.api.common.v1.metrics.Metric\x12?\n\x0f\x65nergy_consumed\x18\x02 \x01(\x0b\x32&.frequenz.api.common.v1.metrics.Metric\x12@\n\x10\x65nergy_delivered\x18\x03 \x01(\x0b\x32&.frequenz.api.common.v1.metrics.Metric\x1a\xcd\x01\n\x0eReactiveEnergy\x12\x36\n\x06\x65nergy\x18\x01 \x01(\x0b\x32&.frequenz.api.common.v1.metrics.Metric\x12\x41\n\x11\x65nergy_capacitive\x18\x02 \x01(\x0b\x32&.frequenz.api.common.v1.metrics.Metric\x12@\n\x10\x65nergy_inductive\x18\x03 \x01(\x0b\x32&.frequenz.api.common.v1.metrics.Metric\x1a\xe9\x01\n\tHarmonics\x12\x12\n\nharmonic_1\x18\x01 \x01(\x02\x12\x12\n\nharmonic_2\x18\x02 \x01(\x02\x12\x12\n\nharmonic_3\x18\x03 \x01(\x02\x12\x12\n\nharmonic_4\x18\x04 \x01(\x02\x12\x12\n\nharmonic_5\x18\x05 \x01(\x02\x12\x12\n\nharmonic_6\x18\x06 \x01(\x02\x12\x12\n\nharmonic_7\x18\x07 \x01(\x02\x12\x12\n\nharmonic_8\x18\x08 \x01(\x02\x12\x12\n\nharmonic_9\x18\t \x01(\x02\x12\x13\n\x0bharmonic_10\x18\n \x01(\x02\x12\x13\n\x0bharmonic_11\x18\x0b \x01(\x02\x1a\xd7\x04\n\x07\x41\x43Phase\x12\x37\n\x07voltage\x18\x01 \x01(\x0b\x32&.frequenz.api.common.v1.metrics.Metric\x12\x37\n\x07\x63urrent\x18\x02 \x01(\x0b\x32&.frequenz.api.common.v1.metrics.Metric\x12<\n\x0cpower_active\x18\x03 \x01(\x0b\x32&.frequenz.api.common.v1.metrics.Metric\x12>\n\x0epower_reactive\x18\x04 \x01(\x0b\x32&.frequenz.api.common.v1.metrics.Metric\x12?\n\x0f\x65nergy_apparent\x18\x05 \x01(\x0b\x32&.frequenz.api.common.v1.metrics.Metric\x12Q\n\renergy_active\x18\x06 \x01(\x0b\x32:.frequenz.api.common.v1.metrics.electrical.AC.ActiveEnergy\x12U\n\x0f\x65nergy_reactive\x18\x07 \x01(\x0b\x32<.frequenz.api.common.v1.metrics.electrical.AC.ReactiveEnergy\x12W\n\x16harmonics_power_active\x18\x08 \x01(\x0b\x32\x37.frequenz.api.common.v1.metrics.electrical.AC.Harmonics\x12\x18\n\x10thd_power_active\x18\t \x01(\x02\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'frequenz.api.common.v1.metrics.electrical_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _globals['_DC']._serialized_start=133
  _globals['_DC']._serialized_end=306
  _globals['_AC']._serialized_start=309
  _globals['_AC']._serialized_end=2435
  _globals['_AC_ACTIVEENERGY']._serialized_start=1188
  _globals['_AC_ACTIVEENERGY']._serialized_end=1389
  _globals['_AC_REACTIVEENERGY']._serialized_start=1392
  _globals['_AC_REACTIVEENERGY']._serialized_end=1597
  _globals['_AC_HARMONICS']._serialized_start=1600
  _globals['_AC_HARMONICS']._serialized_end=1833
  _globals['_AC_ACPHASE']._serialized_start=1836
  _globals['_AC_ACPHASE']._serialized_end=2435
# @@protoc_insertion_point(module_scope)
