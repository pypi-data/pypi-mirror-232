"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Frequenz microgrid sensor definitions.

Copyright:
Copyright 2023 Frequenz Energy-as-a-Service GmbH

License:
MIT
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _SensorCategory:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _SensorCategoryEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SensorCategory.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    SENSOR_CATEGORY_UNSPECIFIED: _SensorCategory.ValueType  # 0
    """Unspecified"""
    SENSOR_CATEGORY_THERMOMETER: _SensorCategory.ValueType  # 1
    """Thermometer (temperature sensor)"""
    SENSOR_CATEGORY_HYGROMETER: _SensorCategory.ValueType  # 2
    """Hygrometer (humidity sensor)"""
    SENSOR_CATEGORY_BAROMETER: _SensorCategory.ValueType  # 3
    """Barometer (pressure sensor)."""
    SENSOR_CATEGORY_PYRANOMETER: _SensorCategory.ValueType  # 4
    """Pyranometer (solar irradiance sensor)."""
    SENSOR_CATEGORY_ANEMOMETER: _SensorCategory.ValueType  # 5
    """Anemometer (wind velocity and direction sensor)."""
    SENSOR_CATEGORY_ACCELEROMETER: _SensorCategory.ValueType  # 6
    """Accelerometers (acceleration sensor)."""
    SENSOR_CATEGORY_GENERAL: _SensorCategory.ValueType  # 7
    """General sensors, which do not fall in any of the above categories"""

class SensorCategory(_SensorCategory, metaclass=_SensorCategoryEnumTypeWrapper):
    """Enumerated sensor categories."""

SENSOR_CATEGORY_UNSPECIFIED: SensorCategory.ValueType  # 0
"""Unspecified"""
SENSOR_CATEGORY_THERMOMETER: SensorCategory.ValueType  # 1
"""Thermometer (temperature sensor)"""
SENSOR_CATEGORY_HYGROMETER: SensorCategory.ValueType  # 2
"""Hygrometer (humidity sensor)"""
SENSOR_CATEGORY_BAROMETER: SensorCategory.ValueType  # 3
"""Barometer (pressure sensor)."""
SENSOR_CATEGORY_PYRANOMETER: SensorCategory.ValueType  # 4
"""Pyranometer (solar irradiance sensor)."""
SENSOR_CATEGORY_ANEMOMETER: SensorCategory.ValueType  # 5
"""Anemometer (wind velocity and direction sensor)."""
SENSOR_CATEGORY_ACCELEROMETER: SensorCategory.ValueType  # 6
"""Accelerometers (acceleration sensor)."""
SENSOR_CATEGORY_GENERAL: SensorCategory.ValueType  # 7
"""General sensors, which do not fall in any of the above categories"""
global___SensorCategory = SensorCategory

class _SensorMetric:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _SensorMetricEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SensorMetric.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    SENSOR_METRIC_UNSPECIFIED: _SensorMetric.ValueType  # 0
    """Unspecified."""
    SENSOR_METRIC_TEMPERATURE: _SensorMetric.ValueType  # 1
    """Temperature.
    In Celsius (°C).
    """
    SENSOR_METRIC_HUMIDITY: _SensorMetric.ValueType  # 2
    """Humidity
    In percentage (%).
    """
    SENSOR_METRIC_PRESSURE: _SensorMetric.ValueType  # 3
    """Pressure
    In Pascal (Pa).
    """
    SENSOR_METRIC_IRRADIANCE: _SensorMetric.ValueType  # 4
    """Irradiance / Radiation flux
    In watts per square meter (W / m^2).
    """
    SENSOR_METRIC_VELOCITY: _SensorMetric.ValueType  # 5
    """Velocity
    In meters per second (m / s).
    """
    SENSOR_METRIC_ACCELERATION: _SensorMetric.ValueType  # 6
    """Acceleration.
    In meters per second per second (m / s^2)
    """
    SENSOR_METRIC_ANGLE: _SensorMetric.ValueType  # 7
    """Metric to represent angles, for metrics like direction.
    In angles with respect to the (magnetic) North (°).
    """
    SENSOR_METRIC_DEW_POINT: _SensorMetric.ValueType  # 8
    """Dew point.
    The temperature at which the air becomes saturated with water vapor.

    In Celsius (°C).
    """

class SensorMetric(_SensorMetric, metaclass=_SensorMetricEnumTypeWrapper):
    """Enumrated sensor metrics."""

SENSOR_METRIC_UNSPECIFIED: SensorMetric.ValueType  # 0
"""Unspecified."""
SENSOR_METRIC_TEMPERATURE: SensorMetric.ValueType  # 1
"""Temperature.
In Celsius (°C).
"""
SENSOR_METRIC_HUMIDITY: SensorMetric.ValueType  # 2
"""Humidity
In percentage (%).
"""
SENSOR_METRIC_PRESSURE: SensorMetric.ValueType  # 3
"""Pressure
In Pascal (Pa).
"""
SENSOR_METRIC_IRRADIANCE: SensorMetric.ValueType  # 4
"""Irradiance / Radiation flux
In watts per square meter (W / m^2).
"""
SENSOR_METRIC_VELOCITY: SensorMetric.ValueType  # 5
"""Velocity
In meters per second (m / s).
"""
SENSOR_METRIC_ACCELERATION: SensorMetric.ValueType  # 6
"""Acceleration.
In meters per second per second (m / s^2)
"""
SENSOR_METRIC_ANGLE: SensorMetric.ValueType  # 7
"""Metric to represent angles, for metrics like direction.
In angles with respect to the (magnetic) North (°).
"""
SENSOR_METRIC_DEW_POINT: SensorMetric.ValueType  # 8
"""Dew point.
The temperature at which the air becomes saturated with water vapor.

In Celsius (°C).
"""
global___SensorMetric = SensorMetric
