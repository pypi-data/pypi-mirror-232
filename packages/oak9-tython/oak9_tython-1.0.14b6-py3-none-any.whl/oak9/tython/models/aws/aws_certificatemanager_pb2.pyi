"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import shared.shared_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class CertificateDomainValidationOption(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    DOMAIN_NAME_FIELD_NUMBER: builtins.int
    HOSTED_ZONE_ID_FIELD_NUMBER: builtins.int
    VALIDATION_DOMAIN_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    domain_name: builtins.str
    hosted_zone_id: builtins.str
    validation_domain: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        domain_name: builtins.str = ...,
        hosted_zone_id: builtins.str = ...,
        validation_domain: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["domain_name", b"domain_name", "hosted_zone_id", b"hosted_zone_id", "resource_info", b"resource_info", "validation_domain", b"validation_domain"]) -> None: ...

global___CertificateDomainValidationOption = CertificateDomainValidationOption

@typing_extensions.final
class Certificate(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    CERTIFICATE_AUTHORITY_ARN_FIELD_NUMBER: builtins.int
    CERTIFICATE_TRANSPARENCY_LOGGING_PREFERENCE_FIELD_NUMBER: builtins.int
    DOMAIN_NAME_FIELD_NUMBER: builtins.int
    DOMAIN_VALIDATION_OPTIONS_FIELD_NUMBER: builtins.int
    SUBJECT_ALTERNATIVE_NAMES_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    VALIDATION_METHOD_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    certificate_authority_arn: builtins.str
    certificate_transparency_logging_preference: builtins.str
    domain_name: builtins.str
    @property
    def domain_validation_options(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CertificateDomainValidationOption]: ...
    @property
    def subject_alternative_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    validation_method: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        certificate_authority_arn: builtins.str = ...,
        certificate_transparency_logging_preference: builtins.str = ...,
        domain_name: builtins.str = ...,
        domain_validation_options: collections.abc.Iterable[global___CertificateDomainValidationOption] | None = ...,
        subject_alternative_names: collections.abc.Iterable[builtins.str] | None = ...,
        tags: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        validation_method: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["certificate_authority_arn", b"certificate_authority_arn", "certificate_transparency_logging_preference", b"certificate_transparency_logging_preference", "domain_name", b"domain_name", "domain_validation_options", b"domain_validation_options", "resource_info", b"resource_info", "subject_alternative_names", b"subject_alternative_names", "tags", b"tags", "validation_method", b"validation_method"]) -> None: ...

global___Certificate = Certificate

@typing_extensions.final
class CertificateManager(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CERTIFICATE_FIELD_NUMBER: builtins.int
    @property
    def certificate(self) -> global___Certificate: ...
    def __init__(
        self,
        *,
        certificate: global___Certificate | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["certificate", b"certificate"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["certificate", b"certificate"]) -> None: ...

global___CertificateManager = CertificateManager
