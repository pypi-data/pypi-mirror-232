"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import shared.shared_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class RepositoryLifecyclePolicy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    LIFECYCLE_POLICY_TEXT_FIELD_NUMBER: builtins.int
    REGISTRY_ID_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    lifecycle_policy_text: builtins.str
    registry_id: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        lifecycle_policy_text: builtins.str = ...,
        registry_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["lifecycle_policy_text", b"lifecycle_policy_text", "registry_id", b"registry_id", "resource_info", b"resource_info"]) -> None: ...

global___RepositoryLifecyclePolicy = RepositoryLifecyclePolicy

@typing_extensions.final
class Repository(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class RepositoryPolicyTextEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing_extensions.final
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing_extensions.final
    class ImageScanningConfigurationEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    LIFECYCLE_POLICY_FIELD_NUMBER: builtins.int
    REPOSITORY_NAME_FIELD_NUMBER: builtins.int
    REPOSITORY_POLICY_TEXT_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    IMAGE_TAG_MUTABILITY_FIELD_NUMBER: builtins.int
    IMAGE_SCANNING_CONFIGURATION_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    @property
    def lifecycle_policy(self) -> global___RepositoryLifecyclePolicy: ...
    repository_name: builtins.str
    @property
    def repository_policy_text(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    image_tag_mutability: builtins.str
    @property
    def image_scanning_configuration(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        lifecycle_policy: global___RepositoryLifecyclePolicy | None = ...,
        repository_name: builtins.str = ...,
        repository_policy_text: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        tags: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        image_tag_mutability: builtins.str = ...,
        image_scanning_configuration: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["lifecycle_policy", b"lifecycle_policy", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["image_scanning_configuration", b"image_scanning_configuration", "image_tag_mutability", b"image_tag_mutability", "lifecycle_policy", b"lifecycle_policy", "repository_name", b"repository_name", "repository_policy_text", b"repository_policy_text", "resource_info", b"resource_info", "tags", b"tags"]) -> None: ...

global___Repository = Repository

@typing_extensions.final
class ECR(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REPOSITORY_FIELD_NUMBER: builtins.int
    @property
    def repository(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Repository]: ...
    def __init__(
        self,
        *,
        repository: collections.abc.Iterable[global___Repository] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["repository", b"repository"]) -> None: ...

global___ECR = ECR
