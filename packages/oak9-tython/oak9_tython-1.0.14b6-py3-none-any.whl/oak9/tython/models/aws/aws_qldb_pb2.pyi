"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import shared.shared_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Ledger(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    PERMISSIONS_MODE_FIELD_NUMBER: builtins.int
    DELETION_PROTECTION_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    permissions_mode: builtins.str
    deletion_protection: builtins.bool
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    name: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        permissions_mode: builtins.str = ...,
        deletion_protection: builtins.bool = ...,
        tags: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["deletion_protection", b"deletion_protection", "name", b"name", "permissions_mode", b"permissions_mode", "resource_info", b"resource_info", "tags", b"tags"]) -> None: ...

global___Ledger = Ledger

@typing_extensions.final
class QLDB(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LEDGER_FIELD_NUMBER: builtins.int
    STREAM_FIELD_NUMBER: builtins.int
    @property
    def ledger(self) -> global___Ledger: ...
    @property
    def stream(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Stream]: ...
    def __init__(
        self,
        *,
        ledger: global___Ledger | None = ...,
        stream: collections.abc.Iterable[global___Stream] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["ledger", b"ledger"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ledger", b"ledger", "stream", b"stream"]) -> None: ...

global___QLDB = QLDB

@typing_extensions.final
class StreamKinesisConfiguration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    STREAM_ARN_FIELD_NUMBER: builtins.int
    AGGREGATION_ENABLED_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    stream_arn: builtins.str
    aggregation_enabled: builtins.bool
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        stream_arn: builtins.str = ...,
        aggregation_enabled: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["aggregation_enabled", b"aggregation_enabled", "resource_info", b"resource_info", "stream_arn", b"stream_arn"]) -> None: ...

global___StreamKinesisConfiguration = StreamKinesisConfiguration

@typing_extensions.final
class Stream(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    LEDGER_NAME_FIELD_NUMBER: builtins.int
    STREAM_NAME_FIELD_NUMBER: builtins.int
    ROLE_ARN_FIELD_NUMBER: builtins.int
    INCLUSIVE_START_TIME_FIELD_NUMBER: builtins.int
    EXCLUSIVE_END_TIME_FIELD_NUMBER: builtins.int
    KINESIS_CONFIGURATION_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    ledger_name: builtins.str
    stream_name: builtins.str
    role_arn: builtins.str
    inclusive_start_time: builtins.str
    exclusive_end_time: builtins.str
    @property
    def kinesis_configuration(self) -> global___StreamKinesisConfiguration: ...
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        ledger_name: builtins.str = ...,
        stream_name: builtins.str = ...,
        role_arn: builtins.str = ...,
        inclusive_start_time: builtins.str = ...,
        exclusive_end_time: builtins.str = ...,
        kinesis_configuration: global___StreamKinesisConfiguration | None = ...,
        tags: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["kinesis_configuration", b"kinesis_configuration", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["exclusive_end_time", b"exclusive_end_time", "inclusive_start_time", b"inclusive_start_time", "kinesis_configuration", b"kinesis_configuration", "ledger_name", b"ledger_name", "resource_info", b"resource_info", "role_arn", b"role_arn", "stream_name", b"stream_name", "tags", b"tags"]) -> None: ...

global___Stream = Stream
