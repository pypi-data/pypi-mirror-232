"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import shared.shared_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class RepositoryRepositoryTrigger(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    EVENTS_FIELD_NUMBER: builtins.int
    BRANCHES_FIELD_NUMBER: builtins.int
    CUSTOM_DATA_FIELD_NUMBER: builtins.int
    DESTINATION_ARN_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    @property
    def events(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def branches(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    custom_data: builtins.str
    destination_arn: builtins.str
    name: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        events: collections.abc.Iterable[builtins.str] | None = ...,
        branches: collections.abc.Iterable[builtins.str] | None = ...,
        custom_data: builtins.str = ...,
        destination_arn: builtins.str = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["branches", b"branches", "custom_data", b"custom_data", "destination_arn", b"destination_arn", "events", b"events", "name", b"name", "resource_info", b"resource_info"]) -> None: ...

global___RepositoryRepositoryTrigger = RepositoryRepositoryTrigger

@typing_extensions.final
class RepositoryS3(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    OBJECT_VERSION_FIELD_NUMBER: builtins.int
    BUCKET_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    object_version: builtins.str
    bucket: builtins.str
    key: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        object_version: builtins.str = ...,
        bucket: builtins.str = ...,
        key: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bucket", b"bucket", "key", b"key", "object_version", b"object_version", "resource_info", b"resource_info"]) -> None: ...

global___RepositoryS3 = RepositoryS3

@typing_extensions.final
class RepositoryCode(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    S3_FIELD_NUMBER: builtins.int
    BRANCH_NAME_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    @property
    def s3(self) -> global___RepositoryS3: ...
    branch_name: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        s3: global___RepositoryS3 | None = ...,
        branch_name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info", "s3", b"s3"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["branch_name", b"branch_name", "resource_info", b"resource_info", "s3", b"s3"]) -> None: ...

global___RepositoryCode = RepositoryCode

@typing_extensions.final
class Repository(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    REPOSITORY_NAME_FIELD_NUMBER: builtins.int
    TRIGGERS_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    REPOSITORY_DESCRIPTION_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    repository_name: builtins.str
    @property
    def triggers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RepositoryRepositoryTrigger]: ...
    @property
    def code(self) -> global___RepositoryCode: ...
    repository_description: builtins.str
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        repository_name: builtins.str = ...,
        triggers: collections.abc.Iterable[global___RepositoryRepositoryTrigger] | None = ...,
        code: global___RepositoryCode | None = ...,
        repository_description: builtins.str = ...,
        tags: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["code", b"code", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["code", b"code", "repository_description", b"repository_description", "repository_name", b"repository_name", "resource_info", b"resource_info", "tags", b"tags", "triggers", b"triggers"]) -> None: ...

global___Repository = Repository

@typing_extensions.final
class CodeCommit(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REPOSITORY_FIELD_NUMBER: builtins.int
    @property
    def repository(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Repository]: ...
    def __init__(
        self,
        *,
        repository: collections.abc.Iterable[global___Repository] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["repository", b"repository"]) -> None: ...

global___CodeCommit = CodeCommit
