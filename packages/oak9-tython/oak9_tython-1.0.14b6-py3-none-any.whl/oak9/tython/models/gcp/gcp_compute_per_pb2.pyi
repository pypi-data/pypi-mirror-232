"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import shared.shared_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class ComputePerInstanceConfigXPreservedStateXDisk(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DELETE_RULE_FIELD_NUMBER: builtins.int
    DEVICE_NAME_FIELD_NUMBER: builtins.int
    MODE_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    delete_rule: builtins.str
    device_name: builtins.str
    mode: builtins.str
    source: builtins.str
    def __init__(
        self,
        *,
        delete_rule: builtins.str = ...,
        device_name: builtins.str = ...,
        mode: builtins.str = ...,
        source: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["delete_rule", b"delete_rule", "device_name", b"device_name", "mode", b"mode", "source", b"source"]) -> None: ...

global___ComputePerInstanceConfigXPreservedStateXDisk = ComputePerInstanceConfigXPreservedStateXDisk

@typing_extensions.final
class ComputePerInstanceConfigXPreservedState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    METADATA_FIELD_NUMBER: builtins.int
    DISK_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    @property
    def disk(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ComputePerInstanceConfigXPreservedStateXDisk]: ...
    def __init__(
        self,
        *,
        metadata: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        disk: collections.abc.Iterable[global___ComputePerInstanceConfigXPreservedStateXDisk] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disk", b"disk", "metadata", b"metadata"]) -> None: ...

global___ComputePerInstanceConfigXPreservedState = ComputePerInstanceConfigXPreservedState

@typing_extensions.final
class ComputePerInstanceConfigXTimeouts(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATE_FIELD_NUMBER: builtins.int
    DELETE_FIELD_NUMBER: builtins.int
    UPDATE_FIELD_NUMBER: builtins.int
    create: builtins.str
    delete: builtins.str
    update: builtins.str
    def __init__(
        self,
        *,
        create: builtins.str = ...,
        delete: builtins.str = ...,
        update: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["create", b"create", "delete", b"delete", "update", b"update"]) -> None: ...

global___ComputePerInstanceConfigXTimeouts = ComputePerInstanceConfigXTimeouts

@typing_extensions.final
class ComputePerInstanceConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    MINIMAL_ACTION_FIELD_NUMBER: builtins.int
    MOST_DISRUPTIVE_ALLOWED_ACTION_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REMOVE_INSTANCE_STATE_ON_DESTROY_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    PRESERVED_STATE_FIELD_NUMBER: builtins.int
    TIMEOUTS_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    id: builtins.str
    instance_group_manager: builtins.str
    minimal_action: builtins.str
    most_disruptive_allowed_action: builtins.str
    name: builtins.str
    project: builtins.str
    remove_instance_state_on_destroy: builtins.bool
    zone: builtins.str
    @property
    def preserved_state(self) -> global___ComputePerInstanceConfigXPreservedState: ...
    @property
    def timeouts(self) -> global___ComputePerInstanceConfigXTimeouts: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        instance_group_manager: builtins.str = ...,
        minimal_action: builtins.str = ...,
        most_disruptive_allowed_action: builtins.str = ...,
        name: builtins.str = ...,
        project: builtins.str = ...,
        remove_instance_state_on_destroy: builtins.bool = ...,
        zone: builtins.str = ...,
        preserved_state: global___ComputePerInstanceConfigXPreservedState | None = ...,
        timeouts: global___ComputePerInstanceConfigXTimeouts | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["preserved_state", b"preserved_state", "resource_info", b"resource_info", "timeouts", b"timeouts"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "instance_group_manager", b"instance_group_manager", "minimal_action", b"minimal_action", "most_disruptive_allowed_action", b"most_disruptive_allowed_action", "name", b"name", "preserved_state", b"preserved_state", "project", b"project", "remove_instance_state_on_destroy", b"remove_instance_state_on_destroy", "resource_info", b"resource_info", "timeouts", b"timeouts", "zone", b"zone"]) -> None: ...

global___ComputePerInstanceConfig = ComputePerInstanceConfig
