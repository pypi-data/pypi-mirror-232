"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import shared.shared_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class MemcacheInstanceXMaintenancePolicyXWeeklyMaintenanceWindowXStartTime(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HOURS_FIELD_NUMBER: builtins.int
    MINUTES_FIELD_NUMBER: builtins.int
    NANOS_FIELD_NUMBER: builtins.int
    SECONDS_FIELD_NUMBER: builtins.int
    hours: builtins.float
    minutes: builtins.float
    nanos: builtins.float
    seconds: builtins.float
    def __init__(
        self,
        *,
        hours: builtins.float = ...,
        minutes: builtins.float = ...,
        nanos: builtins.float = ...,
        seconds: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["hours", b"hours", "minutes", b"minutes", "nanos", b"nanos", "seconds", b"seconds"]) -> None: ...

global___MemcacheInstanceXMaintenancePolicyXWeeklyMaintenanceWindowXStartTime = MemcacheInstanceXMaintenancePolicyXWeeklyMaintenanceWindowXStartTime

@typing_extensions.final
class MemcacheInstanceXMaintenancePolicyXWeeklyMaintenanceWindow(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DAY_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    day: builtins.str
    duration: builtins.str
    @property
    def start_time(self) -> global___MemcacheInstanceXMaintenancePolicyXWeeklyMaintenanceWindowXStartTime: ...
    def __init__(
        self,
        *,
        day: builtins.str = ...,
        duration: builtins.str = ...,
        start_time: global___MemcacheInstanceXMaintenancePolicyXWeeklyMaintenanceWindowXStartTime | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["start_time", b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["day", b"day", "duration", b"duration", "start_time", b"start_time"]) -> None: ...

global___MemcacheInstanceXMaintenancePolicyXWeeklyMaintenanceWindow = MemcacheInstanceXMaintenancePolicyXWeeklyMaintenanceWindow

@typing_extensions.final
class MemcacheInstanceXMaintenancePolicy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATE_TIME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    WEEKLY_MAINTENANCE_WINDOW_FIELD_NUMBER: builtins.int
    create_time: builtins.str
    description: builtins.str
    update_time: builtins.str
    @property
    def weekly_maintenance_window(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MemcacheInstanceXMaintenancePolicyXWeeklyMaintenanceWindow]: ...
    def __init__(
        self,
        *,
        create_time: builtins.str = ...,
        description: builtins.str = ...,
        update_time: builtins.str = ...,
        weekly_maintenance_window: collections.abc.Iterable[global___MemcacheInstanceXMaintenancePolicyXWeeklyMaintenanceWindow] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time", b"create_time", "description", b"description", "update_time", b"update_time", "weekly_maintenance_window", b"weekly_maintenance_window"]) -> None: ...

global___MemcacheInstanceXMaintenancePolicy = MemcacheInstanceXMaintenancePolicy

@typing_extensions.final
class MemcacheInstanceXMemcacheParameters(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ParamsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    PARAMS_FIELD_NUMBER: builtins.int
    id: builtins.str
    @property
    def params(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        params: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "params", b"params"]) -> None: ...

global___MemcacheInstanceXMemcacheParameters = MemcacheInstanceXMemcacheParameters

@typing_extensions.final
class MemcacheInstanceXNodeConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CPU_COUNT_FIELD_NUMBER: builtins.int
    MEMORY_SIZE_MB_FIELD_NUMBER: builtins.int
    cpu_count: builtins.float
    memory_size_mb: builtins.float
    def __init__(
        self,
        *,
        cpu_count: builtins.float = ...,
        memory_size_mb: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cpu_count", b"cpu_count", "memory_size_mb", b"memory_size_mb"]) -> None: ...

global___MemcacheInstanceXNodeConfig = MemcacheInstanceXNodeConfig

@typing_extensions.final
class MemcacheInstanceXTimeouts(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATE_FIELD_NUMBER: builtins.int
    DELETE_FIELD_NUMBER: builtins.int
    UPDATE_FIELD_NUMBER: builtins.int
    create: builtins.str
    delete: builtins.str
    update: builtins.str
    def __init__(
        self,
        *,
        create: builtins.str = ...,
        delete: builtins.str = ...,
        update: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["create", b"create", "delete", b"delete", "update", b"update"]) -> None: ...

global___MemcacheInstanceXTimeouts = MemcacheInstanceXTimeouts

@typing_extensions.final
class MemcacheInstance(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing_extensions.final
    class MaintenanceScheduleEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing_extensions.final
    class MemcacheNodesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    AUTHORIZED_NETWORK_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    DISCOVERY_ENDPOINT_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    MAINTENANCE_SCHEDULE_FIELD_NUMBER: builtins.int
    MEMCACHE_FULL_VERSION_FIELD_NUMBER: builtins.int
    MEMCACHE_NODES_FIELD_NUMBER: builtins.int
    MEMCACHE_VERSION_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NODE_COUNT_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    ZONES_FIELD_NUMBER: builtins.int
    MAINTENANCE_POLICY_FIELD_NUMBER: builtins.int
    MEMCACHE_PARAMETERS_FIELD_NUMBER: builtins.int
    NODE_CONFIG_FIELD_NUMBER: builtins.int
    TIMEOUTS_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    authorized_network: builtins.str
    create_time: builtins.str
    discovery_endpoint: builtins.str
    display_name: builtins.str
    id: builtins.str
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    @property
    def maintenance_schedule(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    memcache_full_version: builtins.str
    @property
    def memcache_nodes(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    memcache_version: builtins.str
    name: builtins.str
    node_count: builtins.float
    project: builtins.str
    region: builtins.str
    @property
    def zones(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def maintenance_policy(self) -> global___MemcacheInstanceXMaintenancePolicy: ...
    @property
    def memcache_parameters(self) -> global___MemcacheInstanceXMemcacheParameters: ...
    @property
    def node_config(self) -> global___MemcacheInstanceXNodeConfig: ...
    @property
    def timeouts(self) -> global___MemcacheInstanceXTimeouts: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        authorized_network: builtins.str = ...,
        create_time: builtins.str = ...,
        discovery_endpoint: builtins.str = ...,
        display_name: builtins.str = ...,
        id: builtins.str = ...,
        labels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        maintenance_schedule: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        memcache_full_version: builtins.str = ...,
        memcache_nodes: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        memcache_version: builtins.str = ...,
        name: builtins.str = ...,
        node_count: builtins.float = ...,
        project: builtins.str = ...,
        region: builtins.str = ...,
        zones: collections.abc.Iterable[builtins.str] | None = ...,
        maintenance_policy: global___MemcacheInstanceXMaintenancePolicy | None = ...,
        memcache_parameters: global___MemcacheInstanceXMemcacheParameters | None = ...,
        node_config: global___MemcacheInstanceXNodeConfig | None = ...,
        timeouts: global___MemcacheInstanceXTimeouts | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["maintenance_policy", b"maintenance_policy", "memcache_parameters", b"memcache_parameters", "node_config", b"node_config", "resource_info", b"resource_info", "timeouts", b"timeouts"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorized_network", b"authorized_network", "create_time", b"create_time", "discovery_endpoint", b"discovery_endpoint", "display_name", b"display_name", "id", b"id", "labels", b"labels", "maintenance_policy", b"maintenance_policy", "maintenance_schedule", b"maintenance_schedule", "memcache_full_version", b"memcache_full_version", "memcache_nodes", b"memcache_nodes", "memcache_parameters", b"memcache_parameters", "memcache_version", b"memcache_version", "name", b"name", "node_config", b"node_config", "node_count", b"node_count", "project", b"project", "region", b"region", "resource_info", b"resource_info", "timeouts", b"timeouts", "zones", b"zones"]) -> None: ...

global___MemcacheInstance = MemcacheInstance
