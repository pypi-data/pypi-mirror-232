"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import shared.shared_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class EventarcTriggerXDestinationXCloudRunService(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PATH_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SERVICE_FIELD_NUMBER: builtins.int
    path: builtins.str
    region: builtins.str
    service: builtins.str
    def __init__(
        self,
        *,
        path: builtins.str = ...,
        region: builtins.str = ...,
        service: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["path", b"path", "region", b"region", "service", b"service"]) -> None: ...

global___EventarcTriggerXDestinationXCloudRunService = EventarcTriggerXDestinationXCloudRunService

@typing_extensions.final
class EventarcTriggerXDestinationXGke(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLUSTER_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    SERVICE_FIELD_NUMBER: builtins.int
    cluster: builtins.str
    location: builtins.str
    namespace: builtins.str
    path: builtins.str
    service: builtins.str
    def __init__(
        self,
        *,
        cluster: builtins.str = ...,
        location: builtins.str = ...,
        namespace: builtins.str = ...,
        path: builtins.str = ...,
        service: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster", b"cluster", "location", b"location", "namespace", b"namespace", "path", b"path", "service", b"service"]) -> None: ...

global___EventarcTriggerXDestinationXGke = EventarcTriggerXDestinationXGke

@typing_extensions.final
class EventarcTriggerXDestination(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLOUD_FUNCTION_FIELD_NUMBER: builtins.int
    WORKFLOW_FIELD_NUMBER: builtins.int
    CLOUD_RUN_SERVICE_FIELD_NUMBER: builtins.int
    GKE_FIELD_NUMBER: builtins.int
    cloud_function: builtins.str
    workflow: builtins.str
    @property
    def cloud_run_service(self) -> global___EventarcTriggerXDestinationXCloudRunService: ...
    @property
    def gke(self) -> global___EventarcTriggerXDestinationXGke: ...
    def __init__(
        self,
        *,
        cloud_function: builtins.str = ...,
        workflow: builtins.str = ...,
        cloud_run_service: global___EventarcTriggerXDestinationXCloudRunService | None = ...,
        gke: global___EventarcTriggerXDestinationXGke | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cloud_run_service", b"cloud_run_service", "gke", b"gke"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cloud_function", b"cloud_function", "cloud_run_service", b"cloud_run_service", "gke", b"gke", "workflow", b"workflow"]) -> None: ...

global___EventarcTriggerXDestination = EventarcTriggerXDestination

@typing_extensions.final
class EventarcTriggerXMatchingCriteria(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ATTRIBUTE_FIELD_NUMBER: builtins.int
    OPERATOR_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    attribute: builtins.str
    operator: builtins.str
    value: builtins.str
    def __init__(
        self,
        *,
        attribute: builtins.str = ...,
        operator: builtins.str = ...,
        value: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["attribute", b"attribute", "operator", b"operator", "value", b"value"]) -> None: ...

global___EventarcTriggerXMatchingCriteria = EventarcTriggerXMatchingCriteria

@typing_extensions.final
class EventarcTriggerXTimeouts(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATE_FIELD_NUMBER: builtins.int
    DELETE_FIELD_NUMBER: builtins.int
    UPDATE_FIELD_NUMBER: builtins.int
    create: builtins.str
    delete: builtins.str
    update: builtins.str
    def __init__(
        self,
        *,
        create: builtins.str = ...,
        delete: builtins.str = ...,
        update: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["create", b"create", "delete", b"delete", "update", b"update"]) -> None: ...

global___EventarcTriggerXTimeouts = EventarcTriggerXTimeouts

@typing_extensions.final
class EventarcTriggerXTransportXPubsub(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUBSCRIPTION_FIELD_NUMBER: builtins.int
    TOPIC_FIELD_NUMBER: builtins.int
    subscription: builtins.str
    topic: builtins.str
    def __init__(
        self,
        *,
        subscription: builtins.str = ...,
        topic: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["subscription", b"subscription", "topic", b"topic"]) -> None: ...

global___EventarcTriggerXTransportXPubsub = EventarcTriggerXTransportXPubsub

@typing_extensions.final
class EventarcTriggerXTransport(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PUBSUB_FIELD_NUMBER: builtins.int
    @property
    def pubsub(self) -> global___EventarcTriggerXTransportXPubsub: ...
    def __init__(
        self,
        *,
        pubsub: global___EventarcTriggerXTransportXPubsub | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["pubsub", b"pubsub"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["pubsub", b"pubsub"]) -> None: ...

global___EventarcTriggerXTransport = EventarcTriggerXTransport

@typing_extensions.final
class EventarcTrigger(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    CREATE_TIME_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
    UID_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    DESTINATION_FIELD_NUMBER: builtins.int
    MATCHING_CRITERIA_FIELD_NUMBER: builtins.int
    TIMEOUTS_FIELD_NUMBER: builtins.int
    TRANSPORT_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    create_time: builtins.str
    etag: builtins.str
    id: builtins.str
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    location: builtins.str
    name: builtins.str
    project: builtins.str
    service_account: builtins.str
    uid: builtins.str
    update_time: builtins.str
    @property
    def destination(self) -> global___EventarcTriggerXDestination: ...
    @property
    def matching_criteria(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___EventarcTriggerXMatchingCriteria]: ...
    @property
    def timeouts(self) -> global___EventarcTriggerXTimeouts: ...
    @property
    def transport(self) -> global___EventarcTriggerXTransport: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        create_time: builtins.str = ...,
        etag: builtins.str = ...,
        id: builtins.str = ...,
        labels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        location: builtins.str = ...,
        name: builtins.str = ...,
        project: builtins.str = ...,
        service_account: builtins.str = ...,
        uid: builtins.str = ...,
        update_time: builtins.str = ...,
        destination: global___EventarcTriggerXDestination | None = ...,
        matching_criteria: collections.abc.Iterable[global___EventarcTriggerXMatchingCriteria] | None = ...,
        timeouts: global___EventarcTriggerXTimeouts | None = ...,
        transport: global___EventarcTriggerXTransport | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["destination", b"destination", "resource_info", b"resource_info", "timeouts", b"timeouts", "transport", b"transport"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time", b"create_time", "destination", b"destination", "etag", b"etag", "id", b"id", "labels", b"labels", "location", b"location", "matching_criteria", b"matching_criteria", "name", b"name", "project", b"project", "resource_info", b"resource_info", "service_account", b"service_account", "timeouts", b"timeouts", "transport", b"transport", "uid", b"uid", "update_time", b"update_time"]) -> None: ...

global___EventarcTrigger = EventarcTrigger
