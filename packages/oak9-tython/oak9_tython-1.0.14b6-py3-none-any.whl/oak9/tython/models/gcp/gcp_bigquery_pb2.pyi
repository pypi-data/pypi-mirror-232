"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import shared.shared_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class BigqueryConnectionXAwsXAccessRole(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IAM_ROLE_ID_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    iam_role_id: builtins.str
    identity: builtins.str
    def __init__(
        self,
        *,
        iam_role_id: builtins.str = ...,
        identity: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["iam_role_id", b"iam_role_id", "identity", b"identity"]) -> None: ...

global___BigqueryConnectionXAwsXAccessRole = BigqueryConnectionXAwsXAccessRole

@typing_extensions.final
class BigqueryConnectionXAws(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCESS_ROLE_FIELD_NUMBER: builtins.int
    @property
    def access_role(self) -> global___BigqueryConnectionXAwsXAccessRole: ...
    def __init__(
        self,
        *,
        access_role: global___BigqueryConnectionXAwsXAccessRole | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["access_role", b"access_role"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["access_role", b"access_role"]) -> None: ...

global___BigqueryConnectionXAws = BigqueryConnectionXAws

@typing_extensions.final
class BigqueryConnectionXAzure(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    APPLICATION_FIELD_NUMBER: builtins.int
    CLIENT_ID_FIELD_NUMBER: builtins.int
    CUSTOMER_TENANT_ID_FIELD_NUMBER: builtins.int
    OBJECT_ID_FIELD_NUMBER: builtins.int
    REDIRECT_URI_FIELD_NUMBER: builtins.int
    application: builtins.str
    client_id: builtins.str
    customer_tenant_id: builtins.str
    object_id: builtins.str
    redirect_uri: builtins.str
    def __init__(
        self,
        *,
        application: builtins.str = ...,
        client_id: builtins.str = ...,
        customer_tenant_id: builtins.str = ...,
        object_id: builtins.str = ...,
        redirect_uri: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["application", b"application", "client_id", b"client_id", "customer_tenant_id", b"customer_tenant_id", "object_id", b"object_id", "redirect_uri", b"redirect_uri"]) -> None: ...

global___BigqueryConnectionXAzure = BigqueryConnectionXAzure

@typing_extensions.final
class BigqueryConnectionXCloudResource(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERVICE_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    service_account_id: builtins.str
    def __init__(
        self,
        *,
        service_account_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["service_account_id", b"service_account_id"]) -> None: ...

global___BigqueryConnectionXCloudResource = BigqueryConnectionXCloudResource

@typing_extensions.final
class BigqueryConnectionXCloudSpanner(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATABASE_FIELD_NUMBER: builtins.int
    USE_PARALLELISM_FIELD_NUMBER: builtins.int
    database: builtins.str
    use_parallelism: builtins.bool
    def __init__(
        self,
        *,
        database: builtins.str = ...,
        use_parallelism: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["database", b"database", "use_parallelism", b"use_parallelism"]) -> None: ...

global___BigqueryConnectionXCloudSpanner = BigqueryConnectionXCloudSpanner

@typing_extensions.final
class BigqueryConnectionXCloudSqlXCredential(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PASSWORD_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    password: builtins.str
    username: builtins.str
    def __init__(
        self,
        *,
        password: builtins.str = ...,
        username: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["password", b"password", "username", b"username"]) -> None: ...

global___BigqueryConnectionXCloudSqlXCredential = BigqueryConnectionXCloudSqlXCredential

@typing_extensions.final
class BigqueryConnectionXCloudSql(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATABASE_FIELD_NUMBER: builtins.int
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    CREDENTIAL_FIELD_NUMBER: builtins.int
    database: builtins.str
    instance_id: builtins.str
    type: builtins.str
    @property
    def credential(self) -> global___BigqueryConnectionXCloudSqlXCredential: ...
    def __init__(
        self,
        *,
        database: builtins.str = ...,
        instance_id: builtins.str = ...,
        type: builtins.str = ...,
        credential: global___BigqueryConnectionXCloudSqlXCredential | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["credential", b"credential"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["credential", b"credential", "database", b"database", "instance_id", b"instance_id", "type", b"type"]) -> None: ...

global___BigqueryConnectionXCloudSql = BigqueryConnectionXCloudSql

@typing_extensions.final
class BigqueryConnectionXTimeouts(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATE_FIELD_NUMBER: builtins.int
    DELETE_FIELD_NUMBER: builtins.int
    UPDATE_FIELD_NUMBER: builtins.int
    create: builtins.str
    delete: builtins.str
    update: builtins.str
    def __init__(
        self,
        *,
        create: builtins.str = ...,
        delete: builtins.str = ...,
        update: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["create", b"create", "delete", b"delete", "update", b"update"]) -> None: ...

global___BigqueryConnectionXTimeouts = BigqueryConnectionXTimeouts

@typing_extensions.final
class BigqueryConnection(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONNECTION_ID_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    FRIENDLY_NAME_FIELD_NUMBER: builtins.int
    HAS_CREDENTIAL_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    AWS_FIELD_NUMBER: builtins.int
    AZURE_FIELD_NUMBER: builtins.int
    CLOUD_RESOURCE_FIELD_NUMBER: builtins.int
    CLOUD_SPANNER_FIELD_NUMBER: builtins.int
    CLOUD_SQL_FIELD_NUMBER: builtins.int
    TIMEOUTS_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    connection_id: builtins.str
    description: builtins.str
    friendly_name: builtins.str
    has_credential: builtins.bool
    id: builtins.str
    location: builtins.str
    name: builtins.str
    project: builtins.str
    @property
    def aws(self) -> global___BigqueryConnectionXAws: ...
    @property
    def azure(self) -> global___BigqueryConnectionXAzure: ...
    @property
    def cloud_resource(self) -> global___BigqueryConnectionXCloudResource: ...
    @property
    def cloud_spanner(self) -> global___BigqueryConnectionXCloudSpanner: ...
    @property
    def cloud_sql(self) -> global___BigqueryConnectionXCloudSql: ...
    @property
    def timeouts(self) -> global___BigqueryConnectionXTimeouts: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        connection_id: builtins.str = ...,
        description: builtins.str = ...,
        friendly_name: builtins.str = ...,
        has_credential: builtins.bool = ...,
        id: builtins.str = ...,
        location: builtins.str = ...,
        name: builtins.str = ...,
        project: builtins.str = ...,
        aws: global___BigqueryConnectionXAws | None = ...,
        azure: global___BigqueryConnectionXAzure | None = ...,
        cloud_resource: global___BigqueryConnectionXCloudResource | None = ...,
        cloud_spanner: global___BigqueryConnectionXCloudSpanner | None = ...,
        cloud_sql: global___BigqueryConnectionXCloudSql | None = ...,
        timeouts: global___BigqueryConnectionXTimeouts | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["aws", b"aws", "azure", b"azure", "cloud_resource", b"cloud_resource", "cloud_spanner", b"cloud_spanner", "cloud_sql", b"cloud_sql", "resource_info", b"resource_info", "timeouts", b"timeouts"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["aws", b"aws", "azure", b"azure", "cloud_resource", b"cloud_resource", "cloud_spanner", b"cloud_spanner", "cloud_sql", b"cloud_sql", "connection_id", b"connection_id", "description", b"description", "friendly_name", b"friendly_name", "has_credential", b"has_credential", "id", b"id", "location", b"location", "name", b"name", "project", b"project", "resource_info", b"resource_info", "timeouts", b"timeouts"]) -> None: ...

global___BigqueryConnection = BigqueryConnection

@typing_extensions.final
class BigqueryConnectionIamBindingXCondition(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DESCRIPTION_FIELD_NUMBER: builtins.int
    EXPRESSION_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    description: builtins.str
    expression: builtins.str
    title: builtins.str
    def __init__(
        self,
        *,
        description: builtins.str = ...,
        expression: builtins.str = ...,
        title: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description", b"description", "expression", b"expression", "title", b"title"]) -> None: ...

global___BigqueryConnectionIamBindingXCondition = BigqueryConnectionIamBindingXCondition

@typing_extensions.final
class BigqueryConnectionIamBinding(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONNECTION_ID_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    MEMBERS_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ROLE_FIELD_NUMBER: builtins.int
    CONDITION_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    connection_id: builtins.str
    etag: builtins.str
    id: builtins.str
    location: builtins.str
    @property
    def members(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    project: builtins.str
    role: builtins.str
    @property
    def condition(self) -> global___BigqueryConnectionIamBindingXCondition: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        connection_id: builtins.str = ...,
        etag: builtins.str = ...,
        id: builtins.str = ...,
        location: builtins.str = ...,
        members: collections.abc.Iterable[builtins.str] | None = ...,
        project: builtins.str = ...,
        role: builtins.str = ...,
        condition: global___BigqueryConnectionIamBindingXCondition | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["condition", b"condition", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["condition", b"condition", "connection_id", b"connection_id", "etag", b"etag", "id", b"id", "location", b"location", "members", b"members", "project", b"project", "resource_info", b"resource_info", "role", b"role"]) -> None: ...

global___BigqueryConnectionIamBinding = BigqueryConnectionIamBinding

@typing_extensions.final
class BigqueryConnectionIamMemberXCondition(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DESCRIPTION_FIELD_NUMBER: builtins.int
    EXPRESSION_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    description: builtins.str
    expression: builtins.str
    title: builtins.str
    def __init__(
        self,
        *,
        description: builtins.str = ...,
        expression: builtins.str = ...,
        title: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description", b"description", "expression", b"expression", "title", b"title"]) -> None: ...

global___BigqueryConnectionIamMemberXCondition = BigqueryConnectionIamMemberXCondition

@typing_extensions.final
class BigqueryConnectionIamMember(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONNECTION_ID_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    MEMBER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ROLE_FIELD_NUMBER: builtins.int
    CONDITION_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    connection_id: builtins.str
    etag: builtins.str
    id: builtins.str
    location: builtins.str
    member: builtins.str
    project: builtins.str
    role: builtins.str
    @property
    def condition(self) -> global___BigqueryConnectionIamMemberXCondition: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        connection_id: builtins.str = ...,
        etag: builtins.str = ...,
        id: builtins.str = ...,
        location: builtins.str = ...,
        member: builtins.str = ...,
        project: builtins.str = ...,
        role: builtins.str = ...,
        condition: global___BigqueryConnectionIamMemberXCondition | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["condition", b"condition", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["condition", b"condition", "connection_id", b"connection_id", "etag", b"etag", "id", b"id", "location", b"location", "member", b"member", "project", b"project", "resource_info", b"resource_info", "role", b"role"]) -> None: ...

global___BigqueryConnectionIamMember = BigqueryConnectionIamMember

@typing_extensions.final
class BigqueryConnectionIamPolicy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONNECTION_ID_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    POLICY_DATA_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    connection_id: builtins.str
    etag: builtins.str
    id: builtins.str
    location: builtins.str
    policy_data: builtins.str
    project: builtins.str
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        connection_id: builtins.str = ...,
        etag: builtins.str = ...,
        id: builtins.str = ...,
        location: builtins.str = ...,
        policy_data: builtins.str = ...,
        project: builtins.str = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["connection_id", b"connection_id", "etag", b"etag", "id", b"id", "location", b"location", "policy_data", b"policy_data", "project", b"project", "resource_info", b"resource_info"]) -> None: ...

global___BigqueryConnectionIamPolicy = BigqueryConnectionIamPolicy

@typing_extensions.final
class BigqueryDataTransferConfigXEmailPreferences(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENABLE_FAILURE_EMAIL_FIELD_NUMBER: builtins.int
    enable_failure_email: builtins.bool
    def __init__(
        self,
        *,
        enable_failure_email: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enable_failure_email", b"enable_failure_email"]) -> None: ...

global___BigqueryDataTransferConfigXEmailPreferences = BigqueryDataTransferConfigXEmailPreferences

@typing_extensions.final
class BigqueryDataTransferConfigXScheduleOptions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DISABLE_AUTO_SCHEDULING_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    disable_auto_scheduling: builtins.bool
    end_time: builtins.str
    start_time: builtins.str
    def __init__(
        self,
        *,
        disable_auto_scheduling: builtins.bool = ...,
        end_time: builtins.str = ...,
        start_time: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disable_auto_scheduling", b"disable_auto_scheduling", "end_time", b"end_time", "start_time", b"start_time"]) -> None: ...

global___BigqueryDataTransferConfigXScheduleOptions = BigqueryDataTransferConfigXScheduleOptions

@typing_extensions.final
class BigqueryDataTransferConfigXSensitiveParams(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SECRET_ACCESS_KEY_FIELD_NUMBER: builtins.int
    secret_access_key: builtins.str
    def __init__(
        self,
        *,
        secret_access_key: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["secret_access_key", b"secret_access_key"]) -> None: ...

global___BigqueryDataTransferConfigXSensitiveParams = BigqueryDataTransferConfigXSensitiveParams

@typing_extensions.final
class BigqueryDataTransferConfigXTimeouts(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATE_FIELD_NUMBER: builtins.int
    DELETE_FIELD_NUMBER: builtins.int
    UPDATE_FIELD_NUMBER: builtins.int
    create: builtins.str
    delete: builtins.str
    update: builtins.str
    def __init__(
        self,
        *,
        create: builtins.str = ...,
        delete: builtins.str = ...,
        update: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["create", b"create", "delete", b"delete", "update", b"update"]) -> None: ...

global___BigqueryDataTransferConfigXTimeouts = BigqueryDataTransferConfigXTimeouts

@typing_extensions.final
class BigqueryDataTransferConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ParamsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    DATA_REFRESH_WINDOW_DAYS_FIELD_NUMBER: builtins.int
    DATA_SOURCE_ID_FIELD_NUMBER: builtins.int
    DESTINATION_DATASET_ID_FIELD_NUMBER: builtins.int
    DISABLED_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NOTIFICATION_PUBSUB_TOPIC_FIELD_NUMBER: builtins.int
    PARAMS_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    SCHEDULE_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_NAME_FIELD_NUMBER: builtins.int
    EMAIL_PREFERENCES_FIELD_NUMBER: builtins.int
    SCHEDULE_OPTIONS_FIELD_NUMBER: builtins.int
    SENSITIVE_PARAMS_FIELD_NUMBER: builtins.int
    TIMEOUTS_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    data_refresh_window_days: builtins.float
    data_source_id: builtins.str
    destination_dataset_id: builtins.str
    disabled: builtins.bool
    display_name: builtins.str
    id: builtins.str
    location: builtins.str
    name: builtins.str
    notification_pubsub_topic: builtins.str
    @property
    def params(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    project: builtins.str
    schedule: builtins.str
    service_account_name: builtins.str
    @property
    def email_preferences(self) -> global___BigqueryDataTransferConfigXEmailPreferences: ...
    @property
    def schedule_options(self) -> global___BigqueryDataTransferConfigXScheduleOptions: ...
    @property
    def sensitive_params(self) -> global___BigqueryDataTransferConfigXSensitiveParams: ...
    @property
    def timeouts(self) -> global___BigqueryDataTransferConfigXTimeouts: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        data_refresh_window_days: builtins.float = ...,
        data_source_id: builtins.str = ...,
        destination_dataset_id: builtins.str = ...,
        disabled: builtins.bool = ...,
        display_name: builtins.str = ...,
        id: builtins.str = ...,
        location: builtins.str = ...,
        name: builtins.str = ...,
        notification_pubsub_topic: builtins.str = ...,
        params: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        project: builtins.str = ...,
        schedule: builtins.str = ...,
        service_account_name: builtins.str = ...,
        email_preferences: global___BigqueryDataTransferConfigXEmailPreferences | None = ...,
        schedule_options: global___BigqueryDataTransferConfigXScheduleOptions | None = ...,
        sensitive_params: global___BigqueryDataTransferConfigXSensitiveParams | None = ...,
        timeouts: global___BigqueryDataTransferConfigXTimeouts | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["email_preferences", b"email_preferences", "resource_info", b"resource_info", "schedule_options", b"schedule_options", "sensitive_params", b"sensitive_params", "timeouts", b"timeouts"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_refresh_window_days", b"data_refresh_window_days", "data_source_id", b"data_source_id", "destination_dataset_id", b"destination_dataset_id", "disabled", b"disabled", "display_name", b"display_name", "email_preferences", b"email_preferences", "id", b"id", "location", b"location", "name", b"name", "notification_pubsub_topic", b"notification_pubsub_topic", "params", b"params", "project", b"project", "resource_info", b"resource_info", "schedule", b"schedule", "schedule_options", b"schedule_options", "sensitive_params", b"sensitive_params", "service_account_name", b"service_account_name", "timeouts", b"timeouts"]) -> None: ...

global___BigqueryDataTransferConfig = BigqueryDataTransferConfig

@typing_extensions.final
class BigqueryDatasetXAccessXDatasetXDataset(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATASET_ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    dataset_id: builtins.str
    project_id: builtins.str
    def __init__(
        self,
        *,
        dataset_id: builtins.str = ...,
        project_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "project_id", b"project_id"]) -> None: ...

global___BigqueryDatasetXAccessXDatasetXDataset = BigqueryDatasetXAccessXDatasetXDataset

@typing_extensions.final
class BigqueryDatasetXAccessXDataset(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TARGET_TYPES_FIELD_NUMBER: builtins.int
    DATASET_FIELD_NUMBER: builtins.int
    @property
    def target_types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def dataset(self) -> global___BigqueryDatasetXAccessXDatasetXDataset: ...
    def __init__(
        self,
        *,
        target_types: collections.abc.Iterable[builtins.str] | None = ...,
        dataset: global___BigqueryDatasetXAccessXDatasetXDataset | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dataset", b"dataset"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset", b"dataset", "target_types", b"target_types"]) -> None: ...

global___BigqueryDatasetXAccessXDataset = BigqueryDatasetXAccessXDataset

@typing_extensions.final
class BigqueryDatasetXAccessXView(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATASET_ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    TABLE_ID_FIELD_NUMBER: builtins.int
    dataset_id: builtins.str
    project_id: builtins.str
    table_id: builtins.str
    def __init__(
        self,
        *,
        dataset_id: builtins.str = ...,
        project_id: builtins.str = ...,
        table_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "project_id", b"project_id", "table_id", b"table_id"]) -> None: ...

global___BigqueryDatasetXAccessXView = BigqueryDatasetXAccessXView

@typing_extensions.final
class BigqueryDatasetXAccess(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DOMAIN_FIELD_NUMBER: builtins.int
    GROUP_BY_EMAIL_FIELD_NUMBER: builtins.int
    ROLE_FIELD_NUMBER: builtins.int
    SPECIAL_GROUP_FIELD_NUMBER: builtins.int
    USER_BY_EMAIL_FIELD_NUMBER: builtins.int
    DATASET_FIELD_NUMBER: builtins.int
    VIEW_FIELD_NUMBER: builtins.int
    domain: builtins.str
    group_by_email: builtins.str
    role: builtins.str
    special_group: builtins.str
    user_by_email: builtins.str
    @property
    def dataset(self) -> global___BigqueryDatasetXAccessXDataset: ...
    @property
    def view(self) -> global___BigqueryDatasetXAccessXView: ...
    def __init__(
        self,
        *,
        domain: builtins.str = ...,
        group_by_email: builtins.str = ...,
        role: builtins.str = ...,
        special_group: builtins.str = ...,
        user_by_email: builtins.str = ...,
        dataset: global___BigqueryDatasetXAccessXDataset | None = ...,
        view: global___BigqueryDatasetXAccessXView | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dataset", b"dataset", "view", b"view"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset", b"dataset", "domain", b"domain", "group_by_email", b"group_by_email", "role", b"role", "special_group", b"special_group", "user_by_email", b"user_by_email", "view", b"view"]) -> None: ...

global___BigqueryDatasetXAccess = BigqueryDatasetXAccess

@typing_extensions.final
class BigqueryDatasetXDefaultEncryptionConfiguration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KMS_KEY_NAME_FIELD_NUMBER: builtins.int
    kms_key_name: builtins.str
    def __init__(
        self,
        *,
        kms_key_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["kms_key_name", b"kms_key_name"]) -> None: ...

global___BigqueryDatasetXDefaultEncryptionConfiguration = BigqueryDatasetXDefaultEncryptionConfiguration

@typing_extensions.final
class BigqueryDatasetXTimeouts(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATE_FIELD_NUMBER: builtins.int
    DELETE_FIELD_NUMBER: builtins.int
    UPDATE_FIELD_NUMBER: builtins.int
    create: builtins.str
    delete: builtins.str
    update: builtins.str
    def __init__(
        self,
        *,
        create: builtins.str = ...,
        delete: builtins.str = ...,
        update: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["create", b"create", "delete", b"delete", "update", b"update"]) -> None: ...

global___BigqueryDatasetXTimeouts = BigqueryDatasetXTimeouts

@typing_extensions.final
class BigqueryDataset(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    CREATION_TIME_FIELD_NUMBER: builtins.int
    DATASET_ID_FIELD_NUMBER: builtins.int
    DEFAULT_PARTITION_EXPIRATION_MS_FIELD_NUMBER: builtins.int
    DEFAULT_TABLE_EXPIRATION_MS_FIELD_NUMBER: builtins.int
    DELETE_CONTENTS_ON_DESTROY_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    FRIENDLY_NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    LAST_MODIFIED_TIME_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    ACCESS_FIELD_NUMBER: builtins.int
    DEFAULT_ENCRYPTION_CONFIGURATION_FIELD_NUMBER: builtins.int
    TIMEOUTS_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    creation_time: builtins.float
    dataset_id: builtins.str
    default_partition_expiration_ms: builtins.float
    default_table_expiration_ms: builtins.float
    delete_contents_on_destroy: builtins.bool
    description: builtins.str
    etag: builtins.str
    friendly_name: builtins.str
    id: builtins.str
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    last_modified_time: builtins.float
    location: builtins.str
    project: builtins.str
    self_link: builtins.str
    @property
    def access(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BigqueryDatasetXAccess]: ...
    @property
    def default_encryption_configuration(self) -> global___BigqueryDatasetXDefaultEncryptionConfiguration: ...
    @property
    def timeouts(self) -> global___BigqueryDatasetXTimeouts: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        creation_time: builtins.float = ...,
        dataset_id: builtins.str = ...,
        default_partition_expiration_ms: builtins.float = ...,
        default_table_expiration_ms: builtins.float = ...,
        delete_contents_on_destroy: builtins.bool = ...,
        description: builtins.str = ...,
        etag: builtins.str = ...,
        friendly_name: builtins.str = ...,
        id: builtins.str = ...,
        labels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        last_modified_time: builtins.float = ...,
        location: builtins.str = ...,
        project: builtins.str = ...,
        self_link: builtins.str = ...,
        access: collections.abc.Iterable[global___BigqueryDatasetXAccess] | None = ...,
        default_encryption_configuration: global___BigqueryDatasetXDefaultEncryptionConfiguration | None = ...,
        timeouts: global___BigqueryDatasetXTimeouts | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["default_encryption_configuration", b"default_encryption_configuration", "resource_info", b"resource_info", "timeouts", b"timeouts"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["access", b"access", "creation_time", b"creation_time", "dataset_id", b"dataset_id", "default_encryption_configuration", b"default_encryption_configuration", "default_partition_expiration_ms", b"default_partition_expiration_ms", "default_table_expiration_ms", b"default_table_expiration_ms", "delete_contents_on_destroy", b"delete_contents_on_destroy", "description", b"description", "etag", b"etag", "friendly_name", b"friendly_name", "id", b"id", "labels", b"labels", "last_modified_time", b"last_modified_time", "location", b"location", "project", b"project", "resource_info", b"resource_info", "self_link", b"self_link", "timeouts", b"timeouts"]) -> None: ...

global___BigqueryDataset = BigqueryDataset

@typing_extensions.final
class BigqueryDatasetAccessXDatasetXDataset(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATASET_ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    dataset_id: builtins.str
    project_id: builtins.str
    def __init__(
        self,
        *,
        dataset_id: builtins.str = ...,
        project_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "project_id", b"project_id"]) -> None: ...

global___BigqueryDatasetAccessXDatasetXDataset = BigqueryDatasetAccessXDatasetXDataset

@typing_extensions.final
class BigqueryDatasetAccessXDataset(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TARGET_TYPES_FIELD_NUMBER: builtins.int
    DATASET_FIELD_NUMBER: builtins.int
    @property
    def target_types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def dataset(self) -> global___BigqueryDatasetAccessXDatasetXDataset: ...
    def __init__(
        self,
        *,
        target_types: collections.abc.Iterable[builtins.str] | None = ...,
        dataset: global___BigqueryDatasetAccessXDatasetXDataset | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dataset", b"dataset"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset", b"dataset", "target_types", b"target_types"]) -> None: ...

global___BigqueryDatasetAccessXDataset = BigqueryDatasetAccessXDataset

@typing_extensions.final
class BigqueryDatasetAccessXTimeouts(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATE_FIELD_NUMBER: builtins.int
    DELETE_FIELD_NUMBER: builtins.int
    create: builtins.str
    delete: builtins.str
    def __init__(
        self,
        *,
        create: builtins.str = ...,
        delete: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["create", b"create", "delete", b"delete"]) -> None: ...

global___BigqueryDatasetAccessXTimeouts = BigqueryDatasetAccessXTimeouts

@typing_extensions.final
class BigqueryDatasetAccessXView(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATASET_ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    TABLE_ID_FIELD_NUMBER: builtins.int
    dataset_id: builtins.str
    project_id: builtins.str
    table_id: builtins.str
    def __init__(
        self,
        *,
        dataset_id: builtins.str = ...,
        project_id: builtins.str = ...,
        table_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "project_id", b"project_id", "table_id", b"table_id"]) -> None: ...

global___BigqueryDatasetAccessXView = BigqueryDatasetAccessXView

@typing_extensions.final
class BigqueryDatasetAccess(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    API_UPDATED_MEMBER_FIELD_NUMBER: builtins.int
    DATASET_ID_FIELD_NUMBER: builtins.int
    DOMAIN_FIELD_NUMBER: builtins.int
    GROUP_BY_EMAIL_FIELD_NUMBER: builtins.int
    IAM_MEMBER_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ROLE_FIELD_NUMBER: builtins.int
    SPECIAL_GROUP_FIELD_NUMBER: builtins.int
    USER_BY_EMAIL_FIELD_NUMBER: builtins.int
    DATASET_FIELD_NUMBER: builtins.int
    TIMEOUTS_FIELD_NUMBER: builtins.int
    VIEW_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    api_updated_member: builtins.bool
    dataset_id: builtins.str
    domain: builtins.str
    group_by_email: builtins.str
    iam_member: builtins.str
    id: builtins.str
    project: builtins.str
    role: builtins.str
    special_group: builtins.str
    user_by_email: builtins.str
    @property
    def dataset(self) -> global___BigqueryDatasetAccessXDataset: ...
    @property
    def timeouts(self) -> global___BigqueryDatasetAccessXTimeouts: ...
    @property
    def view(self) -> global___BigqueryDatasetAccessXView: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        api_updated_member: builtins.bool = ...,
        dataset_id: builtins.str = ...,
        domain: builtins.str = ...,
        group_by_email: builtins.str = ...,
        iam_member: builtins.str = ...,
        id: builtins.str = ...,
        project: builtins.str = ...,
        role: builtins.str = ...,
        special_group: builtins.str = ...,
        user_by_email: builtins.str = ...,
        dataset: global___BigqueryDatasetAccessXDataset | None = ...,
        timeouts: global___BigqueryDatasetAccessXTimeouts | None = ...,
        view: global___BigqueryDatasetAccessXView | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dataset", b"dataset", "resource_info", b"resource_info", "timeouts", b"timeouts", "view", b"view"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["api_updated_member", b"api_updated_member", "dataset", b"dataset", "dataset_id", b"dataset_id", "domain", b"domain", "group_by_email", b"group_by_email", "iam_member", b"iam_member", "id", b"id", "project", b"project", "resource_info", b"resource_info", "role", b"role", "special_group", b"special_group", "timeouts", b"timeouts", "user_by_email", b"user_by_email", "view", b"view"]) -> None: ...

global___BigqueryDatasetAccess = BigqueryDatasetAccess

@typing_extensions.final
class BigqueryDatasetIamBindingXCondition(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DESCRIPTION_FIELD_NUMBER: builtins.int
    EXPRESSION_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    description: builtins.str
    expression: builtins.str
    title: builtins.str
    def __init__(
        self,
        *,
        description: builtins.str = ...,
        expression: builtins.str = ...,
        title: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description", b"description", "expression", b"expression", "title", b"title"]) -> None: ...

global___BigqueryDatasetIamBindingXCondition = BigqueryDatasetIamBindingXCondition

@typing_extensions.final
class BigqueryDatasetIamBinding(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATASET_ID_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    MEMBERS_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ROLE_FIELD_NUMBER: builtins.int
    CONDITION_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    dataset_id: builtins.str
    etag: builtins.str
    id: builtins.str
    @property
    def members(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    project: builtins.str
    role: builtins.str
    @property
    def condition(self) -> global___BigqueryDatasetIamBindingXCondition: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        dataset_id: builtins.str = ...,
        etag: builtins.str = ...,
        id: builtins.str = ...,
        members: collections.abc.Iterable[builtins.str] | None = ...,
        project: builtins.str = ...,
        role: builtins.str = ...,
        condition: global___BigqueryDatasetIamBindingXCondition | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["condition", b"condition", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["condition", b"condition", "dataset_id", b"dataset_id", "etag", b"etag", "id", b"id", "members", b"members", "project", b"project", "resource_info", b"resource_info", "role", b"role"]) -> None: ...

global___BigqueryDatasetIamBinding = BigqueryDatasetIamBinding

@typing_extensions.final
class BigqueryDatasetIamMemberXCondition(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DESCRIPTION_FIELD_NUMBER: builtins.int
    EXPRESSION_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    description: builtins.str
    expression: builtins.str
    title: builtins.str
    def __init__(
        self,
        *,
        description: builtins.str = ...,
        expression: builtins.str = ...,
        title: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description", b"description", "expression", b"expression", "title", b"title"]) -> None: ...

global___BigqueryDatasetIamMemberXCondition = BigqueryDatasetIamMemberXCondition

@typing_extensions.final
class BigqueryDatasetIamMember(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATASET_ID_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    MEMBER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ROLE_FIELD_NUMBER: builtins.int
    CONDITION_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    dataset_id: builtins.str
    etag: builtins.str
    id: builtins.str
    member: builtins.str
    project: builtins.str
    role: builtins.str
    @property
    def condition(self) -> global___BigqueryDatasetIamMemberXCondition: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        dataset_id: builtins.str = ...,
        etag: builtins.str = ...,
        id: builtins.str = ...,
        member: builtins.str = ...,
        project: builtins.str = ...,
        role: builtins.str = ...,
        condition: global___BigqueryDatasetIamMemberXCondition | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["condition", b"condition", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["condition", b"condition", "dataset_id", b"dataset_id", "etag", b"etag", "id", b"id", "member", b"member", "project", b"project", "resource_info", b"resource_info", "role", b"role"]) -> None: ...

global___BigqueryDatasetIamMember = BigqueryDatasetIamMember

@typing_extensions.final
class BigqueryDatasetIamPolicy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATASET_ID_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    POLICY_DATA_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    dataset_id: builtins.str
    etag: builtins.str
    id: builtins.str
    policy_data: builtins.str
    project: builtins.str
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        dataset_id: builtins.str = ...,
        etag: builtins.str = ...,
        id: builtins.str = ...,
        policy_data: builtins.str = ...,
        project: builtins.str = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "etag", b"etag", "id", b"id", "policy_data", b"policy_data", "project", b"project", "resource_info", b"resource_info"]) -> None: ...

global___BigqueryDatasetIamPolicy = BigqueryDatasetIamPolicy

@typing_extensions.final
class BigqueryJobXCopyXDestinationEncryptionConfiguration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KMS_KEY_NAME_FIELD_NUMBER: builtins.int
    KMS_KEY_VERSION_FIELD_NUMBER: builtins.int
    kms_key_name: builtins.str
    kms_key_version: builtins.str
    def __init__(
        self,
        *,
        kms_key_name: builtins.str = ...,
        kms_key_version: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["kms_key_name", b"kms_key_name", "kms_key_version", b"kms_key_version"]) -> None: ...

global___BigqueryJobXCopyXDestinationEncryptionConfiguration = BigqueryJobXCopyXDestinationEncryptionConfiguration

@typing_extensions.final
class BigqueryJobXCopyXDestinationTable(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATASET_ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    TABLE_ID_FIELD_NUMBER: builtins.int
    dataset_id: builtins.str
    project_id: builtins.str
    table_id: builtins.str
    def __init__(
        self,
        *,
        dataset_id: builtins.str = ...,
        project_id: builtins.str = ...,
        table_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "project_id", b"project_id", "table_id", b"table_id"]) -> None: ...

global___BigqueryJobXCopyXDestinationTable = BigqueryJobXCopyXDestinationTable

@typing_extensions.final
class BigqueryJobXCopyXSourceTables(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATASET_ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    TABLE_ID_FIELD_NUMBER: builtins.int
    dataset_id: builtins.str
    project_id: builtins.str
    table_id: builtins.str
    def __init__(
        self,
        *,
        dataset_id: builtins.str = ...,
        project_id: builtins.str = ...,
        table_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "project_id", b"project_id", "table_id", b"table_id"]) -> None: ...

global___BigqueryJobXCopyXSourceTables = BigqueryJobXCopyXSourceTables

@typing_extensions.final
class BigqueryJobXCopy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATE_DISPOSITION_FIELD_NUMBER: builtins.int
    WRITE_DISPOSITION_FIELD_NUMBER: builtins.int
    DESTINATION_ENCRYPTION_CONFIGURATION_FIELD_NUMBER: builtins.int
    DESTINATION_TABLE_FIELD_NUMBER: builtins.int
    SOURCE_TABLES_FIELD_NUMBER: builtins.int
    create_disposition: builtins.str
    write_disposition: builtins.str
    @property
    def destination_encryption_configuration(self) -> global___BigqueryJobXCopyXDestinationEncryptionConfiguration: ...
    @property
    def destination_table(self) -> global___BigqueryJobXCopyXDestinationTable: ...
    @property
    def source_tables(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BigqueryJobXCopyXSourceTables]: ...
    def __init__(
        self,
        *,
        create_disposition: builtins.str = ...,
        write_disposition: builtins.str = ...,
        destination_encryption_configuration: global___BigqueryJobXCopyXDestinationEncryptionConfiguration | None = ...,
        destination_table: global___BigqueryJobXCopyXDestinationTable | None = ...,
        source_tables: collections.abc.Iterable[global___BigqueryJobXCopyXSourceTables] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["destination_encryption_configuration", b"destination_encryption_configuration", "destination_table", b"destination_table"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_disposition", b"create_disposition", "destination_encryption_configuration", b"destination_encryption_configuration", "destination_table", b"destination_table", "source_tables", b"source_tables", "write_disposition", b"write_disposition"]) -> None: ...

global___BigqueryJobXCopy = BigqueryJobXCopy

@typing_extensions.final
class BigqueryJobXExtractXSourceModel(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATASET_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    dataset_id: builtins.str
    model_id: builtins.str
    project_id: builtins.str
    def __init__(
        self,
        *,
        dataset_id: builtins.str = ...,
        model_id: builtins.str = ...,
        project_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "model_id", b"model_id", "project_id", b"project_id"]) -> None: ...

global___BigqueryJobXExtractXSourceModel = BigqueryJobXExtractXSourceModel

@typing_extensions.final
class BigqueryJobXExtractXSourceTable(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATASET_ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    TABLE_ID_FIELD_NUMBER: builtins.int
    dataset_id: builtins.str
    project_id: builtins.str
    table_id: builtins.str
    def __init__(
        self,
        *,
        dataset_id: builtins.str = ...,
        project_id: builtins.str = ...,
        table_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "project_id", b"project_id", "table_id", b"table_id"]) -> None: ...

global___BigqueryJobXExtractXSourceTable = BigqueryJobXExtractXSourceTable

@typing_extensions.final
class BigqueryJobXExtract(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COMPRESSION_FIELD_NUMBER: builtins.int
    DESTINATION_FORMAT_FIELD_NUMBER: builtins.int
    DESTINATION_URIS_FIELD_NUMBER: builtins.int
    FIELD_DELIMITER_FIELD_NUMBER: builtins.int
    PRINT_HEADER_FIELD_NUMBER: builtins.int
    USE_AVRO_LOGICAL_TYPES_FIELD_NUMBER: builtins.int
    SOURCE_MODEL_FIELD_NUMBER: builtins.int
    SOURCE_TABLE_FIELD_NUMBER: builtins.int
    compression: builtins.str
    destination_format: builtins.str
    @property
    def destination_uris(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    field_delimiter: builtins.str
    print_header: builtins.bool
    use_avro_logical_types: builtins.bool
    @property
    def source_model(self) -> global___BigqueryJobXExtractXSourceModel: ...
    @property
    def source_table(self) -> global___BigqueryJobXExtractXSourceTable: ...
    def __init__(
        self,
        *,
        compression: builtins.str = ...,
        destination_format: builtins.str = ...,
        destination_uris: collections.abc.Iterable[builtins.str] | None = ...,
        field_delimiter: builtins.str = ...,
        print_header: builtins.bool = ...,
        use_avro_logical_types: builtins.bool = ...,
        source_model: global___BigqueryJobXExtractXSourceModel | None = ...,
        source_table: global___BigqueryJobXExtractXSourceTable | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["source_model", b"source_model", "source_table", b"source_table"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["compression", b"compression", "destination_format", b"destination_format", "destination_uris", b"destination_uris", "field_delimiter", b"field_delimiter", "print_header", b"print_header", "source_model", b"source_model", "source_table", b"source_table", "use_avro_logical_types", b"use_avro_logical_types"]) -> None: ...

global___BigqueryJobXExtract = BigqueryJobXExtract

@typing_extensions.final
class BigqueryJobXLoadXDestinationEncryptionConfiguration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KMS_KEY_NAME_FIELD_NUMBER: builtins.int
    KMS_KEY_VERSION_FIELD_NUMBER: builtins.int
    kms_key_name: builtins.str
    kms_key_version: builtins.str
    def __init__(
        self,
        *,
        kms_key_name: builtins.str = ...,
        kms_key_version: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["kms_key_name", b"kms_key_name", "kms_key_version", b"kms_key_version"]) -> None: ...

global___BigqueryJobXLoadXDestinationEncryptionConfiguration = BigqueryJobXLoadXDestinationEncryptionConfiguration

@typing_extensions.final
class BigqueryJobXLoadXDestinationTable(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATASET_ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    TABLE_ID_FIELD_NUMBER: builtins.int
    dataset_id: builtins.str
    project_id: builtins.str
    table_id: builtins.str
    def __init__(
        self,
        *,
        dataset_id: builtins.str = ...,
        project_id: builtins.str = ...,
        table_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "project_id", b"project_id", "table_id", b"table_id"]) -> None: ...

global___BigqueryJobXLoadXDestinationTable = BigqueryJobXLoadXDestinationTable

@typing_extensions.final
class BigqueryJobXLoadXTimePartitioning(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXPIRATION_MS_FIELD_NUMBER: builtins.int
    FIELD_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    expiration_ms: builtins.str
    field: builtins.str
    type: builtins.str
    def __init__(
        self,
        *,
        expiration_ms: builtins.str = ...,
        field: builtins.str = ...,
        type: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["expiration_ms", b"expiration_ms", "field", b"field", "type", b"type"]) -> None: ...

global___BigqueryJobXLoadXTimePartitioning = BigqueryJobXLoadXTimePartitioning

@typing_extensions.final
class BigqueryJobXLoad(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALLOW_JAGGED_ROWS_FIELD_NUMBER: builtins.int
    ALLOW_QUOTED_NEWLINES_FIELD_NUMBER: builtins.int
    AUTODETECT_FIELD_NUMBER: builtins.int
    CREATE_DISPOSITION_FIELD_NUMBER: builtins.int
    ENCODING_FIELD_NUMBER: builtins.int
    FIELD_DELIMITER_FIELD_NUMBER: builtins.int
    IGNORE_UNKNOWN_VALUES_FIELD_NUMBER: builtins.int
    MAX_BAD_RECORDS_FIELD_NUMBER: builtins.int
    NULL_MARKER_FIELD_NUMBER: builtins.int
    PROJECTION_FIELDS_FIELD_NUMBER: builtins.int
    QUOTE_FIELD_NUMBER: builtins.int
    SCHEMA_UPDATE_OPTIONS_FIELD_NUMBER: builtins.int
    SKIP_LEADING_ROWS_FIELD_NUMBER: builtins.int
    SOURCE_FORMAT_FIELD_NUMBER: builtins.int
    SOURCE_URIS_FIELD_NUMBER: builtins.int
    WRITE_DISPOSITION_FIELD_NUMBER: builtins.int
    DESTINATION_ENCRYPTION_CONFIGURATION_FIELD_NUMBER: builtins.int
    DESTINATION_TABLE_FIELD_NUMBER: builtins.int
    TIME_PARTITIONING_FIELD_NUMBER: builtins.int
    allow_jagged_rows: builtins.bool
    allow_quoted_newlines: builtins.bool
    autodetect: builtins.bool
    create_disposition: builtins.str
    encoding: builtins.str
    field_delimiter: builtins.str
    ignore_unknown_values: builtins.bool
    max_bad_records: builtins.float
    null_marker: builtins.str
    @property
    def projection_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    quote: builtins.str
    @property
    def schema_update_options(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    skip_leading_rows: builtins.float
    source_format: builtins.str
    @property
    def source_uris(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    write_disposition: builtins.str
    @property
    def destination_encryption_configuration(self) -> global___BigqueryJobXLoadXDestinationEncryptionConfiguration: ...
    @property
    def destination_table(self) -> global___BigqueryJobXLoadXDestinationTable: ...
    @property
    def time_partitioning(self) -> global___BigqueryJobXLoadXTimePartitioning: ...
    def __init__(
        self,
        *,
        allow_jagged_rows: builtins.bool = ...,
        allow_quoted_newlines: builtins.bool = ...,
        autodetect: builtins.bool = ...,
        create_disposition: builtins.str = ...,
        encoding: builtins.str = ...,
        field_delimiter: builtins.str = ...,
        ignore_unknown_values: builtins.bool = ...,
        max_bad_records: builtins.float = ...,
        null_marker: builtins.str = ...,
        projection_fields: collections.abc.Iterable[builtins.str] | None = ...,
        quote: builtins.str = ...,
        schema_update_options: collections.abc.Iterable[builtins.str] | None = ...,
        skip_leading_rows: builtins.float = ...,
        source_format: builtins.str = ...,
        source_uris: collections.abc.Iterable[builtins.str] | None = ...,
        write_disposition: builtins.str = ...,
        destination_encryption_configuration: global___BigqueryJobXLoadXDestinationEncryptionConfiguration | None = ...,
        destination_table: global___BigqueryJobXLoadXDestinationTable | None = ...,
        time_partitioning: global___BigqueryJobXLoadXTimePartitioning | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["destination_encryption_configuration", b"destination_encryption_configuration", "destination_table", b"destination_table", "time_partitioning", b"time_partitioning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_jagged_rows", b"allow_jagged_rows", "allow_quoted_newlines", b"allow_quoted_newlines", "autodetect", b"autodetect", "create_disposition", b"create_disposition", "destination_encryption_configuration", b"destination_encryption_configuration", "destination_table", b"destination_table", "encoding", b"encoding", "field_delimiter", b"field_delimiter", "ignore_unknown_values", b"ignore_unknown_values", "max_bad_records", b"max_bad_records", "null_marker", b"null_marker", "projection_fields", b"projection_fields", "quote", b"quote", "schema_update_options", b"schema_update_options", "skip_leading_rows", b"skip_leading_rows", "source_format", b"source_format", "source_uris", b"source_uris", "time_partitioning", b"time_partitioning", "write_disposition", b"write_disposition"]) -> None: ...

global___BigqueryJobXLoad = BigqueryJobXLoad

@typing_extensions.final
class BigqueryJobXQueryXDefaultDataset(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATASET_ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    dataset_id: builtins.str
    project_id: builtins.str
    def __init__(
        self,
        *,
        dataset_id: builtins.str = ...,
        project_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "project_id", b"project_id"]) -> None: ...

global___BigqueryJobXQueryXDefaultDataset = BigqueryJobXQueryXDefaultDataset

@typing_extensions.final
class BigqueryJobXQueryXDestinationEncryptionConfiguration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KMS_KEY_NAME_FIELD_NUMBER: builtins.int
    KMS_KEY_VERSION_FIELD_NUMBER: builtins.int
    kms_key_name: builtins.str
    kms_key_version: builtins.str
    def __init__(
        self,
        *,
        kms_key_name: builtins.str = ...,
        kms_key_version: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["kms_key_name", b"kms_key_name", "kms_key_version", b"kms_key_version"]) -> None: ...

global___BigqueryJobXQueryXDestinationEncryptionConfiguration = BigqueryJobXQueryXDestinationEncryptionConfiguration

@typing_extensions.final
class BigqueryJobXQueryXDestinationTable(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATASET_ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    TABLE_ID_FIELD_NUMBER: builtins.int
    dataset_id: builtins.str
    project_id: builtins.str
    table_id: builtins.str
    def __init__(
        self,
        *,
        dataset_id: builtins.str = ...,
        project_id: builtins.str = ...,
        table_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "project_id", b"project_id", "table_id", b"table_id"]) -> None: ...

global___BigqueryJobXQueryXDestinationTable = BigqueryJobXQueryXDestinationTable

@typing_extensions.final
class BigqueryJobXQueryXScriptOptions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_RESULT_STATEMENT_FIELD_NUMBER: builtins.int
    STATEMENT_BYTE_BUDGET_FIELD_NUMBER: builtins.int
    STATEMENT_TIMEOUT_MS_FIELD_NUMBER: builtins.int
    key_result_statement: builtins.str
    statement_byte_budget: builtins.str
    statement_timeout_ms: builtins.str
    def __init__(
        self,
        *,
        key_result_statement: builtins.str = ...,
        statement_byte_budget: builtins.str = ...,
        statement_timeout_ms: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["key_result_statement", b"key_result_statement", "statement_byte_budget", b"statement_byte_budget", "statement_timeout_ms", b"statement_timeout_ms"]) -> None: ...

global___BigqueryJobXQueryXScriptOptions = BigqueryJobXQueryXScriptOptions

@typing_extensions.final
class BigqueryJobXQueryXUserDefinedFunctionResources(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INLINE_CODE_FIELD_NUMBER: builtins.int
    RESOURCE_URI_FIELD_NUMBER: builtins.int
    inline_code: builtins.str
    resource_uri: builtins.str
    def __init__(
        self,
        *,
        inline_code: builtins.str = ...,
        resource_uri: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["inline_code", b"inline_code", "resource_uri", b"resource_uri"]) -> None: ...

global___BigqueryJobXQueryXUserDefinedFunctionResources = BigqueryJobXQueryXUserDefinedFunctionResources

@typing_extensions.final
class BigqueryJobXQuery(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALLOW_LARGE_RESULTS_FIELD_NUMBER: builtins.int
    CREATE_DISPOSITION_FIELD_NUMBER: builtins.int
    FLATTEN_RESULTS_FIELD_NUMBER: builtins.int
    MAXIMUM_BILLING_TIER_FIELD_NUMBER: builtins.int
    MAXIMUM_BYTES_BILLED_FIELD_NUMBER: builtins.int
    PARAMETER_MODE_FIELD_NUMBER: builtins.int
    PRIORITY_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    SCHEMA_UPDATE_OPTIONS_FIELD_NUMBER: builtins.int
    USE_LEGACY_SQL_FIELD_NUMBER: builtins.int
    USE_QUERY_CACHE_FIELD_NUMBER: builtins.int
    WRITE_DISPOSITION_FIELD_NUMBER: builtins.int
    DEFAULT_DATASET_FIELD_NUMBER: builtins.int
    DESTINATION_ENCRYPTION_CONFIGURATION_FIELD_NUMBER: builtins.int
    DESTINATION_TABLE_FIELD_NUMBER: builtins.int
    SCRIPT_OPTIONS_FIELD_NUMBER: builtins.int
    USER_DEFINED_FUNCTION_RESOURCES_FIELD_NUMBER: builtins.int
    allow_large_results: builtins.bool
    create_disposition: builtins.str
    flatten_results: builtins.bool
    maximum_billing_tier: builtins.float
    maximum_bytes_billed: builtins.str
    parameter_mode: builtins.str
    priority: builtins.str
    query: builtins.str
    @property
    def schema_update_options(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    use_legacy_sql: builtins.bool
    use_query_cache: builtins.bool
    write_disposition: builtins.str
    @property
    def default_dataset(self) -> global___BigqueryJobXQueryXDefaultDataset: ...
    @property
    def destination_encryption_configuration(self) -> global___BigqueryJobXQueryXDestinationEncryptionConfiguration: ...
    @property
    def destination_table(self) -> global___BigqueryJobXQueryXDestinationTable: ...
    @property
    def script_options(self) -> global___BigqueryJobXQueryXScriptOptions: ...
    @property
    def user_defined_function_resources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BigqueryJobXQueryXUserDefinedFunctionResources]: ...
    def __init__(
        self,
        *,
        allow_large_results: builtins.bool = ...,
        create_disposition: builtins.str = ...,
        flatten_results: builtins.bool = ...,
        maximum_billing_tier: builtins.float = ...,
        maximum_bytes_billed: builtins.str = ...,
        parameter_mode: builtins.str = ...,
        priority: builtins.str = ...,
        query: builtins.str = ...,
        schema_update_options: collections.abc.Iterable[builtins.str] | None = ...,
        use_legacy_sql: builtins.bool = ...,
        use_query_cache: builtins.bool = ...,
        write_disposition: builtins.str = ...,
        default_dataset: global___BigqueryJobXQueryXDefaultDataset | None = ...,
        destination_encryption_configuration: global___BigqueryJobXQueryXDestinationEncryptionConfiguration | None = ...,
        destination_table: global___BigqueryJobXQueryXDestinationTable | None = ...,
        script_options: global___BigqueryJobXQueryXScriptOptions | None = ...,
        user_defined_function_resources: collections.abc.Iterable[global___BigqueryJobXQueryXUserDefinedFunctionResources] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["default_dataset", b"default_dataset", "destination_encryption_configuration", b"destination_encryption_configuration", "destination_table", b"destination_table", "script_options", b"script_options"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_large_results", b"allow_large_results", "create_disposition", b"create_disposition", "default_dataset", b"default_dataset", "destination_encryption_configuration", b"destination_encryption_configuration", "destination_table", b"destination_table", "flatten_results", b"flatten_results", "maximum_billing_tier", b"maximum_billing_tier", "maximum_bytes_billed", b"maximum_bytes_billed", "parameter_mode", b"parameter_mode", "priority", b"priority", "query", b"query", "schema_update_options", b"schema_update_options", "script_options", b"script_options", "use_legacy_sql", b"use_legacy_sql", "use_query_cache", b"use_query_cache", "user_defined_function_resources", b"user_defined_function_resources", "write_disposition", b"write_disposition"]) -> None: ...

global___BigqueryJobXQuery = BigqueryJobXQuery

@typing_extensions.final
class BigqueryJobXTimeouts(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATE_FIELD_NUMBER: builtins.int
    DELETE_FIELD_NUMBER: builtins.int
    create: builtins.str
    delete: builtins.str
    def __init__(
        self,
        *,
        create: builtins.str = ...,
        delete: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["create", b"create", "delete", b"delete"]) -> None: ...

global___BigqueryJobXTimeouts = BigqueryJobXTimeouts

@typing_extensions.final
class BigqueryJob(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing_extensions.final
    class StatusEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    JOB_ID_FIELD_NUMBER: builtins.int
    JOB_TIMEOUT_MS_FIELD_NUMBER: builtins.int
    JOB_TYPE_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    USER_EMAIL_FIELD_NUMBER: builtins.int
    COPY_FIELD_NUMBER: builtins.int
    EXTRACT_FIELD_NUMBER: builtins.int
    LOAD_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    TIMEOUTS_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    id: builtins.str
    job_id: builtins.str
    job_timeout_ms: builtins.str
    job_type: builtins.str
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    location: builtins.str
    project: builtins.str
    @property
    def status(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    user_email: builtins.str
    @property
    def copy(self) -> global___BigqueryJobXCopy: ...
    @property
    def extract(self) -> global___BigqueryJobXExtract: ...
    @property
    def load(self) -> global___BigqueryJobXLoad: ...
    @property
    def query(self) -> global___BigqueryJobXQuery: ...
    @property
    def timeouts(self) -> global___BigqueryJobXTimeouts: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        job_id: builtins.str = ...,
        job_timeout_ms: builtins.str = ...,
        job_type: builtins.str = ...,
        labels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        location: builtins.str = ...,
        project: builtins.str = ...,
        status: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        user_email: builtins.str = ...,
        copy: global___BigqueryJobXCopy | None = ...,
        extract: global___BigqueryJobXExtract | None = ...,
        load: global___BigqueryJobXLoad | None = ...,
        query: global___BigqueryJobXQuery | None = ...,
        timeouts: global___BigqueryJobXTimeouts | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["copy", b"copy", "extract", b"extract", "load", b"load", "query", b"query", "resource_info", b"resource_info", "timeouts", b"timeouts"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["copy", b"copy", "extract", b"extract", "id", b"id", "job_id", b"job_id", "job_timeout_ms", b"job_timeout_ms", "job_type", b"job_type", "labels", b"labels", "load", b"load", "location", b"location", "project", b"project", "query", b"query", "resource_info", b"resource_info", "status", b"status", "timeouts", b"timeouts", "user_email", b"user_email"]) -> None: ...

global___BigqueryJob = BigqueryJob

@typing_extensions.final
class BigqueryReservationXTimeouts(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATE_FIELD_NUMBER: builtins.int
    DELETE_FIELD_NUMBER: builtins.int
    UPDATE_FIELD_NUMBER: builtins.int
    create: builtins.str
    delete: builtins.str
    update: builtins.str
    def __init__(
        self,
        *,
        create: builtins.str = ...,
        delete: builtins.str = ...,
        update: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["create", b"create", "delete", b"delete", "update", b"update"]) -> None: ...

global___BigqueryReservationXTimeouts = BigqueryReservationXTimeouts

@typing_extensions.final
class BigqueryReservation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    IGNORE_IDLE_SLOTS_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    SLOT_CAPACITY_FIELD_NUMBER: builtins.int
    TIMEOUTS_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    id: builtins.str
    ignore_idle_slots: builtins.bool
    location: builtins.str
    name: builtins.str
    project: builtins.str
    slot_capacity: builtins.float
    @property
    def timeouts(self) -> global___BigqueryReservationXTimeouts: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        ignore_idle_slots: builtins.bool = ...,
        location: builtins.str = ...,
        name: builtins.str = ...,
        project: builtins.str = ...,
        slot_capacity: builtins.float = ...,
        timeouts: global___BigqueryReservationXTimeouts | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info", "timeouts", b"timeouts"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "ignore_idle_slots", b"ignore_idle_slots", "location", b"location", "name", b"name", "project", b"project", "resource_info", b"resource_info", "slot_capacity", b"slot_capacity", "timeouts", b"timeouts"]) -> None: ...

global___BigqueryReservation = BigqueryReservation

@typing_extensions.final
class BigqueryReservationAssignmentXTimeouts(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATE_FIELD_NUMBER: builtins.int
    DELETE_FIELD_NUMBER: builtins.int
    create: builtins.str
    delete: builtins.str
    def __init__(
        self,
        *,
        create: builtins.str = ...,
        delete: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["create", b"create", "delete", b"delete"]) -> None: ...

global___BigqueryReservationAssignmentXTimeouts = BigqueryReservationAssignmentXTimeouts

@typing_extensions.final
class BigqueryReservationAssignment(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSIGNEE_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    JOB_TYPE_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RESERVATION_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    TIMEOUTS_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    assignee: builtins.str
    id: builtins.str
    job_type: builtins.str
    location: builtins.str
    name: builtins.str
    project: builtins.str
    reservation: builtins.str
    state: builtins.str
    @property
    def timeouts(self) -> global___BigqueryReservationAssignmentXTimeouts: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        assignee: builtins.str = ...,
        id: builtins.str = ...,
        job_type: builtins.str = ...,
        location: builtins.str = ...,
        name: builtins.str = ...,
        project: builtins.str = ...,
        reservation: builtins.str = ...,
        state: builtins.str = ...,
        timeouts: global___BigqueryReservationAssignmentXTimeouts | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info", "timeouts", b"timeouts"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["assignee", b"assignee", "id", b"id", "job_type", b"job_type", "location", b"location", "name", b"name", "project", b"project", "reservation", b"reservation", "resource_info", b"resource_info", "state", b"state", "timeouts", b"timeouts"]) -> None: ...

global___BigqueryReservationAssignment = BigqueryReservationAssignment

@typing_extensions.final
class BigqueryRoutineXArguments(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ARGUMENT_KIND_FIELD_NUMBER: builtins.int
    DATA_TYPE_FIELD_NUMBER: builtins.int
    MODE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    argument_kind: builtins.str
    data_type: builtins.str
    mode: builtins.str
    name: builtins.str
    def __init__(
        self,
        *,
        argument_kind: builtins.str = ...,
        data_type: builtins.str = ...,
        mode: builtins.str = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["argument_kind", b"argument_kind", "data_type", b"data_type", "mode", b"mode", "name", b"name"]) -> None: ...

global___BigqueryRoutineXArguments = BigqueryRoutineXArguments

@typing_extensions.final
class BigqueryRoutineXTimeouts(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATE_FIELD_NUMBER: builtins.int
    DELETE_FIELD_NUMBER: builtins.int
    UPDATE_FIELD_NUMBER: builtins.int
    create: builtins.str
    delete: builtins.str
    update: builtins.str
    def __init__(
        self,
        *,
        create: builtins.str = ...,
        delete: builtins.str = ...,
        update: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["create", b"create", "delete", b"delete", "update", b"update"]) -> None: ...

global___BigqueryRoutineXTimeouts = BigqueryRoutineXTimeouts

@typing_extensions.final
class BigqueryRoutine(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATION_TIME_FIELD_NUMBER: builtins.int
    DATASET_ID_FIELD_NUMBER: builtins.int
    DEFINITION_BODY_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DETERMINISM_LEVEL_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    IMPORTED_LIBRARIES_FIELD_NUMBER: builtins.int
    LANGUAGE_FIELD_NUMBER: builtins.int
    LAST_MODIFIED_TIME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_TABLE_TYPE_FIELD_NUMBER: builtins.int
    RETURN_TYPE_FIELD_NUMBER: builtins.int
    ROUTINE_ID_FIELD_NUMBER: builtins.int
    ROUTINE_TYPE_FIELD_NUMBER: builtins.int
    ARGUMENTS_FIELD_NUMBER: builtins.int
    TIMEOUTS_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    creation_time: builtins.float
    dataset_id: builtins.str
    definition_body: builtins.str
    description: builtins.str
    determinism_level: builtins.str
    id: builtins.str
    @property
    def imported_libraries(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    language: builtins.str
    last_modified_time: builtins.float
    project: builtins.str
    return_table_type: builtins.str
    return_type: builtins.str
    routine_id: builtins.str
    routine_type: builtins.str
    @property
    def arguments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BigqueryRoutineXArguments]: ...
    @property
    def timeouts(self) -> global___BigqueryRoutineXTimeouts: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        creation_time: builtins.float = ...,
        dataset_id: builtins.str = ...,
        definition_body: builtins.str = ...,
        description: builtins.str = ...,
        determinism_level: builtins.str = ...,
        id: builtins.str = ...,
        imported_libraries: collections.abc.Iterable[builtins.str] | None = ...,
        language: builtins.str = ...,
        last_modified_time: builtins.float = ...,
        project: builtins.str = ...,
        return_table_type: builtins.str = ...,
        return_type: builtins.str = ...,
        routine_id: builtins.str = ...,
        routine_type: builtins.str = ...,
        arguments: collections.abc.Iterable[global___BigqueryRoutineXArguments] | None = ...,
        timeouts: global___BigqueryRoutineXTimeouts | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info", "timeouts", b"timeouts"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["arguments", b"arguments", "creation_time", b"creation_time", "dataset_id", b"dataset_id", "definition_body", b"definition_body", "description", b"description", "determinism_level", b"determinism_level", "id", b"id", "imported_libraries", b"imported_libraries", "language", b"language", "last_modified_time", b"last_modified_time", "project", b"project", "resource_info", b"resource_info", "return_table_type", b"return_table_type", "return_type", b"return_type", "routine_id", b"routine_id", "routine_type", b"routine_type", "timeouts", b"timeouts"]) -> None: ...

global___BigqueryRoutine = BigqueryRoutine

@typing_extensions.final
class BigqueryTableXEncryptionConfiguration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KMS_KEY_NAME_FIELD_NUMBER: builtins.int
    KMS_KEY_VERSION_FIELD_NUMBER: builtins.int
    kms_key_name: builtins.str
    kms_key_version: builtins.str
    def __init__(
        self,
        *,
        kms_key_name: builtins.str = ...,
        kms_key_version: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["kms_key_name", b"kms_key_name", "kms_key_version", b"kms_key_version"]) -> None: ...

global___BigqueryTableXEncryptionConfiguration = BigqueryTableXEncryptionConfiguration

@typing_extensions.final
class BigqueryTableXExternalDataConfigurationXCsvOptions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALLOW_JAGGED_ROWS_FIELD_NUMBER: builtins.int
    ALLOW_QUOTED_NEWLINES_FIELD_NUMBER: builtins.int
    ENCODING_FIELD_NUMBER: builtins.int
    FIELD_DELIMITER_FIELD_NUMBER: builtins.int
    QUOTE_FIELD_NUMBER: builtins.int
    SKIP_LEADING_ROWS_FIELD_NUMBER: builtins.int
    allow_jagged_rows: builtins.bool
    allow_quoted_newlines: builtins.bool
    encoding: builtins.str
    field_delimiter: builtins.str
    quote: builtins.str
    skip_leading_rows: builtins.float
    def __init__(
        self,
        *,
        allow_jagged_rows: builtins.bool = ...,
        allow_quoted_newlines: builtins.bool = ...,
        encoding: builtins.str = ...,
        field_delimiter: builtins.str = ...,
        quote: builtins.str = ...,
        skip_leading_rows: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_jagged_rows", b"allow_jagged_rows", "allow_quoted_newlines", b"allow_quoted_newlines", "encoding", b"encoding", "field_delimiter", b"field_delimiter", "quote", b"quote", "skip_leading_rows", b"skip_leading_rows"]) -> None: ...

global___BigqueryTableXExternalDataConfigurationXCsvOptions = BigqueryTableXExternalDataConfigurationXCsvOptions

@typing_extensions.final
class BigqueryTableXExternalDataConfigurationXSheetsOptions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RANGE_FIELD_NUMBER: builtins.int
    SKIP_LEADING_ROWS_FIELD_NUMBER: builtins.int
    range: builtins.str
    skip_leading_rows: builtins.float
    def __init__(
        self,
        *,
        range: builtins.str = ...,
        skip_leading_rows: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["range", b"range", "skip_leading_rows", b"skip_leading_rows"]) -> None: ...

global___BigqueryTableXExternalDataConfigurationXSheetsOptions = BigqueryTableXExternalDataConfigurationXSheetsOptions

@typing_extensions.final
class BigqueryTableXExternalDataConfigurationXHivePartitioningOptions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MODE_FIELD_NUMBER: builtins.int
    REQUIRE_PARTITION_FILTER_FIELD_NUMBER: builtins.int
    SOURCE_URI_PREFIX_FIELD_NUMBER: builtins.int
    mode: builtins.str
    require_partition_filter: builtins.bool
    source_uri_prefix: builtins.str
    def __init__(
        self,
        *,
        mode: builtins.str = ...,
        require_partition_filter: builtins.bool = ...,
        source_uri_prefix: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["mode", b"mode", "require_partition_filter", b"require_partition_filter", "source_uri_prefix", b"source_uri_prefix"]) -> None: ...

global___BigqueryTableXExternalDataConfigurationXHivePartitioningOptions = BigqueryTableXExternalDataConfigurationXHivePartitioningOptions

@typing_extensions.final
class BigqueryTableXExternalDataConfiguration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AUTODETECT_FIELD_NUMBER: builtins.int
    COMPRESSION_FIELD_NUMBER: builtins.int
    CONNECTION_ID_FIELD_NUMBER: builtins.int
    IGNORE_UNKNOWN_VALUES_FIELD_NUMBER: builtins.int
    MAX_BAD_RECORDS_FIELD_NUMBER: builtins.int
    SCHEMA_FIELD_NUMBER: builtins.int
    SOURCE_FORMAT_FIELD_NUMBER: builtins.int
    SOURCE_URIS_FIELD_NUMBER: builtins.int
    CSV_OPTIONS_FIELD_NUMBER: builtins.int
    GOOGLE_SHEETS_OPTIONS_FIELD_NUMBER: builtins.int
    HIVE_PARTITIONING_OPTIONS_FIELD_NUMBER: builtins.int
    autodetect: builtins.bool
    compression: builtins.str
    connection_id: builtins.str
    ignore_unknown_values: builtins.bool
    max_bad_records: builtins.float
    schema: builtins.str
    source_format: builtins.str
    @property
    def source_uris(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def csv_options(self) -> global___BigqueryTableXExternalDataConfigurationXCsvOptions: ...
    @property
    def google_sheets_options(self) -> global___BigqueryTableXExternalDataConfigurationXSheetsOptions: ...
    @property
    def hive_partitioning_options(self) -> global___BigqueryTableXExternalDataConfigurationXHivePartitioningOptions: ...
    def __init__(
        self,
        *,
        autodetect: builtins.bool = ...,
        compression: builtins.str = ...,
        connection_id: builtins.str = ...,
        ignore_unknown_values: builtins.bool = ...,
        max_bad_records: builtins.float = ...,
        schema: builtins.str = ...,
        source_format: builtins.str = ...,
        source_uris: collections.abc.Iterable[builtins.str] | None = ...,
        csv_options: global___BigqueryTableXExternalDataConfigurationXCsvOptions | None = ...,
        google_sheets_options: global___BigqueryTableXExternalDataConfigurationXSheetsOptions | None = ...,
        hive_partitioning_options: global___BigqueryTableXExternalDataConfigurationXHivePartitioningOptions | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["csv_options", b"csv_options", "google_sheets_options", b"google_sheets_options", "hive_partitioning_options", b"hive_partitioning_options"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["autodetect", b"autodetect", "compression", b"compression", "connection_id", b"connection_id", "csv_options", b"csv_options", "google_sheets_options", b"google_sheets_options", "hive_partitioning_options", b"hive_partitioning_options", "ignore_unknown_values", b"ignore_unknown_values", "max_bad_records", b"max_bad_records", "schema", b"schema", "source_format", b"source_format", "source_uris", b"source_uris"]) -> None: ...

global___BigqueryTableXExternalDataConfiguration = BigqueryTableXExternalDataConfiguration

@typing_extensions.final
class BigqueryTableXMaterializedView(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENABLE_REFRESH_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    REFRESH_INTERVAL_MS_FIELD_NUMBER: builtins.int
    enable_refresh: builtins.bool
    query: builtins.str
    refresh_interval_ms: builtins.float
    def __init__(
        self,
        *,
        enable_refresh: builtins.bool = ...,
        query: builtins.str = ...,
        refresh_interval_ms: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enable_refresh", b"enable_refresh", "query", b"query", "refresh_interval_ms", b"refresh_interval_ms"]) -> None: ...

global___BigqueryTableXMaterializedView = BigqueryTableXMaterializedView

@typing_extensions.final
class BigqueryTableXRangePartitioningXRange(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    END_FIELD_NUMBER: builtins.int
    INTERVAL_FIELD_NUMBER: builtins.int
    START_FIELD_NUMBER: builtins.int
    end: builtins.float
    interval: builtins.float
    start: builtins.float
    def __init__(
        self,
        *,
        end: builtins.float = ...,
        interval: builtins.float = ...,
        start: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["end", b"end", "interval", b"interval", "start", b"start"]) -> None: ...

global___BigqueryTableXRangePartitioningXRange = BigqueryTableXRangePartitioningXRange

@typing_extensions.final
class BigqueryTableXRangePartitioning(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FIELD_FIELD_NUMBER: builtins.int
    RANGE_FIELD_NUMBER: builtins.int
    field: builtins.str
    @property
    def range(self) -> global___BigqueryTableXRangePartitioningXRange: ...
    def __init__(
        self,
        *,
        field: builtins.str = ...,
        range: global___BigqueryTableXRangePartitioningXRange | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["range", b"range"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["field", b"field", "range", b"range"]) -> None: ...

global___BigqueryTableXRangePartitioning = BigqueryTableXRangePartitioning

@typing_extensions.final
class BigqueryTableXTimePartitioning(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXPIRATION_MS_FIELD_NUMBER: builtins.int
    FIELD_FIELD_NUMBER: builtins.int
    REQUIRE_PARTITION_FILTER_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    expiration_ms: builtins.float
    field: builtins.str
    require_partition_filter: builtins.bool
    type: builtins.str
    def __init__(
        self,
        *,
        expiration_ms: builtins.float = ...,
        field: builtins.str = ...,
        require_partition_filter: builtins.bool = ...,
        type: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["expiration_ms", b"expiration_ms", "field", b"field", "require_partition_filter", b"require_partition_filter", "type", b"type"]) -> None: ...

global___BigqueryTableXTimePartitioning = BigqueryTableXTimePartitioning

@typing_extensions.final
class BigqueryTableXView(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    QUERY_FIELD_NUMBER: builtins.int
    USE_LEGACY_SQL_FIELD_NUMBER: builtins.int
    query: builtins.str
    use_legacy_sql: builtins.bool
    def __init__(
        self,
        *,
        query: builtins.str = ...,
        use_legacy_sql: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["query", b"query", "use_legacy_sql", b"use_legacy_sql"]) -> None: ...

global___BigqueryTableXView = BigqueryTableXView

@typing_extensions.final
class BigqueryTable(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    CLUSTERING_FIELD_NUMBER: builtins.int
    CREATION_TIME_FIELD_NUMBER: builtins.int
    DATASET_ID_FIELD_NUMBER: builtins.int
    DELETION_PROTECTION_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    EXPIRATION_TIME_FIELD_NUMBER: builtins.int
    FRIENDLY_NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    LAST_MODIFIED_TIME_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    NUM_BYTES_FIELD_NUMBER: builtins.int
    NUM_LONG_TERM_BYTES_FIELD_NUMBER: builtins.int
    NUM_ROWS_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    SCHEMA_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    TABLE_ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    ENCRYPTION_CONFIGURATION_FIELD_NUMBER: builtins.int
    EXTERNAL_DATA_CONFIGURATION_FIELD_NUMBER: builtins.int
    MATERIALIZED_VIEW_FIELD_NUMBER: builtins.int
    RANGE_PARTITIONING_FIELD_NUMBER: builtins.int
    TIME_PARTITIONING_FIELD_NUMBER: builtins.int
    VIEW_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    @property
    def clustering(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    creation_time: builtins.float
    dataset_id: builtins.str
    deletion_protection: builtins.bool
    description: builtins.str
    etag: builtins.str
    expiration_time: builtins.float
    friendly_name: builtins.str
    id: builtins.str
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    last_modified_time: builtins.float
    location: builtins.str
    num_bytes: builtins.float
    num_long_term_bytes: builtins.float
    num_rows: builtins.float
    project: builtins.str
    schema: builtins.str
    self_link: builtins.str
    table_id: builtins.str
    type: builtins.str
    @property
    def encryption_configuration(self) -> global___BigqueryTableXEncryptionConfiguration: ...
    @property
    def external_data_configuration(self) -> global___BigqueryTableXExternalDataConfiguration: ...
    @property
    def materialized_view(self) -> global___BigqueryTableXMaterializedView: ...
    @property
    def range_partitioning(self) -> global___BigqueryTableXRangePartitioning: ...
    @property
    def time_partitioning(self) -> global___BigqueryTableXTimePartitioning: ...
    @property
    def view(self) -> global___BigqueryTableXView: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        clustering: collections.abc.Iterable[builtins.str] | None = ...,
        creation_time: builtins.float = ...,
        dataset_id: builtins.str = ...,
        deletion_protection: builtins.bool = ...,
        description: builtins.str = ...,
        etag: builtins.str = ...,
        expiration_time: builtins.float = ...,
        friendly_name: builtins.str = ...,
        id: builtins.str = ...,
        labels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        last_modified_time: builtins.float = ...,
        location: builtins.str = ...,
        num_bytes: builtins.float = ...,
        num_long_term_bytes: builtins.float = ...,
        num_rows: builtins.float = ...,
        project: builtins.str = ...,
        schema: builtins.str = ...,
        self_link: builtins.str = ...,
        table_id: builtins.str = ...,
        type: builtins.str = ...,
        encryption_configuration: global___BigqueryTableXEncryptionConfiguration | None = ...,
        external_data_configuration: global___BigqueryTableXExternalDataConfiguration | None = ...,
        materialized_view: global___BigqueryTableXMaterializedView | None = ...,
        range_partitioning: global___BigqueryTableXRangePartitioning | None = ...,
        time_partitioning: global___BigqueryTableXTimePartitioning | None = ...,
        view: global___BigqueryTableXView | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["encryption_configuration", b"encryption_configuration", "external_data_configuration", b"external_data_configuration", "materialized_view", b"materialized_view", "range_partitioning", b"range_partitioning", "resource_info", b"resource_info", "time_partitioning", b"time_partitioning", "view", b"view"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["clustering", b"clustering", "creation_time", b"creation_time", "dataset_id", b"dataset_id", "deletion_protection", b"deletion_protection", "description", b"description", "encryption_configuration", b"encryption_configuration", "etag", b"etag", "expiration_time", b"expiration_time", "external_data_configuration", b"external_data_configuration", "friendly_name", b"friendly_name", "id", b"id", "labels", b"labels", "last_modified_time", b"last_modified_time", "location", b"location", "materialized_view", b"materialized_view", "num_bytes", b"num_bytes", "num_long_term_bytes", b"num_long_term_bytes", "num_rows", b"num_rows", "project", b"project", "range_partitioning", b"range_partitioning", "resource_info", b"resource_info", "schema", b"schema", "self_link", b"self_link", "table_id", b"table_id", "time_partitioning", b"time_partitioning", "type", b"type", "view", b"view"]) -> None: ...

global___BigqueryTable = BigqueryTable

@typing_extensions.final
class BigqueryTableIamBindingXCondition(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DESCRIPTION_FIELD_NUMBER: builtins.int
    EXPRESSION_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    description: builtins.str
    expression: builtins.str
    title: builtins.str
    def __init__(
        self,
        *,
        description: builtins.str = ...,
        expression: builtins.str = ...,
        title: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description", b"description", "expression", b"expression", "title", b"title"]) -> None: ...

global___BigqueryTableIamBindingXCondition = BigqueryTableIamBindingXCondition

@typing_extensions.final
class BigqueryTableIamBinding(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATASET_ID_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    MEMBERS_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ROLE_FIELD_NUMBER: builtins.int
    TABLE_ID_FIELD_NUMBER: builtins.int
    CONDITION_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    dataset_id: builtins.str
    etag: builtins.str
    id: builtins.str
    @property
    def members(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    project: builtins.str
    role: builtins.str
    table_id: builtins.str
    @property
    def condition(self) -> global___BigqueryTableIamBindingXCondition: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        dataset_id: builtins.str = ...,
        etag: builtins.str = ...,
        id: builtins.str = ...,
        members: collections.abc.Iterable[builtins.str] | None = ...,
        project: builtins.str = ...,
        role: builtins.str = ...,
        table_id: builtins.str = ...,
        condition: global___BigqueryTableIamBindingXCondition | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["condition", b"condition", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["condition", b"condition", "dataset_id", b"dataset_id", "etag", b"etag", "id", b"id", "members", b"members", "project", b"project", "resource_info", b"resource_info", "role", b"role", "table_id", b"table_id"]) -> None: ...

global___BigqueryTableIamBinding = BigqueryTableIamBinding

@typing_extensions.final
class BigqueryTableIamMemberXCondition(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DESCRIPTION_FIELD_NUMBER: builtins.int
    EXPRESSION_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    description: builtins.str
    expression: builtins.str
    title: builtins.str
    def __init__(
        self,
        *,
        description: builtins.str = ...,
        expression: builtins.str = ...,
        title: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description", b"description", "expression", b"expression", "title", b"title"]) -> None: ...

global___BigqueryTableIamMemberXCondition = BigqueryTableIamMemberXCondition

@typing_extensions.final
class BigqueryTableIamMember(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATASET_ID_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    MEMBER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ROLE_FIELD_NUMBER: builtins.int
    TABLE_ID_FIELD_NUMBER: builtins.int
    CONDITION_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    dataset_id: builtins.str
    etag: builtins.str
    id: builtins.str
    member: builtins.str
    project: builtins.str
    role: builtins.str
    table_id: builtins.str
    @property
    def condition(self) -> global___BigqueryTableIamMemberXCondition: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        dataset_id: builtins.str = ...,
        etag: builtins.str = ...,
        id: builtins.str = ...,
        member: builtins.str = ...,
        project: builtins.str = ...,
        role: builtins.str = ...,
        table_id: builtins.str = ...,
        condition: global___BigqueryTableIamMemberXCondition | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["condition", b"condition", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["condition", b"condition", "dataset_id", b"dataset_id", "etag", b"etag", "id", b"id", "member", b"member", "project", b"project", "resource_info", b"resource_info", "role", b"role", "table_id", b"table_id"]) -> None: ...

global___BigqueryTableIamMember = BigqueryTableIamMember

@typing_extensions.final
class BigqueryTableIamPolicy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATASET_ID_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    POLICY_DATA_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    TABLE_ID_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    dataset_id: builtins.str
    etag: builtins.str
    id: builtins.str
    policy_data: builtins.str
    project: builtins.str
    table_id: builtins.str
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        dataset_id: builtins.str = ...,
        etag: builtins.str = ...,
        id: builtins.str = ...,
        policy_data: builtins.str = ...,
        project: builtins.str = ...,
        table_id: builtins.str = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "etag", b"etag", "id", b"id", "policy_data", b"policy_data", "project", b"project", "resource_info", b"resource_info", "table_id", b"table_id"]) -> None: ...

global___BigqueryTableIamPolicy = BigqueryTableIamPolicy
