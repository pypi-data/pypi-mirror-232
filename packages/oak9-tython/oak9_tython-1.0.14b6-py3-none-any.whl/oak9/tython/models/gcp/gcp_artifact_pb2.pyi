"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import shared.shared_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class ArtifactRegistryRepositoryXMavenConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALLOW_SNAPSHOT_OVERWRITES_FIELD_NUMBER: builtins.int
    VERSION_POLICY_FIELD_NUMBER: builtins.int
    allow_snapshot_overwrites: builtins.bool
    version_policy: builtins.str
    def __init__(
        self,
        *,
        allow_snapshot_overwrites: builtins.bool = ...,
        version_policy: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_snapshot_overwrites", b"allow_snapshot_overwrites", "version_policy", b"version_policy"]) -> None: ...

global___ArtifactRegistryRepositoryXMavenConfig = ArtifactRegistryRepositoryXMavenConfig

@typing_extensions.final
class ArtifactRegistryRepositoryXTimeouts(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATE_FIELD_NUMBER: builtins.int
    DELETE_FIELD_NUMBER: builtins.int
    UPDATE_FIELD_NUMBER: builtins.int
    create: builtins.str
    delete: builtins.str
    update: builtins.str
    def __init__(
        self,
        *,
        create: builtins.str = ...,
        delete: builtins.str = ...,
        update: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["create", b"create", "delete", b"delete", "update", b"update"]) -> None: ...

global___ArtifactRegistryRepositoryXTimeouts = ArtifactRegistryRepositoryXTimeouts

@typing_extensions.final
class ArtifactRegistryRepository(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    CREATE_TIME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    FORMAT_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KMS_KEY_NAME_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REPOSITORY_ID_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    MAVEN_CONFIG_FIELD_NUMBER: builtins.int
    TIMEOUTS_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    create_time: builtins.str
    description: builtins.str
    format: builtins.str
    id: builtins.str
    kms_key_name: builtins.str
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    location: builtins.str
    name: builtins.str
    project: builtins.str
    repository_id: builtins.str
    update_time: builtins.str
    @property
    def maven_config(self) -> global___ArtifactRegistryRepositoryXMavenConfig: ...
    @property
    def timeouts(self) -> global___ArtifactRegistryRepositoryXTimeouts: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        create_time: builtins.str = ...,
        description: builtins.str = ...,
        format: builtins.str = ...,
        id: builtins.str = ...,
        kms_key_name: builtins.str = ...,
        labels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        location: builtins.str = ...,
        name: builtins.str = ...,
        project: builtins.str = ...,
        repository_id: builtins.str = ...,
        update_time: builtins.str = ...,
        maven_config: global___ArtifactRegistryRepositoryXMavenConfig | None = ...,
        timeouts: global___ArtifactRegistryRepositoryXTimeouts | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["maven_config", b"maven_config", "resource_info", b"resource_info", "timeouts", b"timeouts"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time", b"create_time", "description", b"description", "format", b"format", "id", b"id", "kms_key_name", b"kms_key_name", "labels", b"labels", "location", b"location", "maven_config", b"maven_config", "name", b"name", "project", b"project", "repository_id", b"repository_id", "resource_info", b"resource_info", "timeouts", b"timeouts", "update_time", b"update_time"]) -> None: ...

global___ArtifactRegistryRepository = ArtifactRegistryRepository

@typing_extensions.final
class ArtifactRegistryRepositoryIamBindingXCondition(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DESCRIPTION_FIELD_NUMBER: builtins.int
    EXPRESSION_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    description: builtins.str
    expression: builtins.str
    title: builtins.str
    def __init__(
        self,
        *,
        description: builtins.str = ...,
        expression: builtins.str = ...,
        title: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description", b"description", "expression", b"expression", "title", b"title"]) -> None: ...

global___ArtifactRegistryRepositoryIamBindingXCondition = ArtifactRegistryRepositoryIamBindingXCondition

@typing_extensions.final
class ArtifactRegistryRepositoryIamBinding(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ETAG_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    MEMBERS_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REPOSITORY_FIELD_NUMBER: builtins.int
    ROLE_FIELD_NUMBER: builtins.int
    CONDITION_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    etag: builtins.str
    id: builtins.str
    location: builtins.str
    @property
    def members(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    project: builtins.str
    repository: builtins.str
    role: builtins.str
    @property
    def condition(self) -> global___ArtifactRegistryRepositoryIamBindingXCondition: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        etag: builtins.str = ...,
        id: builtins.str = ...,
        location: builtins.str = ...,
        members: collections.abc.Iterable[builtins.str] | None = ...,
        project: builtins.str = ...,
        repository: builtins.str = ...,
        role: builtins.str = ...,
        condition: global___ArtifactRegistryRepositoryIamBindingXCondition | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["condition", b"condition", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["condition", b"condition", "etag", b"etag", "id", b"id", "location", b"location", "members", b"members", "project", b"project", "repository", b"repository", "resource_info", b"resource_info", "role", b"role"]) -> None: ...

global___ArtifactRegistryRepositoryIamBinding = ArtifactRegistryRepositoryIamBinding

@typing_extensions.final
class ArtifactRegistryRepositoryIamMemberXCondition(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DESCRIPTION_FIELD_NUMBER: builtins.int
    EXPRESSION_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    description: builtins.str
    expression: builtins.str
    title: builtins.str
    def __init__(
        self,
        *,
        description: builtins.str = ...,
        expression: builtins.str = ...,
        title: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description", b"description", "expression", b"expression", "title", b"title"]) -> None: ...

global___ArtifactRegistryRepositoryIamMemberXCondition = ArtifactRegistryRepositoryIamMemberXCondition

@typing_extensions.final
class ArtifactRegistryRepositoryIamMember(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ETAG_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    MEMBER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REPOSITORY_FIELD_NUMBER: builtins.int
    ROLE_FIELD_NUMBER: builtins.int
    CONDITION_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    etag: builtins.str
    id: builtins.str
    location: builtins.str
    member: builtins.str
    project: builtins.str
    repository: builtins.str
    role: builtins.str
    @property
    def condition(self) -> global___ArtifactRegistryRepositoryIamMemberXCondition: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        etag: builtins.str = ...,
        id: builtins.str = ...,
        location: builtins.str = ...,
        member: builtins.str = ...,
        project: builtins.str = ...,
        repository: builtins.str = ...,
        role: builtins.str = ...,
        condition: global___ArtifactRegistryRepositoryIamMemberXCondition | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["condition", b"condition", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["condition", b"condition", "etag", b"etag", "id", b"id", "location", b"location", "member", b"member", "project", b"project", "repository", b"repository", "resource_info", b"resource_info", "role", b"role"]) -> None: ...

global___ArtifactRegistryRepositoryIamMember = ArtifactRegistryRepositoryIamMember

@typing_extensions.final
class ArtifactRegistryRepositoryIamPolicy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ETAG_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    POLICY_DATA_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REPOSITORY_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    etag: builtins.str
    id: builtins.str
    location: builtins.str
    policy_data: builtins.str
    project: builtins.str
    repository: builtins.str
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        etag: builtins.str = ...,
        id: builtins.str = ...,
        location: builtins.str = ...,
        policy_data: builtins.str = ...,
        project: builtins.str = ...,
        repository: builtins.str = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["etag", b"etag", "id", b"id", "location", b"location", "policy_data", b"policy_data", "project", b"project", "repository", b"repository", "resource_info", b"resource_info"]) -> None: ...

global___ArtifactRegistryRepositoryIamPolicy = ArtifactRegistryRepositoryIamPolicy
