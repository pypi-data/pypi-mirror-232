"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import gcp.gcp_sql_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class GoogleSql(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SQL_DATABASE_FIELD_NUMBER: builtins.int
    SQL_DATABASE_INSTANCE_FIELD_NUMBER: builtins.int
    SQL_SOURCE_REPRESENTATION_INSTANCE_FIELD_NUMBER: builtins.int
    SQL_SSL_CERT_FIELD_NUMBER: builtins.int
    SQL_USER_FIELD_NUMBER: builtins.int
    @property
    def sql_database(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[gcp.gcp_sql_pb2.SqlDatabase]: ...
    @property
    def sql_database_instance(self) -> gcp.gcp_sql_pb2.SqlDatabaseInstance: ...
    @property
    def sql_source_representation_instance(self) -> gcp.gcp_sql_pb2.SqlSourceRepresentationInstance: ...
    @property
    def sql_ssl_cert(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[gcp.gcp_sql_pb2.SqlSslCert]: ...
    @property
    def sql_user(self) -> gcp.gcp_sql_pb2.SqlUser: ...
    def __init__(
        self,
        *,
        sql_database: collections.abc.Iterable[gcp.gcp_sql_pb2.SqlDatabase] | None = ...,
        sql_database_instance: gcp.gcp_sql_pb2.SqlDatabaseInstance | None = ...,
        sql_source_representation_instance: gcp.gcp_sql_pb2.SqlSourceRepresentationInstance | None = ...,
        sql_ssl_cert: collections.abc.Iterable[gcp.gcp_sql_pb2.SqlSslCert] | None = ...,
        sql_user: gcp.gcp_sql_pb2.SqlUser | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["sql_database_instance", b"sql_database_instance", "sql_source_representation_instance", b"sql_source_representation_instance", "sql_user", b"sql_user"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["sql_database", b"sql_database", "sql_database_instance", b"sql_database_instance", "sql_source_representation_instance", b"sql_source_representation_instance", "sql_ssl_cert", b"sql_ssl_cert", "sql_user", b"sql_user"]) -> None: ...

global___GoogleSql = GoogleSql
