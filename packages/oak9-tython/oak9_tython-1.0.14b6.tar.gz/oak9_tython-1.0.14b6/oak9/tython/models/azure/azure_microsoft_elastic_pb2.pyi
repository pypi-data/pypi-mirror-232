"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import shared.shared_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Microsoft_Elastic(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MONITORS_FIELD_NUMBER: builtins.int
    @property
    def monitors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Monitors]: ...
    def __init__(
        self,
        *,
        monitors: collections.abc.Iterable[global___Monitors] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["monitors", b"monitors"]) -> None: ...

global___Microsoft_Elastic = Microsoft_Elastic

@typing_extensions.final
class MonitorsTagRules(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    LOG_RULES_FIELD_NUMBER: builtins.int
    PROVISIONING_STATE_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    name: builtins.str
    @property
    def log_rules(self) -> global___LogRules: ...
    provisioning_state: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        name: builtins.str = ...,
        log_rules: global___LogRules | None = ...,
        provisioning_state: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["log_rules", b"log_rules", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["log_rules", b"log_rules", "name", b"name", "provisioning_state", b"provisioning_state", "resource_info", b"resource_info"]) -> None: ...

global___MonitorsTagRules = MonitorsTagRules

@typing_extensions.final
class LogRules(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILTERING_TAGS_FIELD_NUMBER: builtins.int
    SEND_AAD_LOGS_FIELD_NUMBER: builtins.int
    SEND_ACTIVITY_LOGS_FIELD_NUMBER: builtins.int
    SEND_SUBSCRIPTION_LOGS_FIELD_NUMBER: builtins.int
    @property
    def filtering_tags(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FilteringTag]: ...
    send_aad_logs: builtins.bool
    send_activity_logs: builtins.bool
    send_subscription_logs: builtins.bool
    def __init__(
        self,
        *,
        filtering_tags: collections.abc.Iterable[global___FilteringTag] | None = ...,
        send_aad_logs: builtins.bool = ...,
        send_activity_logs: builtins.bool = ...,
        send_subscription_logs: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filtering_tags", b"filtering_tags", "send_aad_logs", b"send_aad_logs", "send_activity_logs", b"send_activity_logs", "send_subscription_logs", b"send_subscription_logs"]) -> None: ...

global___LogRules = LogRules

@typing_extensions.final
class FilteringTag(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACTION_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    action: builtins.str
    name: builtins.str
    value: builtins.str
    def __init__(
        self,
        *,
        action: builtins.str = ...,
        name: builtins.str = ...,
        value: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "name", b"name", "value", b"value"]) -> None: ...

global___FilteringTag = FilteringTag

@typing_extensions.final
class Monitors(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    ELASTIC_PROPERTIES_FIELD_NUMBER: builtins.int
    LIFTR_RESOURCE_CATEGORY_FIELD_NUMBER: builtins.int
    MONITORING_STATUS_FIELD_NUMBER: builtins.int
    PROVISIONING_STATE_FIELD_NUMBER: builtins.int
    USER_INFO_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    SKU_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    MONITORS_TAG_RULES_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    @property
    def identity(self) -> global___IdentityProperties: ...
    location: builtins.str
    name: builtins.str
    @property
    def elastic_properties(self) -> global___ElasticProperties: ...
    liftr_resource_category: builtins.str
    monitoring_status: builtins.str
    provisioning_state: builtins.str
    @property
    def user_info(self) -> global___UserInfo: ...
    version: builtins.str
    @property
    def sku(self) -> global___ResourceSku: ...
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    @property
    def monitors_tag_rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MonitorsTagRules]: ...
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        identity: global___IdentityProperties | None = ...,
        location: builtins.str = ...,
        name: builtins.str = ...,
        elastic_properties: global___ElasticProperties | None = ...,
        liftr_resource_category: builtins.str = ...,
        monitoring_status: builtins.str = ...,
        provisioning_state: builtins.str = ...,
        user_info: global___UserInfo | None = ...,
        version: builtins.str = ...,
        sku: global___ResourceSku | None = ...,
        tags: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        monitors_tag_rules: collections.abc.Iterable[global___MonitorsTagRules] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["elastic_properties", b"elastic_properties", "identity", b"identity", "resource_info", b"resource_info", "sku", b"sku", "user_info", b"user_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["elastic_properties", b"elastic_properties", "identity", b"identity", "liftr_resource_category", b"liftr_resource_category", "location", b"location", "monitoring_status", b"monitoring_status", "monitors_tag_rules", b"monitors_tag_rules", "name", b"name", "provisioning_state", b"provisioning_state", "resource_info", b"resource_info", "sku", b"sku", "tags", b"tags", "user_info", b"user_info", "version", b"version"]) -> None: ...

global___Monitors = Monitors

@typing_extensions.final
class ResourceSku(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name"]) -> None: ...

global___ResourceSku = ResourceSku

@typing_extensions.final
class UserInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COMPANY_INFO_FIELD_NUMBER: builtins.int
    COMPANY_NAME_FIELD_NUMBER: builtins.int
    EMAIL_ADDRESS_FIELD_NUMBER: builtins.int
    FIRST_NAME_FIELD_NUMBER: builtins.int
    LAST_NAME_FIELD_NUMBER: builtins.int
    @property
    def company_info(self) -> global___CompanyInfo: ...
    company_name: builtins.str
    email_address: builtins.str
    first_name: builtins.str
    last_name: builtins.str
    def __init__(
        self,
        *,
        company_info: global___CompanyInfo | None = ...,
        company_name: builtins.str = ...,
        email_address: builtins.str = ...,
        first_name: builtins.str = ...,
        last_name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["company_info", b"company_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["company_info", b"company_info", "company_name", b"company_name", "email_address", b"email_address", "first_name", b"first_name", "last_name", b"last_name"]) -> None: ...

global___UserInfo = UserInfo

@typing_extensions.final
class CompanyInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BUSINESS_FIELD_NUMBER: builtins.int
    COUNTRY_FIELD_NUMBER: builtins.int
    DOMAIN_FIELD_NUMBER: builtins.int
    EMPLOYEES_NUMBER_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    business: builtins.str
    country: builtins.str
    domain: builtins.str
    employees_number: builtins.str
    state: builtins.str
    def __init__(
        self,
        *,
        business: builtins.str = ...,
        country: builtins.str = ...,
        domain: builtins.str = ...,
        employees_number: builtins.str = ...,
        state: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["business", b"business", "country", b"country", "domain", b"domain", "employees_number", b"employees_number", "state", b"state"]) -> None: ...

global___CompanyInfo = CompanyInfo

@typing_extensions.final
class ElasticProperties(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ELASTIC_CLOUD_DEPLOYMENT_FIELD_NUMBER: builtins.int
    ELASTIC_CLOUD_USER_FIELD_NUMBER: builtins.int
    @property
    def elastic_cloud_deployment(self) -> global___ElasticCloudDeployment: ...
    @property
    def elastic_cloud_user(self) -> global___ElasticCloudUser: ...
    def __init__(
        self,
        *,
        elastic_cloud_deployment: global___ElasticCloudDeployment | None = ...,
        elastic_cloud_user: global___ElasticCloudUser | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["elastic_cloud_deployment", b"elastic_cloud_deployment", "elastic_cloud_user", b"elastic_cloud_user"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["elastic_cloud_deployment", b"elastic_cloud_deployment", "elastic_cloud_user", b"elastic_cloud_user"]) -> None: ...

global___ElasticProperties = ElasticProperties

@typing_extensions.final
class ElasticCloudUser(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name"]) -> None: ...

global___ElasticCloudUser = ElasticCloudUser

@typing_extensions.final
class ElasticCloudDeployment(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name"]) -> None: ...

global___ElasticCloudDeployment = ElasticCloudDeployment

@typing_extensions.final
class IdentityProperties(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    type: builtins.str
    def __init__(
        self,
        *,
        type: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["type", b"type"]) -> None: ...

global___IdentityProperties = IdentityProperties
