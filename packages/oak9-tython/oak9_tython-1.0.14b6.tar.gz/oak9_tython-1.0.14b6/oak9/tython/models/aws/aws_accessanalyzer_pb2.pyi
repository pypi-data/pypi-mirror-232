"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import shared.shared_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class AnalyzerFilter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    CONTAINS_FIELD_NUMBER: builtins.int
    EQ_FIELD_NUMBER: builtins.int
    EXISTS_FIELD_NUMBER: builtins.int
    PROPERTY_FIELD_NUMBER: builtins.int
    NEQ_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    @property
    def contains(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def eq(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    exists: builtins.bool
    property: builtins.str
    @property
    def neq(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        contains: collections.abc.Iterable[builtins.str] | None = ...,
        eq: collections.abc.Iterable[builtins.str] | None = ...,
        exists: builtins.bool = ...,
        property: builtins.str = ...,
        neq: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["contains", b"contains", "eq", b"eq", "exists", b"exists", "neq", b"neq", "property", b"property", "resource_info", b"resource_info"]) -> None: ...

global___AnalyzerFilter = AnalyzerFilter

@typing_extensions.final
class AnalyzerArchiveRule(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    RULE_NAME_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    @property
    def filter(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AnalyzerFilter]: ...
    rule_name: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        filter: collections.abc.Iterable[global___AnalyzerFilter] | None = ...,
        rule_name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter", b"filter", "resource_info", b"resource_info", "rule_name", b"rule_name"]) -> None: ...

global___AnalyzerArchiveRule = AnalyzerArchiveRule

@typing_extensions.final
class Analyzer(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    ANALYZER_NAME_FIELD_NUMBER: builtins.int
    ARCHIVE_RULES_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    analyzer_name: builtins.str
    @property
    def archive_rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AnalyzerArchiveRule]: ...
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    type: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        analyzer_name: builtins.str = ...,
        archive_rules: collections.abc.Iterable[global___AnalyzerArchiveRule] | None = ...,
        tags: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        type: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["analyzer_name", b"analyzer_name", "archive_rules", b"archive_rules", "resource_info", b"resource_info", "tags", b"tags", "type", b"type"]) -> None: ...

global___Analyzer = Analyzer

@typing_extensions.final
class AccessAnalyzer(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANALYZER_FIELD_NUMBER: builtins.int
    @property
    def analyzer(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Analyzer]: ...
    def __init__(
        self,
        *,
        analyzer: collections.abc.Iterable[global___Analyzer] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["analyzer", b"analyzer"]) -> None: ...

global___AccessAnalyzer = AccessAnalyzer
