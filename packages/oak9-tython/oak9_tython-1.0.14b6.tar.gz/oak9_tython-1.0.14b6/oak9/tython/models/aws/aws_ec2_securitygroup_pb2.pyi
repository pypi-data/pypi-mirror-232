"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import shared.shared_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class SecurityGroupEgress(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EGRESS_FIELD_NUMBER: builtins.int
    @property
    def egress(self) -> global___Egress: ...
    def __init__(
        self,
        *,
        egress: global___Egress | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["egress", b"egress"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["egress", b"egress"]) -> None: ...

global___SecurityGroupEgress = SecurityGroupEgress

@typing_extensions.final
class SecurityGroupIngress(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INGRESS_FIELD_NUMBER: builtins.int
    @property
    def ingress(self) -> global___Ingress: ...
    def __init__(
        self,
        *,
        ingress: global___Ingress | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["ingress", b"ingress"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ingress", b"ingress"]) -> None: ...

global___SecurityGroupIngress = SecurityGroupIngress

@typing_extensions.final
class SecurityGroup(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    GROUP_DESCRIPTION_FIELD_NUMBER: builtins.int
    GROUP_NAME_FIELD_NUMBER: builtins.int
    SECURITY_GROUP_EGRESS_FIELD_NUMBER: builtins.int
    SECURITY_GROUP_INGRESS_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    VPC_ID_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    group_description: builtins.str
    group_name: builtins.str
    @property
    def security_group_egress(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SecurityGroupEgress]: ...
    @property
    def security_group_ingress(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SecurityGroupIngress]: ...
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    vpc_id: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        group_description: builtins.str = ...,
        group_name: builtins.str = ...,
        security_group_egress: collections.abc.Iterable[global___SecurityGroupEgress] | None = ...,
        security_group_ingress: collections.abc.Iterable[global___SecurityGroupIngress] | None = ...,
        tags: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        vpc_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["group_description", b"group_description", "group_name", b"group_name", "resource_info", b"resource_info", "security_group_egress", b"security_group_egress", "security_group_ingress", b"security_group_ingress", "tags", b"tags", "vpc_id", b"vpc_id"]) -> None: ...

global___SecurityGroup = SecurityGroup

@typing_extensions.final
class Egress(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    CIDR_IP_FIELD_NUMBER: builtins.int
    CIDR_IPV6_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DESTINATION_PREFIX_LIST_ID_FIELD_NUMBER: builtins.int
    DESTINATION_SECURITY_GROUP_ID_FIELD_NUMBER: builtins.int
    FROM_PORT_FIELD_NUMBER: builtins.int
    IP_PROTOCOL_FIELD_NUMBER: builtins.int
    TO_PORT_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    cidr_ip: builtins.str
    cidr_ipv6: builtins.str
    description: builtins.str
    destination_prefix_list_id: builtins.str
    destination_security_group_id: builtins.str
    from_port: builtins.int
    ip_protocol: builtins.str
    to_port: builtins.int
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        cidr_ip: builtins.str = ...,
        cidr_ipv6: builtins.str = ...,
        description: builtins.str = ...,
        destination_prefix_list_id: builtins.str = ...,
        destination_security_group_id: builtins.str = ...,
        from_port: builtins.int = ...,
        ip_protocol: builtins.str = ...,
        to_port: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cidr_ip", b"cidr_ip", "cidr_ipv6", b"cidr_ipv6", "description", b"description", "destination_prefix_list_id", b"destination_prefix_list_id", "destination_security_group_id", b"destination_security_group_id", "from_port", b"from_port", "ip_protocol", b"ip_protocol", "resource_info", b"resource_info", "to_port", b"to_port"]) -> None: ...

global___Egress = Egress

@typing_extensions.final
class Ingress(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    CIDR_IP_FIELD_NUMBER: builtins.int
    CIDR_IPV6_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    SOURCE_PREFIX_LIST_ID_FIELD_NUMBER: builtins.int
    SOURCE_SECURITY_GROUP_ID_FIELD_NUMBER: builtins.int
    SOURCE_SECURITY_GROUP_NAME_FIELD_NUMBER: builtins.int
    SOURCE_SECURITY_GROUP_OWNER_ID_FIELD_NUMBER: builtins.int
    FROM_PORT_FIELD_NUMBER: builtins.int
    IP_PROTOCOL_FIELD_NUMBER: builtins.int
    TO_PORT_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    cidr_ip: builtins.str
    cidr_ipv6: builtins.str
    description: builtins.str
    source_prefix_list_id: builtins.str
    source_security_group_id: builtins.str
    source_security_group_name: builtins.str
    source_security_group_owner_id: builtins.str
    from_port: builtins.int
    ip_protocol: builtins.str
    to_port: builtins.int
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        cidr_ip: builtins.str = ...,
        cidr_ipv6: builtins.str = ...,
        description: builtins.str = ...,
        source_prefix_list_id: builtins.str = ...,
        source_security_group_id: builtins.str = ...,
        source_security_group_name: builtins.str = ...,
        source_security_group_owner_id: builtins.str = ...,
        from_port: builtins.int = ...,
        ip_protocol: builtins.str = ...,
        to_port: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cidr_ip", b"cidr_ip", "cidr_ipv6", b"cidr_ipv6", "description", b"description", "from_port", b"from_port", "ip_protocol", b"ip_protocol", "resource_info", b"resource_info", "source_prefix_list_id", b"source_prefix_list_id", "source_security_group_id", b"source_security_group_id", "source_security_group_name", b"source_security_group_name", "source_security_group_owner_id", b"source_security_group_owner_id", "to_port", b"to_port"]) -> None: ...

global___Ingress = Ingress

@typing_extensions.final
class EC2_SecurityGroup(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SECURITY_GROUP_FIELD_NUMBER: builtins.int
    @property
    def security_group(self) -> global___SecurityGroup: ...
    def __init__(
        self,
        *,
        security_group: global___SecurityGroup | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["security_group", b"security_group"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["security_group", b"security_group"]) -> None: ...

global___EC2_SecurityGroup = EC2_SecurityGroup
