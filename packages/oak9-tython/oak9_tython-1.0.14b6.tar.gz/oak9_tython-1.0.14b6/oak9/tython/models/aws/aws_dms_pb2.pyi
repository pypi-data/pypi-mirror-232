"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import shared.shared_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Certificate(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    CERTIFICATE_IDENTIFIER_FIELD_NUMBER: builtins.int
    CERTIFICATE_PEM_FIELD_NUMBER: builtins.int
    CERTIFICATE_WALLET_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    certificate_identifier: builtins.str
    certificate_pem: builtins.str
    certificate_wallet: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        certificate_identifier: builtins.str = ...,
        certificate_pem: builtins.str = ...,
        certificate_wallet: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["certificate_identifier", b"certificate_identifier", "certificate_pem", b"certificate_pem", "certificate_wallet", b"certificate_wallet", "resource_info", b"resource_info"]) -> None: ...

global___Certificate = Certificate

@typing_extensions.final
class DMS(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CERTIFICATE_FIELD_NUMBER: builtins.int
    ENDPOINT_FIELD_NUMBER: builtins.int
    EVENT_SUBSCRIPTION_FIELD_NUMBER: builtins.int
    REPLICATION_INSTANCE_FIELD_NUMBER: builtins.int
    REPLICATION_SUBNET_GROUP_FIELD_NUMBER: builtins.int
    REPLICATION_TASK_FIELD_NUMBER: builtins.int
    @property
    def certificate(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Certificate]: ...
    @property
    def endpoint(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Endpoint]: ...
    @property
    def event_subscription(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___EventSubscription]: ...
    @property
    def replication_instance(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ReplicationInstance]: ...
    @property
    def replication_subnet_group(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ReplicationSubnetGroup]: ...
    @property
    def replication_task(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ReplicationTask]: ...
    def __init__(
        self,
        *,
        certificate: collections.abc.Iterable[global___Certificate] | None = ...,
        endpoint: collections.abc.Iterable[global___Endpoint] | None = ...,
        event_subscription: collections.abc.Iterable[global___EventSubscription] | None = ...,
        replication_instance: collections.abc.Iterable[global___ReplicationInstance] | None = ...,
        replication_subnet_group: collections.abc.Iterable[global___ReplicationSubnetGroup] | None = ...,
        replication_task: collections.abc.Iterable[global___ReplicationTask] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["certificate", b"certificate", "endpoint", b"endpoint", "event_subscription", b"event_subscription", "replication_instance", b"replication_instance", "replication_subnet_group", b"replication_subnet_group", "replication_task", b"replication_task"]) -> None: ...

global___DMS = DMS

@typing_extensions.final
class EndpointKafkaSettings(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    BROKER_FIELD_NUMBER: builtins.int
    TOPIC_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    broker: builtins.str
    topic: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        broker: builtins.str = ...,
        topic: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["broker", b"broker", "resource_info", b"resource_info", "topic", b"topic"]) -> None: ...

global___EndpointKafkaSettings = EndpointKafkaSettings

@typing_extensions.final
class EndpointNeptuneSettings(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    MAX_RETRY_COUNT_FIELD_NUMBER: builtins.int
    MAX_FILE_SIZE_FIELD_NUMBER: builtins.int
    S3_BUCKET_FOLDER_FIELD_NUMBER: builtins.int
    ERROR_RETRY_DURATION_FIELD_NUMBER: builtins.int
    IAM_AUTH_ENABLED_FIELD_NUMBER: builtins.int
    S3_BUCKET_NAME_FIELD_NUMBER: builtins.int
    SERVICE_ACCESS_ROLE_ARN_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    max_retry_count: builtins.int
    max_file_size: builtins.int
    s3_bucket_folder: builtins.str
    error_retry_duration: builtins.int
    iam_auth_enabled: builtins.bool
    s3_bucket_name: builtins.str
    service_access_role_arn: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        max_retry_count: builtins.int = ...,
        max_file_size: builtins.int = ...,
        s3_bucket_folder: builtins.str = ...,
        error_retry_duration: builtins.int = ...,
        iam_auth_enabled: builtins.bool = ...,
        s3_bucket_name: builtins.str = ...,
        service_access_role_arn: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error_retry_duration", b"error_retry_duration", "iam_auth_enabled", b"iam_auth_enabled", "max_file_size", b"max_file_size", "max_retry_count", b"max_retry_count", "resource_info", b"resource_info", "s3_bucket_folder", b"s3_bucket_folder", "s3_bucket_name", b"s3_bucket_name", "service_access_role_arn", b"service_access_role_arn"]) -> None: ...

global___EndpointNeptuneSettings = EndpointNeptuneSettings

@typing_extensions.final
class EndpointElasticsearchSettings(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    ENDPOINT_URI_FIELD_NUMBER: builtins.int
    FULL_LOAD_ERROR_PERCENTAGE_FIELD_NUMBER: builtins.int
    ERROR_RETRY_DURATION_FIELD_NUMBER: builtins.int
    SERVICE_ACCESS_ROLE_ARN_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    endpoint_uri: builtins.str
    full_load_error_percentage: builtins.int
    error_retry_duration: builtins.int
    service_access_role_arn: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        endpoint_uri: builtins.str = ...,
        full_load_error_percentage: builtins.int = ...,
        error_retry_duration: builtins.int = ...,
        service_access_role_arn: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["endpoint_uri", b"endpoint_uri", "error_retry_duration", b"error_retry_duration", "full_load_error_percentage", b"full_load_error_percentage", "resource_info", b"resource_info", "service_access_role_arn", b"service_access_role_arn"]) -> None: ...

global___EndpointElasticsearchSettings = EndpointElasticsearchSettings

@typing_extensions.final
class EndpointS3Settings(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    EXTERNAL_TABLE_DEFINITION_FIELD_NUMBER: builtins.int
    BUCKET_NAME_FIELD_NUMBER: builtins.int
    BUCKET_FOLDER_FIELD_NUMBER: builtins.int
    CSV_ROW_DELIMITER_FIELD_NUMBER: builtins.int
    CSV_DELIMITER_FIELD_NUMBER: builtins.int
    SERVICE_ACCESS_ROLE_ARN_FIELD_NUMBER: builtins.int
    COMPRESSION_TYPE_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    external_table_definition: builtins.str
    bucket_name: builtins.str
    bucket_folder: builtins.str
    csv_row_delimiter: builtins.str
    csv_delimiter: builtins.str
    service_access_role_arn: builtins.str
    compression_type: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        external_table_definition: builtins.str = ...,
        bucket_name: builtins.str = ...,
        bucket_folder: builtins.str = ...,
        csv_row_delimiter: builtins.str = ...,
        csv_delimiter: builtins.str = ...,
        service_access_role_arn: builtins.str = ...,
        compression_type: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bucket_folder", b"bucket_folder", "bucket_name", b"bucket_name", "compression_type", b"compression_type", "csv_delimiter", b"csv_delimiter", "csv_row_delimiter", b"csv_row_delimiter", "external_table_definition", b"external_table_definition", "resource_info", b"resource_info", "service_access_role_arn", b"service_access_role_arn"]) -> None: ...

global___EndpointS3Settings = EndpointS3Settings

@typing_extensions.final
class EndpointDynamoDbSettings(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    SERVICE_ACCESS_ROLE_ARN_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    service_access_role_arn: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        service_access_role_arn: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info", "service_access_role_arn", b"service_access_role_arn"]) -> None: ...

global___EndpointDynamoDbSettings = EndpointDynamoDbSettings

@typing_extensions.final
class EndpointKinesisSettings(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    MESSAGE_FORMAT_FIELD_NUMBER: builtins.int
    STREAM_ARN_FIELD_NUMBER: builtins.int
    SERVICE_ACCESS_ROLE_ARN_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    message_format: builtins.str
    stream_arn: builtins.str
    service_access_role_arn: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        message_format: builtins.str = ...,
        stream_arn: builtins.str = ...,
        service_access_role_arn: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["message_format", b"message_format", "resource_info", b"resource_info", "service_access_role_arn", b"service_access_role_arn", "stream_arn", b"stream_arn"]) -> None: ...

global___EndpointKinesisSettings = EndpointKinesisSettings

@typing_extensions.final
class EndpointMongoDbSettings(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    AUTH_SOURCE_FIELD_NUMBER: builtins.int
    AUTH_MECHANISM_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    DOCS_TO_INVESTIGATE_FIELD_NUMBER: builtins.int
    SERVER_NAME_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    EXTRACT_DOC_ID_FIELD_NUMBER: builtins.int
    DATABASE_NAME_FIELD_NUMBER: builtins.int
    AUTH_TYPE_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    NESTING_LEVEL_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    auth_source: builtins.str
    auth_mechanism: builtins.str
    username: builtins.str
    docs_to_investigate: builtins.str
    server_name: builtins.str
    port: builtins.int
    extract_doc_id: builtins.str
    database_name: builtins.str
    auth_type: builtins.str
    password: builtins.str
    nesting_level: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        auth_source: builtins.str = ...,
        auth_mechanism: builtins.str = ...,
        username: builtins.str = ...,
        docs_to_investigate: builtins.str = ...,
        server_name: builtins.str = ...,
        port: builtins.int = ...,
        extract_doc_id: builtins.str = ...,
        database_name: builtins.str = ...,
        auth_type: builtins.str = ...,
        password: builtins.str = ...,
        nesting_level: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auth_mechanism", b"auth_mechanism", "auth_source", b"auth_source", "auth_type", b"auth_type", "database_name", b"database_name", "docs_to_investigate", b"docs_to_investigate", "extract_doc_id", b"extract_doc_id", "nesting_level", b"nesting_level", "password", b"password", "port", b"port", "resource_info", b"resource_info", "server_name", b"server_name", "username", b"username"]) -> None: ...

global___EndpointMongoDbSettings = EndpointMongoDbSettings

@typing_extensions.final
class Endpoint(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    KMS_KEY_ID_FIELD_NUMBER: builtins.int
    KAFKA_SETTINGS_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    DATABASE_NAME_FIELD_NUMBER: builtins.int
    NEPTUNE_SETTINGS_FIELD_NUMBER: builtins.int
    ELASTICSEARCH_SETTINGS_FIELD_NUMBER: builtins.int
    S3_SETTINGS_FIELD_NUMBER: builtins.int
    ENGINE_NAME_FIELD_NUMBER: builtins.int
    DYNAMO_DB_SETTINGS_FIELD_NUMBER: builtins.int
    KINESIS_SETTINGS_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    SSL_MODE_FIELD_NUMBER: builtins.int
    SERVER_NAME_FIELD_NUMBER: builtins.int
    EXTRA_CONNECTION_ATTRIBUTES_FIELD_NUMBER: builtins.int
    ENDPOINT_TYPE_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    ENDPOINT_IDENTIFIER_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    CERTIFICATE_ARN_FIELD_NUMBER: builtins.int
    MONGO_DB_SETTINGS_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    kms_key_id: builtins.str
    @property
    def kafka_settings(self) -> global___EndpointKafkaSettings: ...
    port: builtins.int
    database_name: builtins.str
    @property
    def neptune_settings(self) -> global___EndpointNeptuneSettings: ...
    @property
    def elasticsearch_settings(self) -> global___EndpointElasticsearchSettings: ...
    @property
    def s3_settings(self) -> global___EndpointS3Settings: ...
    engine_name: builtins.str
    @property
    def dynamo_db_settings(self) -> global___EndpointDynamoDbSettings: ...
    @property
    def kinesis_settings(self) -> global___EndpointKinesisSettings: ...
    username: builtins.str
    ssl_mode: builtins.str
    server_name: builtins.str
    extra_connection_attributes: builtins.str
    endpoint_type: builtins.str
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    endpoint_identifier: builtins.str
    password: builtins.str
    certificate_arn: builtins.str
    @property
    def mongo_db_settings(self) -> global___EndpointMongoDbSettings: ...
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        kms_key_id: builtins.str = ...,
        kafka_settings: global___EndpointKafkaSettings | None = ...,
        port: builtins.int = ...,
        database_name: builtins.str = ...,
        neptune_settings: global___EndpointNeptuneSettings | None = ...,
        elasticsearch_settings: global___EndpointElasticsearchSettings | None = ...,
        s3_settings: global___EndpointS3Settings | None = ...,
        engine_name: builtins.str = ...,
        dynamo_db_settings: global___EndpointDynamoDbSettings | None = ...,
        kinesis_settings: global___EndpointKinesisSettings | None = ...,
        username: builtins.str = ...,
        ssl_mode: builtins.str = ...,
        server_name: builtins.str = ...,
        extra_connection_attributes: builtins.str = ...,
        endpoint_type: builtins.str = ...,
        tags: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        endpoint_identifier: builtins.str = ...,
        password: builtins.str = ...,
        certificate_arn: builtins.str = ...,
        mongo_db_settings: global___EndpointMongoDbSettings | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dynamo_db_settings", b"dynamo_db_settings", "elasticsearch_settings", b"elasticsearch_settings", "kafka_settings", b"kafka_settings", "kinesis_settings", b"kinesis_settings", "mongo_db_settings", b"mongo_db_settings", "neptune_settings", b"neptune_settings", "resource_info", b"resource_info", "s3_settings", b"s3_settings"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["certificate_arn", b"certificate_arn", "database_name", b"database_name", "dynamo_db_settings", b"dynamo_db_settings", "elasticsearch_settings", b"elasticsearch_settings", "endpoint_identifier", b"endpoint_identifier", "endpoint_type", b"endpoint_type", "engine_name", b"engine_name", "extra_connection_attributes", b"extra_connection_attributes", "kafka_settings", b"kafka_settings", "kinesis_settings", b"kinesis_settings", "kms_key_id", b"kms_key_id", "mongo_db_settings", b"mongo_db_settings", "neptune_settings", b"neptune_settings", "password", b"password", "port", b"port", "resource_info", b"resource_info", "s3_settings", b"s3_settings", "server_name", b"server_name", "ssl_mode", b"ssl_mode", "tags", b"tags", "username", b"username"]) -> None: ...

global___Endpoint = Endpoint

@typing_extensions.final
class EventSubscription(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    SOURCE_TYPE_FIELD_NUMBER: builtins.int
    EVENT_CATEGORIES_FIELD_NUMBER: builtins.int
    ENABLED_FIELD_NUMBER: builtins.int
    SUBSCRIPTION_NAME_FIELD_NUMBER: builtins.int
    SNS_TOPIC_ARN_FIELD_NUMBER: builtins.int
    SOURCE_IDS_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    source_type: builtins.str
    @property
    def event_categories(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    enabled: builtins.bool
    subscription_name: builtins.str
    sns_topic_arn: builtins.str
    @property
    def source_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        source_type: builtins.str = ...,
        event_categories: collections.abc.Iterable[builtins.str] | None = ...,
        enabled: builtins.bool = ...,
        subscription_name: builtins.str = ...,
        sns_topic_arn: builtins.str = ...,
        source_ids: collections.abc.Iterable[builtins.str] | None = ...,
        tags: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled", b"enabled", "event_categories", b"event_categories", "resource_info", b"resource_info", "sns_topic_arn", b"sns_topic_arn", "source_ids", b"source_ids", "source_type", b"source_type", "subscription_name", b"subscription_name", "tags", b"tags"]) -> None: ...

global___EventSubscription = EventSubscription

@typing_extensions.final
class ReplicationInstance(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    REPLICATION_INSTANCE_IDENTIFIER_FIELD_NUMBER: builtins.int
    ENGINE_VERSION_FIELD_NUMBER: builtins.int
    KMS_KEY_ID_FIELD_NUMBER: builtins.int
    AVAILABILITY_ZONE_FIELD_NUMBER: builtins.int
    PREFERRED_MAINTENANCE_WINDOW_FIELD_NUMBER: builtins.int
    AUTO_MINOR_VERSION_UPGRADE_FIELD_NUMBER: builtins.int
    REPLICATION_SUBNET_GROUP_IDENTIFIER_FIELD_NUMBER: builtins.int
    ALLOCATED_STORAGE_FIELD_NUMBER: builtins.int
    VPC_SECURITY_GROUP_IDS_FIELD_NUMBER: builtins.int
    ALLOW_MAJOR_VERSION_UPGRADE_FIELD_NUMBER: builtins.int
    REPLICATION_INSTANCE_CLASS_FIELD_NUMBER: builtins.int
    PUBLICLY_ACCESSIBLE_FIELD_NUMBER: builtins.int
    MULTI_AZ_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    replication_instance_identifier: builtins.str
    engine_version: builtins.str
    kms_key_id: builtins.str
    availability_zone: builtins.str
    preferred_maintenance_window: builtins.str
    auto_minor_version_upgrade: builtins.bool
    replication_subnet_group_identifier: builtins.str
    allocated_storage: builtins.int
    @property
    def vpc_security_group_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    allow_major_version_upgrade: builtins.bool
    replication_instance_class: builtins.str
    publicly_accessible: builtins.bool
    multi_az: builtins.bool
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        replication_instance_identifier: builtins.str = ...,
        engine_version: builtins.str = ...,
        kms_key_id: builtins.str = ...,
        availability_zone: builtins.str = ...,
        preferred_maintenance_window: builtins.str = ...,
        auto_minor_version_upgrade: builtins.bool = ...,
        replication_subnet_group_identifier: builtins.str = ...,
        allocated_storage: builtins.int = ...,
        vpc_security_group_ids: collections.abc.Iterable[builtins.str] | None = ...,
        allow_major_version_upgrade: builtins.bool = ...,
        replication_instance_class: builtins.str = ...,
        publicly_accessible: builtins.bool = ...,
        multi_az: builtins.bool = ...,
        tags: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["allocated_storage", b"allocated_storage", "allow_major_version_upgrade", b"allow_major_version_upgrade", "auto_minor_version_upgrade", b"auto_minor_version_upgrade", "availability_zone", b"availability_zone", "engine_version", b"engine_version", "kms_key_id", b"kms_key_id", "multi_az", b"multi_az", "preferred_maintenance_window", b"preferred_maintenance_window", "publicly_accessible", b"publicly_accessible", "replication_instance_class", b"replication_instance_class", "replication_instance_identifier", b"replication_instance_identifier", "replication_subnet_group_identifier", b"replication_subnet_group_identifier", "resource_info", b"resource_info", "tags", b"tags", "vpc_security_group_ids", b"vpc_security_group_ids"]) -> None: ...

global___ReplicationInstance = ReplicationInstance

@typing_extensions.final
class ReplicationSubnetGroup(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    REPLICATION_SUBNET_GROUP_DESCRIPTION_FIELD_NUMBER: builtins.int
    REPLICATION_SUBNET_GROUP_IDENTIFIER_FIELD_NUMBER: builtins.int
    SUBNET_IDS_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    replication_subnet_group_description: builtins.str
    replication_subnet_group_identifier: builtins.str
    @property
    def subnet_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        replication_subnet_group_description: builtins.str = ...,
        replication_subnet_group_identifier: builtins.str = ...,
        subnet_ids: collections.abc.Iterable[builtins.str] | None = ...,
        tags: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["replication_subnet_group_description", b"replication_subnet_group_description", "replication_subnet_group_identifier", b"replication_subnet_group_identifier", "resource_info", b"resource_info", "subnet_ids", b"subnet_ids", "tags", b"tags"]) -> None: ...

global___ReplicationSubnetGroup = ReplicationSubnetGroup

@typing_extensions.final
class ReplicationTask(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    REPLICATION_TASK_SETTINGS_FIELD_NUMBER: builtins.int
    TABLE_MAPPINGS_FIELD_NUMBER: builtins.int
    CDC_START_POSITION_FIELD_NUMBER: builtins.int
    REPLICATION_TASK_IDENTIFIER_FIELD_NUMBER: builtins.int
    CDC_STOP_POSITION_FIELD_NUMBER: builtins.int
    SOURCE_ENDPOINT_ARN_FIELD_NUMBER: builtins.int
    MIGRATION_TYPE_FIELD_NUMBER: builtins.int
    TARGET_ENDPOINT_ARN_FIELD_NUMBER: builtins.int
    REPLICATION_INSTANCE_ARN_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    TASK_DATA_FIELD_NUMBER: builtins.int
    CDC_START_TIME_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    replication_task_settings: builtins.str
    table_mappings: builtins.str
    cdc_start_position: builtins.str
    replication_task_identifier: builtins.str
    cdc_stop_position: builtins.str
    source_endpoint_arn: builtins.str
    migration_type: builtins.str
    target_endpoint_arn: builtins.str
    replication_instance_arn: builtins.str
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    task_data: builtins.str
    cdc_start_time: builtins.float
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        replication_task_settings: builtins.str = ...,
        table_mappings: builtins.str = ...,
        cdc_start_position: builtins.str = ...,
        replication_task_identifier: builtins.str = ...,
        cdc_stop_position: builtins.str = ...,
        source_endpoint_arn: builtins.str = ...,
        migration_type: builtins.str = ...,
        target_endpoint_arn: builtins.str = ...,
        replication_instance_arn: builtins.str = ...,
        tags: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        task_data: builtins.str = ...,
        cdc_start_time: builtins.float = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cdc_start_position", b"cdc_start_position", "cdc_start_time", b"cdc_start_time", "cdc_stop_position", b"cdc_stop_position", "migration_type", b"migration_type", "replication_instance_arn", b"replication_instance_arn", "replication_task_identifier", b"replication_task_identifier", "replication_task_settings", b"replication_task_settings", "resource_info", b"resource_info", "source_endpoint_arn", b"source_endpoint_arn", "table_mappings", b"table_mappings", "tags", b"tags", "target_endpoint_arn", b"target_endpoint_arn", "task_data", b"task_data"]) -> None: ...

global___ReplicationTask = ReplicationTask
