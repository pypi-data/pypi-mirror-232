"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import shared.shared_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class DBClusterDBClusterRole(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    ROLE_ARN_FIELD_NUMBER: builtins.int
    FEATURE_NAME_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    role_arn: builtins.str
    feature_name: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        role_arn: builtins.str = ...,
        feature_name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["feature_name", b"feature_name", "resource_info", b"resource_info", "role_arn", b"role_arn"]) -> None: ...

global___DBClusterDBClusterRole = DBClusterDBClusterRole

@typing_extensions.final
class DBCluster(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    STORAGE_ENCRYPTED_FIELD_NUMBER: builtins.int
    RESTORE_TO_TIME_FIELD_NUMBER: builtins.int
    ENGINE_VERSION_FIELD_NUMBER: builtins.int
    KMS_KEY_ID_FIELD_NUMBER: builtins.int
    ASSOCIATED_ROLES_FIELD_NUMBER: builtins.int
    AVAILABILITY_ZONES_FIELD_NUMBER: builtins.int
    SNAPSHOT_IDENTIFIER_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    DB_CLUSTER_IDENTIFIER_FIELD_NUMBER: builtins.int
    PREFERRED_MAINTENANCE_WINDOW_FIELD_NUMBER: builtins.int
    IAM_AUTH_ENABLED_FIELD_NUMBER: builtins.int
    DB_SUBNET_GROUP_NAME_FIELD_NUMBER: builtins.int
    DELETION_PROTECTION_FIELD_NUMBER: builtins.int
    PREFERRED_BACKUP_WINDOW_FIELD_NUMBER: builtins.int
    USE_LATEST_RESTORABLE_TIME_FIELD_NUMBER: builtins.int
    VPC_SECURITY_GROUP_IDS_FIELD_NUMBER: builtins.int
    SOURCE_DB_CLUSTER_IDENTIFIER_FIELD_NUMBER: builtins.int
    DB_CLUSTER_PARAMETER_GROUP_NAME_FIELD_NUMBER: builtins.int
    BACKUP_RETENTION_PERIOD_FIELD_NUMBER: builtins.int
    RESTORE_TYPE_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    ENABLE_CLOUDWATCH_LOGS_EXPORTS_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    storage_encrypted: builtins.bool
    restore_to_time: builtins.str
    engine_version: builtins.str
    kms_key_id: builtins.str
    @property
    def associated_roles(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DBClusterDBClusterRole]: ...
    @property
    def availability_zones(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    snapshot_identifier: builtins.str
    port: builtins.int
    db_cluster_identifier: builtins.str
    preferred_maintenance_window: builtins.str
    iam_auth_enabled: builtins.bool
    db_subnet_group_name: builtins.str
    deletion_protection: builtins.bool
    preferred_backup_window: builtins.str
    use_latest_restorable_time: builtins.bool
    @property
    def vpc_security_group_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    source_db_cluster_identifier: builtins.str
    db_cluster_parameter_group_name: builtins.str
    backup_retention_period: builtins.int
    restore_type: builtins.str
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    @property
    def enable_cloudwatch_logs_exports(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        storage_encrypted: builtins.bool = ...,
        restore_to_time: builtins.str = ...,
        engine_version: builtins.str = ...,
        kms_key_id: builtins.str = ...,
        associated_roles: collections.abc.Iterable[global___DBClusterDBClusterRole] | None = ...,
        availability_zones: collections.abc.Iterable[builtins.str] | None = ...,
        snapshot_identifier: builtins.str = ...,
        port: builtins.int = ...,
        db_cluster_identifier: builtins.str = ...,
        preferred_maintenance_window: builtins.str = ...,
        iam_auth_enabled: builtins.bool = ...,
        db_subnet_group_name: builtins.str = ...,
        deletion_protection: builtins.bool = ...,
        preferred_backup_window: builtins.str = ...,
        use_latest_restorable_time: builtins.bool = ...,
        vpc_security_group_ids: collections.abc.Iterable[builtins.str] | None = ...,
        source_db_cluster_identifier: builtins.str = ...,
        db_cluster_parameter_group_name: builtins.str = ...,
        backup_retention_period: builtins.int = ...,
        restore_type: builtins.str = ...,
        tags: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        enable_cloudwatch_logs_exports: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["associated_roles", b"associated_roles", "availability_zones", b"availability_zones", "backup_retention_period", b"backup_retention_period", "db_cluster_identifier", b"db_cluster_identifier", "db_cluster_parameter_group_name", b"db_cluster_parameter_group_name", "db_subnet_group_name", b"db_subnet_group_name", "deletion_protection", b"deletion_protection", "enable_cloudwatch_logs_exports", b"enable_cloudwatch_logs_exports", "engine_version", b"engine_version", "iam_auth_enabled", b"iam_auth_enabled", "kms_key_id", b"kms_key_id", "port", b"port", "preferred_backup_window", b"preferred_backup_window", "preferred_maintenance_window", b"preferred_maintenance_window", "resource_info", b"resource_info", "restore_to_time", b"restore_to_time", "restore_type", b"restore_type", "snapshot_identifier", b"snapshot_identifier", "source_db_cluster_identifier", b"source_db_cluster_identifier", "storage_encrypted", b"storage_encrypted", "tags", b"tags", "use_latest_restorable_time", b"use_latest_restorable_time", "vpc_security_group_ids", b"vpc_security_group_ids"]) -> None: ...

global___DBCluster = DBCluster

@typing_extensions.final
class Neptune(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DB_CLUSTER_FIELD_NUMBER: builtins.int
    DB_CLUSTER_PARAMETER_GROUP_FIELD_NUMBER: builtins.int
    DB_INSTANCE_FIELD_NUMBER: builtins.int
    DB_PARAMETER_GROUP_FIELD_NUMBER: builtins.int
    DB_SUBNET_GROUP_FIELD_NUMBER: builtins.int
    @property
    def db_cluster(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DBCluster]: ...
    @property
    def db_cluster_parameter_group(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DBClusterParameterGroup]: ...
    @property
    def db_instance(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DBInstance]: ...
    @property
    def db_parameter_group(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DBParameterGroup]: ...
    @property
    def db_subnet_group(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DBSubnetGroup]: ...
    def __init__(
        self,
        *,
        db_cluster: collections.abc.Iterable[global___DBCluster] | None = ...,
        db_cluster_parameter_group: collections.abc.Iterable[global___DBClusterParameterGroup] | None = ...,
        db_instance: collections.abc.Iterable[global___DBInstance] | None = ...,
        db_parameter_group: collections.abc.Iterable[global___DBParameterGroup] | None = ...,
        db_subnet_group: collections.abc.Iterable[global___DBSubnetGroup] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["db_cluster", b"db_cluster", "db_cluster_parameter_group", b"db_cluster_parameter_group", "db_instance", b"db_instance", "db_parameter_group", b"db_parameter_group", "db_subnet_group", b"db_subnet_group"]) -> None: ...

global___Neptune = Neptune

@typing_extensions.final
class DBClusterParameterGroup(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ParametersEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing_extensions.final
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    PARAMETERS_FIELD_NUMBER: builtins.int
    FAMILY_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    description: builtins.str
    @property
    def parameters(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    family: builtins.str
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    name: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        description: builtins.str = ...,
        parameters: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        family: builtins.str = ...,
        tags: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["description", b"description", "family", b"family", "name", b"name", "parameters", b"parameters", "resource_info", b"resource_info", "tags", b"tags"]) -> None: ...

global___DBClusterParameterGroup = DBClusterParameterGroup

@typing_extensions.final
class DBInstance(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    DB_PARAMETER_GROUP_NAME_FIELD_NUMBER: builtins.int
    DB_INSTANCE_CLASS_FIELD_NUMBER: builtins.int
    ALLOW_MAJOR_VERSION_UPGRADE_FIELD_NUMBER: builtins.int
    DB_CLUSTER_IDENTIFIER_FIELD_NUMBER: builtins.int
    AVAILABILITY_ZONE_FIELD_NUMBER: builtins.int
    PREFERRED_MAINTENANCE_WINDOW_FIELD_NUMBER: builtins.int
    AUTO_MINOR_VERSION_UPGRADE_FIELD_NUMBER: builtins.int
    DB_SUBNET_GROUP_NAME_FIELD_NUMBER: builtins.int
    DB_INSTANCE_IDENTIFIER_FIELD_NUMBER: builtins.int
    DB_SNAPSHOT_IDENTIFIER_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    db_parameter_group_name: builtins.str
    db_instance_class: builtins.str
    allow_major_version_upgrade: builtins.bool
    db_cluster_identifier: builtins.str
    availability_zone: builtins.str
    preferred_maintenance_window: builtins.str
    auto_minor_version_upgrade: builtins.bool
    db_subnet_group_name: builtins.str
    db_instance_identifier: builtins.str
    db_snapshot_identifier: builtins.str
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        db_parameter_group_name: builtins.str = ...,
        db_instance_class: builtins.str = ...,
        allow_major_version_upgrade: builtins.bool = ...,
        db_cluster_identifier: builtins.str = ...,
        availability_zone: builtins.str = ...,
        preferred_maintenance_window: builtins.str = ...,
        auto_minor_version_upgrade: builtins.bool = ...,
        db_subnet_group_name: builtins.str = ...,
        db_instance_identifier: builtins.str = ...,
        db_snapshot_identifier: builtins.str = ...,
        tags: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_major_version_upgrade", b"allow_major_version_upgrade", "auto_minor_version_upgrade", b"auto_minor_version_upgrade", "availability_zone", b"availability_zone", "db_cluster_identifier", b"db_cluster_identifier", "db_instance_class", b"db_instance_class", "db_instance_identifier", b"db_instance_identifier", "db_parameter_group_name", b"db_parameter_group_name", "db_snapshot_identifier", b"db_snapshot_identifier", "db_subnet_group_name", b"db_subnet_group_name", "preferred_maintenance_window", b"preferred_maintenance_window", "resource_info", b"resource_info", "tags", b"tags"]) -> None: ...

global___DBInstance = DBInstance

@typing_extensions.final
class DBParameterGroup(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ParametersEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing_extensions.final
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    PARAMETERS_FIELD_NUMBER: builtins.int
    FAMILY_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    description: builtins.str
    @property
    def parameters(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    family: builtins.str
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    name: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        description: builtins.str = ...,
        parameters: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        family: builtins.str = ...,
        tags: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["description", b"description", "family", b"family", "name", b"name", "parameters", b"parameters", "resource_info", b"resource_info", "tags", b"tags"]) -> None: ...

global___DBParameterGroup = DBParameterGroup

@typing_extensions.final
class DBSubnetGroup(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    DB_SUBNET_GROUP_NAME_FIELD_NUMBER: builtins.int
    DB_SUBNET_GROUP_DESCRIPTION_FIELD_NUMBER: builtins.int
    SUBNET_IDS_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    db_subnet_group_name: builtins.str
    db_subnet_group_description: builtins.str
    @property
    def subnet_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        db_subnet_group_name: builtins.str = ...,
        db_subnet_group_description: builtins.str = ...,
        subnet_ids: collections.abc.Iterable[builtins.str] | None = ...,
        tags: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["db_subnet_group_description", b"db_subnet_group_description", "db_subnet_group_name", b"db_subnet_group_name", "resource_info", b"resource_info", "subnet_ids", b"subnet_ids", "tags", b"tags"]) -> None: ...

global___DBSubnetGroup = DBSubnetGroup
