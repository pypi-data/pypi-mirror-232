"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import shared.shared_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class ByteMatchSetFieldToMatch(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    data: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        data: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "resource_info", b"resource_info"]) -> None: ...

global___ByteMatchSetFieldToMatch = ByteMatchSetFieldToMatch

@typing_extensions.final
class ByteMatchSetByteMatchTuple(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    TARGET_STRING_FIELD_NUMBER: builtins.int
    TARGET_STRING_BASE64_FIELD_NUMBER: builtins.int
    POSITIONAL_CONSTRAINT_FIELD_NUMBER: builtins.int
    TEXT_TRANSFORMATION_FIELD_NUMBER: builtins.int
    FIELD_TO_MATCH_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    target_string: builtins.str
    target_string_base64: builtins.str
    positional_constraint: builtins.str
    text_transformation: builtins.str
    @property
    def field_to_match(self) -> global___ByteMatchSetFieldToMatch: ...
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        target_string: builtins.str = ...,
        target_string_base64: builtins.str = ...,
        positional_constraint: builtins.str = ...,
        text_transformation: builtins.str = ...,
        field_to_match: global___ByteMatchSetFieldToMatch | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["field_to_match", b"field_to_match", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["field_to_match", b"field_to_match", "positional_constraint", b"positional_constraint", "resource_info", b"resource_info", "target_string", b"target_string", "target_string_base64", b"target_string_base64", "text_transformation", b"text_transformation"]) -> None: ...

global___ByteMatchSetByteMatchTuple = ByteMatchSetByteMatchTuple

@typing_extensions.final
class ByteMatchSet(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    BYTE_MATCH_TUPLES_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    @property
    def byte_match_tuples(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ByteMatchSetByteMatchTuple]: ...
    name: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        byte_match_tuples: collections.abc.Iterable[global___ByteMatchSetByteMatchTuple] | None = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["byte_match_tuples", b"byte_match_tuples", "name", b"name", "resource_info", b"resource_info"]) -> None: ...

global___ByteMatchSet = ByteMatchSet

@typing_extensions.final
class WAFRegional(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BYTE_MATCH_SET_FIELD_NUMBER: builtins.int
    GEO_MATCH_SET_FIELD_NUMBER: builtins.int
    IP_SET_FIELD_NUMBER: builtins.int
    RATE_BASED_RULE_FIELD_NUMBER: builtins.int
    REGEX_PATTERN_SET_FIELD_NUMBER: builtins.int
    RULE_FIELD_NUMBER: builtins.int
    SIZE_CONSTRAINT_SET_FIELD_NUMBER: builtins.int
    SQL_INJECTION_MATCH_SET_FIELD_NUMBER: builtins.int
    WEB_A_C_L_FIELD_NUMBER: builtins.int
    WEB_A_C_L_ASSOCIATION_FIELD_NUMBER: builtins.int
    XSS_MATCH_SET_FIELD_NUMBER: builtins.int
    @property
    def byte_match_set(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ByteMatchSet]: ...
    @property
    def geo_match_set(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GeoMatchSet]: ...
    @property
    def ip_set(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IPSet]: ...
    @property
    def rate_based_rule(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RateBasedRule]: ...
    @property
    def regex_pattern_set(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RegexPatternSet]: ...
    @property
    def rule(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Rule]: ...
    @property
    def size_constraint_set(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SizeConstraintSet]: ...
    @property
    def sql_injection_match_set(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SqlInjectionMatchSet]: ...
    @property
    def web_a_c_l(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WebACL]: ...
    @property
    def web_a_c_l_association(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WebACLAssociation]: ...
    @property
    def xss_match_set(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___XssMatchSet]: ...
    def __init__(
        self,
        *,
        byte_match_set: collections.abc.Iterable[global___ByteMatchSet] | None = ...,
        geo_match_set: collections.abc.Iterable[global___GeoMatchSet] | None = ...,
        ip_set: collections.abc.Iterable[global___IPSet] | None = ...,
        rate_based_rule: collections.abc.Iterable[global___RateBasedRule] | None = ...,
        regex_pattern_set: collections.abc.Iterable[global___RegexPatternSet] | None = ...,
        rule: collections.abc.Iterable[global___Rule] | None = ...,
        size_constraint_set: collections.abc.Iterable[global___SizeConstraintSet] | None = ...,
        sql_injection_match_set: collections.abc.Iterable[global___SqlInjectionMatchSet] | None = ...,
        web_a_c_l: collections.abc.Iterable[global___WebACL] | None = ...,
        web_a_c_l_association: collections.abc.Iterable[global___WebACLAssociation] | None = ...,
        xss_match_set: collections.abc.Iterable[global___XssMatchSet] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["byte_match_set", b"byte_match_set", "geo_match_set", b"geo_match_set", "ip_set", b"ip_set", "rate_based_rule", b"rate_based_rule", "regex_pattern_set", b"regex_pattern_set", "rule", b"rule", "size_constraint_set", b"size_constraint_set", "sql_injection_match_set", b"sql_injection_match_set", "web_a_c_l", b"web_a_c_l", "web_a_c_l_association", b"web_a_c_l_association", "xss_match_set", b"xss_match_set"]) -> None: ...

global___WAFRegional = WAFRegional

@typing_extensions.final
class GeoMatchSetGeoMatchConstraint(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    value: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        value: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info", "value", b"value"]) -> None: ...

global___GeoMatchSetGeoMatchConstraint = GeoMatchSetGeoMatchConstraint

@typing_extensions.final
class GeoMatchSet(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    GEO_MATCH_CONSTRAINTS_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    @property
    def geo_match_constraints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GeoMatchSetGeoMatchConstraint]: ...
    name: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        geo_match_constraints: collections.abc.Iterable[global___GeoMatchSetGeoMatchConstraint] | None = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["geo_match_constraints", b"geo_match_constraints", "name", b"name", "resource_info", b"resource_info"]) -> None: ...

global___GeoMatchSet = GeoMatchSet

@typing_extensions.final
class IPSetIPSetDescriptor(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    value: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        value: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info", "value", b"value"]) -> None: ...

global___IPSetIPSetDescriptor = IPSetIPSetDescriptor

@typing_extensions.final
class IPSet(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    IP_SET_DESCRIPTORS_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    @property
    def ip_set_descriptors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IPSetIPSetDescriptor]: ...
    name: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        ip_set_descriptors: collections.abc.Iterable[global___IPSetIPSetDescriptor] | None = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ip_set_descriptors", b"ip_set_descriptors", "name", b"name", "resource_info", b"resource_info"]) -> None: ...

global___IPSet = IPSet

@typing_extensions.final
class RateBasedRulePredicate(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    DATA_ID_FIELD_NUMBER: builtins.int
    NEGATED_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    data_id: builtins.str
    negated: builtins.bool
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        data_id: builtins.str = ...,
        negated: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_id", b"data_id", "negated", b"negated", "resource_info", b"resource_info"]) -> None: ...

global___RateBasedRulePredicate = RateBasedRulePredicate

@typing_extensions.final
class RateBasedRule(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    METRIC_NAME_FIELD_NUMBER: builtins.int
    RATE_LIMIT_FIELD_NUMBER: builtins.int
    MATCH_PREDICATES_FIELD_NUMBER: builtins.int
    RATE_KEY_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    metric_name: builtins.str
    rate_limit: builtins.int
    @property
    def match_predicates(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RateBasedRulePredicate]: ...
    rate_key: builtins.str
    name: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        metric_name: builtins.str = ...,
        rate_limit: builtins.int = ...,
        match_predicates: collections.abc.Iterable[global___RateBasedRulePredicate] | None = ...,
        rate_key: builtins.str = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["match_predicates", b"match_predicates", "metric_name", b"metric_name", "name", b"name", "rate_key", b"rate_key", "rate_limit", b"rate_limit", "resource_info", b"resource_info"]) -> None: ...

global___RateBasedRule = RateBasedRule

@typing_extensions.final
class RegexPatternSet(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    REGEX_PATTERN_STRINGS_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    @property
    def regex_pattern_strings(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    name: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        regex_pattern_strings: collections.abc.Iterable[builtins.str] | None = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "regex_pattern_strings", b"regex_pattern_strings", "resource_info", b"resource_info"]) -> None: ...

global___RegexPatternSet = RegexPatternSet

@typing_extensions.final
class RulePredicate(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    DATA_ID_FIELD_NUMBER: builtins.int
    NEGATED_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    data_id: builtins.str
    negated: builtins.bool
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        data_id: builtins.str = ...,
        negated: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_id", b"data_id", "negated", b"negated", "resource_info", b"resource_info"]) -> None: ...

global___RulePredicate = RulePredicate

@typing_extensions.final
class Rule(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    METRIC_NAME_FIELD_NUMBER: builtins.int
    PREDICATES_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    metric_name: builtins.str
    @property
    def predicates(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RulePredicate]: ...
    name: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        metric_name: builtins.str = ...,
        predicates: collections.abc.Iterable[global___RulePredicate] | None = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["metric_name", b"metric_name", "name", b"name", "predicates", b"predicates", "resource_info", b"resource_info"]) -> None: ...

global___Rule = Rule

@typing_extensions.final
class SizeConstraintSetFieldToMatch(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    data: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        data: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "resource_info", b"resource_info"]) -> None: ...

global___SizeConstraintSetFieldToMatch = SizeConstraintSetFieldToMatch

@typing_extensions.final
class SizeConstraintSetSizeConstraint(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    COMPARISON_OPERATOR_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    TEXT_TRANSFORMATION_FIELD_NUMBER: builtins.int
    FIELD_TO_MATCH_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    comparison_operator: builtins.str
    size: builtins.int
    text_transformation: builtins.str
    @property
    def field_to_match(self) -> global___SizeConstraintSetFieldToMatch: ...
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        comparison_operator: builtins.str = ...,
        size: builtins.int = ...,
        text_transformation: builtins.str = ...,
        field_to_match: global___SizeConstraintSetFieldToMatch | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["field_to_match", b"field_to_match", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["comparison_operator", b"comparison_operator", "field_to_match", b"field_to_match", "resource_info", b"resource_info", "size", b"size", "text_transformation", b"text_transformation"]) -> None: ...

global___SizeConstraintSetSizeConstraint = SizeConstraintSetSizeConstraint

@typing_extensions.final
class SizeConstraintSet(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    SIZE_CONSTRAINTS_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    @property
    def size_constraints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SizeConstraintSetSizeConstraint]: ...
    name: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        size_constraints: collections.abc.Iterable[global___SizeConstraintSetSizeConstraint] | None = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "resource_info", b"resource_info", "size_constraints", b"size_constraints"]) -> None: ...

global___SizeConstraintSet = SizeConstraintSet

@typing_extensions.final
class SqlInjectionMatchSetFieldToMatch(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    data: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        data: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "resource_info", b"resource_info"]) -> None: ...

global___SqlInjectionMatchSetFieldToMatch = SqlInjectionMatchSetFieldToMatch

@typing_extensions.final
class SqlInjectionMatchSetSqlInjectionMatchTuple(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    TEXT_TRANSFORMATION_FIELD_NUMBER: builtins.int
    FIELD_TO_MATCH_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    text_transformation: builtins.str
    @property
    def field_to_match(self) -> global___SqlInjectionMatchSetFieldToMatch: ...
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        text_transformation: builtins.str = ...,
        field_to_match: global___SqlInjectionMatchSetFieldToMatch | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["field_to_match", b"field_to_match", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["field_to_match", b"field_to_match", "resource_info", b"resource_info", "text_transformation", b"text_transformation"]) -> None: ...

global___SqlInjectionMatchSetSqlInjectionMatchTuple = SqlInjectionMatchSetSqlInjectionMatchTuple

@typing_extensions.final
class SqlInjectionMatchSet(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    SQL_INJECTION_MATCH_TUPLES_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    @property
    def sql_injection_match_tuples(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SqlInjectionMatchSetSqlInjectionMatchTuple]: ...
    name: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        sql_injection_match_tuples: collections.abc.Iterable[global___SqlInjectionMatchSetSqlInjectionMatchTuple] | None = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "resource_info", b"resource_info", "sql_injection_match_tuples", b"sql_injection_match_tuples"]) -> None: ...

global___SqlInjectionMatchSet = SqlInjectionMatchSet

@typing_extensions.final
class WebACLAction(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> None: ...

global___WebACLAction = WebACLAction

@typing_extensions.final
class WebACLRule(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    PRIORITY_FIELD_NUMBER: builtins.int
    RULE_ID_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    @property
    def action(self) -> global___WebACLAction: ...
    priority: builtins.int
    rule_id: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        action: global___WebACLAction | None = ...,
        priority: builtins.int = ...,
        rule_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["action", b"action", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "priority", b"priority", "resource_info", b"resource_info", "rule_id", b"rule_id"]) -> None: ...

global___WebACLRule = WebACLRule

@typing_extensions.final
class WebACL(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    METRIC_NAME_FIELD_NUMBER: builtins.int
    DEFAULT_ACTION_FIELD_NUMBER: builtins.int
    RULES_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    metric_name: builtins.str
    @property
    def default_action(self) -> global___WebACLAction: ...
    @property
    def rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WebACLRule]: ...
    name: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        metric_name: builtins.str = ...,
        default_action: global___WebACLAction | None = ...,
        rules: collections.abc.Iterable[global___WebACLRule] | None = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["default_action", b"default_action", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["default_action", b"default_action", "metric_name", b"metric_name", "name", b"name", "resource_info", b"resource_info", "rules", b"rules"]) -> None: ...

global___WebACL = WebACL

@typing_extensions.final
class WebACLAssociation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    RESOURCE_ARN_FIELD_NUMBER: builtins.int
    WEB_A_C_L_ID_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    resource_arn: builtins.str
    web_a_c_l_id: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        resource_arn: builtins.str = ...,
        web_a_c_l_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_arn", b"resource_arn", "resource_info", b"resource_info", "web_a_c_l_id", b"web_a_c_l_id"]) -> None: ...

global___WebACLAssociation = WebACLAssociation

@typing_extensions.final
class XssMatchSetFieldToMatch(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    data: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        data: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "resource_info", b"resource_info"]) -> None: ...

global___XssMatchSetFieldToMatch = XssMatchSetFieldToMatch

@typing_extensions.final
class XssMatchSetXssMatchTuple(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    TEXT_TRANSFORMATION_FIELD_NUMBER: builtins.int
    FIELD_TO_MATCH_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    text_transformation: builtins.str
    @property
    def field_to_match(self) -> global___XssMatchSetFieldToMatch: ...
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        text_transformation: builtins.str = ...,
        field_to_match: global___XssMatchSetFieldToMatch | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["field_to_match", b"field_to_match", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["field_to_match", b"field_to_match", "resource_info", b"resource_info", "text_transformation", b"text_transformation"]) -> None: ...

global___XssMatchSetXssMatchTuple = XssMatchSetXssMatchTuple

@typing_extensions.final
class XssMatchSet(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    XSS_MATCH_TUPLES_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    @property
    def xss_match_tuples(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___XssMatchSetXssMatchTuple]: ...
    name: builtins.str
    def __init__(
        self,
        *,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
        xss_match_tuples: collections.abc.Iterable[global___XssMatchSetXssMatchTuple] | None = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "resource_info", b"resource_info", "xss_match_tuples", b"xss_match_tuples"]) -> None: ...

global___XssMatchSet = XssMatchSet
