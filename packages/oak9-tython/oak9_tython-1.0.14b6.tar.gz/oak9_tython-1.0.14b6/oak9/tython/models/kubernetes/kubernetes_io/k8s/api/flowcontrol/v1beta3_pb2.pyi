"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import kubernetes.kubernetes_io.k8s.apimachinery.pkg.apis.meta.v1_pb2
import shared.shared_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class FlowDistinguisherMethod(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    type: builtins.str
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        type: builtins.str = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info", "type", b"type"]) -> None: ...

global___FlowDistinguisherMethod = FlowDistinguisherMethod

@typing_extensions.final
class FlowSchema(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    API_VERSION_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    SPEC_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    api_version: builtins.str
    kind: builtins.str
    @property
    def metadata(self) -> kubernetes.kubernetes_io.k8s.apimachinery.pkg.apis.meta.v1_pb2.ObjectMeta: ...
    @property
    def spec(self) -> global___FlowSchemaSpec: ...
    @property
    def status(self) -> global___FlowSchemaStatus: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        api_version: builtins.str = ...,
        kind: builtins.str = ...,
        metadata: kubernetes.kubernetes_io.k8s.apimachinery.pkg.apis.meta.v1_pb2.ObjectMeta | None = ...,
        spec: global___FlowSchemaSpec | None = ...,
        status: global___FlowSchemaStatus | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata", "resource_info", b"resource_info", "spec", b"spec", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["api_version", b"api_version", "kind", b"kind", "metadata", b"metadata", "resource_info", b"resource_info", "spec", b"spec", "status", b"status"]) -> None: ...

global___FlowSchema = FlowSchema

@typing_extensions.final
class FlowSchemaCondition(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LAST_TRANSITION_TIME_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    @property
    def last_transition_time(self) -> kubernetes.kubernetes_io.k8s.apimachinery.pkg.apis.meta.v1_pb2.Time: ...
    message: builtins.str
    reason: builtins.str
    status: builtins.str
    type: builtins.str
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        last_transition_time: kubernetes.kubernetes_io.k8s.apimachinery.pkg.apis.meta.v1_pb2.Time | None = ...,
        message: builtins.str = ...,
        reason: builtins.str = ...,
        status: builtins.str = ...,
        type: builtins.str = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["last_transition_time", b"last_transition_time", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["last_transition_time", b"last_transition_time", "message", b"message", "reason", b"reason", "resource_info", b"resource_info", "status", b"status", "type", b"type"]) -> None: ...

global___FlowSchemaCondition = FlowSchemaCondition

@typing_extensions.final
class FlowSchemaList(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    API_VERSION_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    api_version: builtins.str
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FlowSchema]: ...
    kind: builtins.str
    @property
    def metadata(self) -> kubernetes.kubernetes_io.k8s.apimachinery.pkg.apis.meta.v1_pb2.ListMeta: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        api_version: builtins.str = ...,
        items: collections.abc.Iterable[global___FlowSchema] | None = ...,
        kind: builtins.str = ...,
        metadata: kubernetes.kubernetes_io.k8s.apimachinery.pkg.apis.meta.v1_pb2.ListMeta | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["api_version", b"api_version", "items", b"items", "kind", b"kind", "metadata", b"metadata", "resource_info", b"resource_info"]) -> None: ...

global___FlowSchemaList = FlowSchemaList

@typing_extensions.final
class FlowSchemaSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DISTINGUISHER_METHOD_FIELD_NUMBER: builtins.int
    MATCHING_PRECEDENCE_FIELD_NUMBER: builtins.int
    PRIORITY_LEVEL_CONFIGURATION_FIELD_NUMBER: builtins.int
    RULES_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    @property
    def distinguisher_method(self) -> global___FlowDistinguisherMethod: ...
    matching_precedence: builtins.int
    @property
    def priority_level_configuration(self) -> global___PriorityLevelConfigurationReference: ...
    @property
    def rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PolicyRulesWithSubjects]: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        distinguisher_method: global___FlowDistinguisherMethod | None = ...,
        matching_precedence: builtins.int = ...,
        priority_level_configuration: global___PriorityLevelConfigurationReference | None = ...,
        rules: collections.abc.Iterable[global___PolicyRulesWithSubjects] | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["distinguisher_method", b"distinguisher_method", "priority_level_configuration", b"priority_level_configuration", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["distinguisher_method", b"distinguisher_method", "matching_precedence", b"matching_precedence", "priority_level_configuration", b"priority_level_configuration", "resource_info", b"resource_info", "rules", b"rules"]) -> None: ...

global___FlowSchemaSpec = FlowSchemaSpec

@typing_extensions.final
class FlowSchemaStatus(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONDITIONS_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    @property
    def conditions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FlowSchemaCondition]: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        conditions: collections.abc.Iterable[global___FlowSchemaCondition] | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["conditions", b"conditions", "resource_info", b"resource_info"]) -> None: ...

global___FlowSchemaStatus = FlowSchemaStatus

@typing_extensions.final
class GroupSubject(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "resource_info", b"resource_info"]) -> None: ...

global___GroupSubject = GroupSubject

@typing_extensions.final
class LimitResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    QUEUING_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    @property
    def queuing(self) -> global___QueuingConfiguration: ...
    type: builtins.str
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        queuing: global___QueuingConfiguration | None = ...,
        type: builtins.str = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["queuing", b"queuing", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["queuing", b"queuing", "resource_info", b"resource_info", "type", b"type"]) -> None: ...

global___LimitResponse = LimitResponse

@typing_extensions.final
class LimitedPriorityLevelConfiguration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BORROWING_LIMIT_PERCENT_FIELD_NUMBER: builtins.int
    LENDABLE_PERCENT_FIELD_NUMBER: builtins.int
    LIMIT_RESPONSE_FIELD_NUMBER: builtins.int
    NOMINAL_CONCURRENCY_SHARES_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    borrowing_limit_percent: builtins.int
    lendable_percent: builtins.int
    @property
    def limit_response(self) -> global___LimitResponse: ...
    nominal_concurrency_shares: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        borrowing_limit_percent: builtins.int = ...,
        lendable_percent: builtins.int = ...,
        limit_response: global___LimitResponse | None = ...,
        nominal_concurrency_shares: builtins.int = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["limit_response", b"limit_response", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["borrowing_limit_percent", b"borrowing_limit_percent", "lendable_percent", b"lendable_percent", "limit_response", b"limit_response", "nominal_concurrency_shares", b"nominal_concurrency_shares", "resource_info", b"resource_info"]) -> None: ...

global___LimitedPriorityLevelConfiguration = LimitedPriorityLevelConfiguration

@typing_extensions.final
class NonResourcePolicyRule(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NON_RESOURCE_U_R_LS_FIELD_NUMBER: builtins.int
    VERBS_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    @property
    def non_resource_u_r_ls(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def verbs(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        non_resource_u_r_ls: collections.abc.Iterable[builtins.str] | None = ...,
        verbs: collections.abc.Iterable[builtins.str] | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["non_resource_u_r_ls", b"non_resource_u_r_ls", "resource_info", b"resource_info", "verbs", b"verbs"]) -> None: ...

global___NonResourcePolicyRule = NonResourcePolicyRule

@typing_extensions.final
class PolicyRulesWithSubjects(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NON_RESOURCE_RULES_FIELD_NUMBER: builtins.int
    RESOURCE_RULES_FIELD_NUMBER: builtins.int
    SUBJECTS_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    @property
    def non_resource_rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NonResourcePolicyRule]: ...
    @property
    def resource_rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ResourcePolicyRule]: ...
    @property
    def subjects(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Subject]: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        non_resource_rules: collections.abc.Iterable[global___NonResourcePolicyRule] | None = ...,
        resource_rules: collections.abc.Iterable[global___ResourcePolicyRule] | None = ...,
        subjects: collections.abc.Iterable[global___Subject] | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["non_resource_rules", b"non_resource_rules", "resource_info", b"resource_info", "resource_rules", b"resource_rules", "subjects", b"subjects"]) -> None: ...

global___PolicyRulesWithSubjects = PolicyRulesWithSubjects

@typing_extensions.final
class PriorityLevelConfiguration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    API_VERSION_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    SPEC_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    api_version: builtins.str
    kind: builtins.str
    @property
    def metadata(self) -> kubernetes.kubernetes_io.k8s.apimachinery.pkg.apis.meta.v1_pb2.ObjectMeta: ...
    @property
    def spec(self) -> global___PriorityLevelConfigurationSpec: ...
    @property
    def status(self) -> global___PriorityLevelConfigurationStatus: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        api_version: builtins.str = ...,
        kind: builtins.str = ...,
        metadata: kubernetes.kubernetes_io.k8s.apimachinery.pkg.apis.meta.v1_pb2.ObjectMeta | None = ...,
        spec: global___PriorityLevelConfigurationSpec | None = ...,
        status: global___PriorityLevelConfigurationStatus | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata", "resource_info", b"resource_info", "spec", b"spec", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["api_version", b"api_version", "kind", b"kind", "metadata", b"metadata", "resource_info", b"resource_info", "spec", b"spec", "status", b"status"]) -> None: ...

global___PriorityLevelConfiguration = PriorityLevelConfiguration

@typing_extensions.final
class PriorityLevelConfigurationCondition(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LAST_TRANSITION_TIME_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    @property
    def last_transition_time(self) -> kubernetes.kubernetes_io.k8s.apimachinery.pkg.apis.meta.v1_pb2.Time: ...
    message: builtins.str
    reason: builtins.str
    status: builtins.str
    type: builtins.str
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        last_transition_time: kubernetes.kubernetes_io.k8s.apimachinery.pkg.apis.meta.v1_pb2.Time | None = ...,
        message: builtins.str = ...,
        reason: builtins.str = ...,
        status: builtins.str = ...,
        type: builtins.str = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["last_transition_time", b"last_transition_time", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["last_transition_time", b"last_transition_time", "message", b"message", "reason", b"reason", "resource_info", b"resource_info", "status", b"status", "type", b"type"]) -> None: ...

global___PriorityLevelConfigurationCondition = PriorityLevelConfigurationCondition

@typing_extensions.final
class PriorityLevelConfigurationList(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    API_VERSION_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    api_version: builtins.str
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PriorityLevelConfiguration]: ...
    kind: builtins.str
    @property
    def metadata(self) -> kubernetes.kubernetes_io.k8s.apimachinery.pkg.apis.meta.v1_pb2.ListMeta: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        api_version: builtins.str = ...,
        items: collections.abc.Iterable[global___PriorityLevelConfiguration] | None = ...,
        kind: builtins.str = ...,
        metadata: kubernetes.kubernetes_io.k8s.apimachinery.pkg.apis.meta.v1_pb2.ListMeta | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["api_version", b"api_version", "items", b"items", "kind", b"kind", "metadata", b"metadata", "resource_info", b"resource_info"]) -> None: ...

global___PriorityLevelConfigurationList = PriorityLevelConfigurationList

@typing_extensions.final
class PriorityLevelConfigurationReference(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "resource_info", b"resource_info"]) -> None: ...

global___PriorityLevelConfigurationReference = PriorityLevelConfigurationReference

@typing_extensions.final
class PriorityLevelConfigurationSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LIMITED_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    @property
    def limited(self) -> global___LimitedPriorityLevelConfiguration: ...
    type: builtins.str
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        limited: global___LimitedPriorityLevelConfiguration | None = ...,
        type: builtins.str = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["limited", b"limited", "resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["limited", b"limited", "resource_info", b"resource_info", "type", b"type"]) -> None: ...

global___PriorityLevelConfigurationSpec = PriorityLevelConfigurationSpec

@typing_extensions.final
class PriorityLevelConfigurationStatus(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONDITIONS_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    @property
    def conditions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PriorityLevelConfigurationCondition]: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        conditions: collections.abc.Iterable[global___PriorityLevelConfigurationCondition] | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["conditions", b"conditions", "resource_info", b"resource_info"]) -> None: ...

global___PriorityLevelConfigurationStatus = PriorityLevelConfigurationStatus

@typing_extensions.final
class QueuingConfiguration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HAND_SIZE_FIELD_NUMBER: builtins.int
    QUEUE_LENGTH_LIMIT_FIELD_NUMBER: builtins.int
    QUEUES_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    hand_size: builtins.int
    queue_length_limit: builtins.int
    queues: builtins.int
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        hand_size: builtins.int = ...,
        queue_length_limit: builtins.int = ...,
        queues: builtins.int = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["hand_size", b"hand_size", "queue_length_limit", b"queue_length_limit", "queues", b"queues", "resource_info", b"resource_info"]) -> None: ...

global___QueuingConfiguration = QueuingConfiguration

@typing_extensions.final
class ResourcePolicyRule(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    API_GROUPS_FIELD_NUMBER: builtins.int
    CLUSTER_SCOPE_FIELD_NUMBER: builtins.int
    NAMESPACES_FIELD_NUMBER: builtins.int
    RESOURCES_FIELD_NUMBER: builtins.int
    VERBS_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    @property
    def api_groups(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    cluster_scope: builtins.bool
    @property
    def namespaces(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def resources(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def verbs(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        api_groups: collections.abc.Iterable[builtins.str] | None = ...,
        cluster_scope: builtins.bool = ...,
        namespaces: collections.abc.Iterable[builtins.str] | None = ...,
        resources: collections.abc.Iterable[builtins.str] | None = ...,
        verbs: collections.abc.Iterable[builtins.str] | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["api_groups", b"api_groups", "cluster_scope", b"cluster_scope", "namespaces", b"namespaces", "resource_info", b"resource_info", "resources", b"resources", "verbs", b"verbs"]) -> None: ...

global___ResourcePolicyRule = ResourcePolicyRule

@typing_extensions.final
class ServiceAccountSubject(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    name: builtins.str
    namespace: builtins.str
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        namespace: builtins.str = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "namespace", b"namespace", "resource_info", b"resource_info"]) -> None: ...

global___ServiceAccountSubject = ServiceAccountSubject

@typing_extensions.final
class Subject(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GROUP_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
    USER_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    @property
    def group(self) -> global___GroupSubject: ...
    kind: builtins.str
    @property
    def service_account(self) -> global___ServiceAccountSubject: ...
    @property
    def user(self) -> global___UserSubject: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        group: global___GroupSubject | None = ...,
        kind: builtins.str = ...,
        service_account: global___ServiceAccountSubject | None = ...,
        user: global___UserSubject | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["group", b"group", "resource_info", b"resource_info", "service_account", b"service_account", "user", b"user"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["group", b"group", "kind", b"kind", "resource_info", b"resource_info", "service_account", b"service_account", "user", b"user"]) -> None: ...

global___Subject = Subject

@typing_extensions.final
class UserSubject(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "resource_info", b"resource_info"]) -> None: ...

global___UserSubject = UserSubject
