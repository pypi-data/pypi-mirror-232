"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import gcp.gcp_certificate_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class GoogleCertificateManager(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CERTIFICATE_MANAGER_CERTIFICATE_FIELD_NUMBER: builtins.int
    CERTIFICATE_MANAGER_CERTIFICATE_MAP_FIELD_NUMBER: builtins.int
    CERTIFICATE_MANAGER_CERTIFICATE_MAP_ENTRY_FIELD_NUMBER: builtins.int
    CERTIFICATE_MANAGER_DNS_AUTHORIZATION_FIELD_NUMBER: builtins.int
    @property
    def certificate_manager_certificate(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[gcp.gcp_certificate_pb2.CertificateManagerCertificate]: ...
    @property
    def certificate_manager_certificate_map(self) -> gcp.gcp_certificate_pb2.CertificateManagerCertificateMap: ...
    @property
    def certificate_manager_certificate_map_entry(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[gcp.gcp_certificate_pb2.CertificateManagerCertificateMapEntry]: ...
    @property
    def certificate_manager_dns_authorization(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[gcp.gcp_certificate_pb2.CertificateManagerDnsAuthorization]: ...
    def __init__(
        self,
        *,
        certificate_manager_certificate: collections.abc.Iterable[gcp.gcp_certificate_pb2.CertificateManagerCertificate] | None = ...,
        certificate_manager_certificate_map: gcp.gcp_certificate_pb2.CertificateManagerCertificateMap | None = ...,
        certificate_manager_certificate_map_entry: collections.abc.Iterable[gcp.gcp_certificate_pb2.CertificateManagerCertificateMapEntry] | None = ...,
        certificate_manager_dns_authorization: collections.abc.Iterable[gcp.gcp_certificate_pb2.CertificateManagerDnsAuthorization] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["certificate_manager_certificate_map", b"certificate_manager_certificate_map"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["certificate_manager_certificate", b"certificate_manager_certificate", "certificate_manager_certificate_map", b"certificate_manager_certificate_map", "certificate_manager_certificate_map_entry", b"certificate_manager_certificate_map_entry", "certificate_manager_dns_authorization", b"certificate_manager_dns_authorization"]) -> None: ...

global___GoogleCertificateManager = GoogleCertificateManager
