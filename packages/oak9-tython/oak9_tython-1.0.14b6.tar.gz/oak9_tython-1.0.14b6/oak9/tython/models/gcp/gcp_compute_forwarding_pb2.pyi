"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import shared.shared_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class ComputeForwardingRuleXServiceDirectoryRegistrations(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    SERVICE_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    service: builtins.str
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        service: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["namespace", b"namespace", "service", b"service"]) -> None: ...

global___ComputeForwardingRuleXServiceDirectoryRegistrations = ComputeForwardingRuleXServiceDirectoryRegistrations

@typing_extensions.final
class ComputeForwardingRuleXTimeouts(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATE_FIELD_NUMBER: builtins.int
    DELETE_FIELD_NUMBER: builtins.int
    UPDATE_FIELD_NUMBER: builtins.int
    create: builtins.str
    delete: builtins.str
    update: builtins.str
    def __init__(
        self,
        *,
        create: builtins.str = ...,
        delete: builtins.str = ...,
        update: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["create", b"create", "delete", b"delete", "update", b"update"]) -> None: ...

global___ComputeForwardingRuleXTimeouts = ComputeForwardingRuleXTimeouts

@typing_extensions.final
class ComputeForwardingRule(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    ALL_PORTS_FIELD_NUMBER: builtins.int
    ALLOW_GLOBAL_ACCESS_FIELD_NUMBER: builtins.int
    BACKEND_SERVICE_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    IP_ADDRESS_FIELD_NUMBER: builtins.int
    IP_PROTOCOL_FIELD_NUMBER: builtins.int
    IS_MIRRORING_COLLECTOR_FIELD_NUMBER: builtins.int
    LABEL_FINGERPRINT_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    LOAD_BALANCING_SCHEME_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    NETWORK_TIER_FIELD_NUMBER: builtins.int
    PORT_RANGE_FIELD_NUMBER: builtins.int
    PORTS_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    PSC_CONNECTION_ID_FIELD_NUMBER: builtins.int
    PSC_CONNECTION_STATUS_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SERVICE_LABEL_FIELD_NUMBER: builtins.int
    SERVICE_NAME_FIELD_NUMBER: builtins.int
    SUBNETWORK_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    SERVICE_DIRECTORY_REGISTRATIONS_FIELD_NUMBER: builtins.int
    TIMEOUTS_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    all_ports: builtins.bool
    allow_global_access: builtins.bool
    backend_service: builtins.str
    creation_timestamp: builtins.str
    description: builtins.str
    id: builtins.str
    ip_address: builtins.str
    ip_protocol: builtins.str
    is_mirroring_collector: builtins.bool
    label_fingerprint: builtins.str
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    load_balancing_scheme: builtins.str
    name: builtins.str
    network: builtins.str
    network_tier: builtins.str
    port_range: builtins.str
    @property
    def ports(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    project: builtins.str
    psc_connection_id: builtins.str
    psc_connection_status: builtins.str
    region: builtins.str
    self_link: builtins.str
    service_label: builtins.str
    service_name: builtins.str
    subnetwork: builtins.str
    target: builtins.str
    @property
    def service_directory_registrations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ComputeForwardingRuleXServiceDirectoryRegistrations]: ...
    @property
    def timeouts(self) -> global___ComputeForwardingRuleXTimeouts: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        all_ports: builtins.bool = ...,
        allow_global_access: builtins.bool = ...,
        backend_service: builtins.str = ...,
        creation_timestamp: builtins.str = ...,
        description: builtins.str = ...,
        id: builtins.str = ...,
        ip_address: builtins.str = ...,
        ip_protocol: builtins.str = ...,
        is_mirroring_collector: builtins.bool = ...,
        label_fingerprint: builtins.str = ...,
        labels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        load_balancing_scheme: builtins.str = ...,
        name: builtins.str = ...,
        network: builtins.str = ...,
        network_tier: builtins.str = ...,
        port_range: builtins.str = ...,
        ports: collections.abc.Iterable[builtins.str] | None = ...,
        project: builtins.str = ...,
        psc_connection_id: builtins.str = ...,
        psc_connection_status: builtins.str = ...,
        region: builtins.str = ...,
        self_link: builtins.str = ...,
        service_label: builtins.str = ...,
        service_name: builtins.str = ...,
        subnetwork: builtins.str = ...,
        target: builtins.str = ...,
        service_directory_registrations: collections.abc.Iterable[global___ComputeForwardingRuleXServiceDirectoryRegistrations] | None = ...,
        timeouts: global___ComputeForwardingRuleXTimeouts | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info", "timeouts", b"timeouts"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["all_ports", b"all_ports", "allow_global_access", b"allow_global_access", "backend_service", b"backend_service", "creation_timestamp", b"creation_timestamp", "description", b"description", "id", b"id", "ip_address", b"ip_address", "ip_protocol", b"ip_protocol", "is_mirroring_collector", b"is_mirroring_collector", "label_fingerprint", b"label_fingerprint", "labels", b"labels", "load_balancing_scheme", b"load_balancing_scheme", "name", b"name", "network", b"network", "network_tier", b"network_tier", "port_range", b"port_range", "ports", b"ports", "project", b"project", "psc_connection_id", b"psc_connection_id", "psc_connection_status", b"psc_connection_status", "region", b"region", "resource_info", b"resource_info", "self_link", b"self_link", "service_directory_registrations", b"service_directory_registrations", "service_label", b"service_label", "service_name", b"service_name", "subnetwork", b"subnetwork", "target", b"target", "timeouts", b"timeouts"]) -> None: ...

global___ComputeForwardingRule = ComputeForwardingRule
