"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import shared.shared_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class DnsManagedZoneXDnssecConfigXDefaultKeySpecs(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALGORITHM_FIELD_NUMBER: builtins.int
    KEY_LENGTH_FIELD_NUMBER: builtins.int
    KEY_TYPE_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    algorithm: builtins.str
    key_length: builtins.float
    key_type: builtins.str
    kind: builtins.str
    def __init__(
        self,
        *,
        algorithm: builtins.str = ...,
        key_length: builtins.float = ...,
        key_type: builtins.str = ...,
        kind: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["algorithm", b"algorithm", "key_length", b"key_length", "key_type", b"key_type", "kind", b"kind"]) -> None: ...

global___DnsManagedZoneXDnssecConfigXDefaultKeySpecs = DnsManagedZoneXDnssecConfigXDefaultKeySpecs

@typing_extensions.final
class DnsManagedZoneXDnssecConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KIND_FIELD_NUMBER: builtins.int
    NON_EXISTENCE_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    DEFAULT_KEY_SPECS_FIELD_NUMBER: builtins.int
    kind: builtins.str
    non_existence: builtins.str
    state: builtins.str
    @property
    def default_key_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DnsManagedZoneXDnssecConfigXDefaultKeySpecs]: ...
    def __init__(
        self,
        *,
        kind: builtins.str = ...,
        non_existence: builtins.str = ...,
        state: builtins.str = ...,
        default_key_specs: collections.abc.Iterable[global___DnsManagedZoneXDnssecConfigXDefaultKeySpecs] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["default_key_specs", b"default_key_specs", "kind", b"kind", "non_existence", b"non_existence", "state", b"state"]) -> None: ...

global___DnsManagedZoneXDnssecConfig = DnsManagedZoneXDnssecConfig

@typing_extensions.final
class DnsManagedZoneXForwardingConfigXTargetNameServers(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FORWARDING_PATH_FIELD_NUMBER: builtins.int
    IPV4_ADDRESS_FIELD_NUMBER: builtins.int
    forwarding_path: builtins.str
    ipv4_address: builtins.str
    def __init__(
        self,
        *,
        forwarding_path: builtins.str = ...,
        ipv4_address: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["forwarding_path", b"forwarding_path", "ipv4_address", b"ipv4_address"]) -> None: ...

global___DnsManagedZoneXForwardingConfigXTargetNameServers = DnsManagedZoneXForwardingConfigXTargetNameServers

@typing_extensions.final
class DnsManagedZoneXForwardingConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TARGET_NAME_SERVERS_FIELD_NUMBER: builtins.int
    @property
    def target_name_servers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DnsManagedZoneXForwardingConfigXTargetNameServers]: ...
    def __init__(
        self,
        *,
        target_name_servers: collections.abc.Iterable[global___DnsManagedZoneXForwardingConfigXTargetNameServers] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["target_name_servers", b"target_name_servers"]) -> None: ...

global___DnsManagedZoneXForwardingConfig = DnsManagedZoneXForwardingConfig

@typing_extensions.final
class DnsManagedZoneXPeeringConfigXTargetNetwork(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NETWORK_URL_FIELD_NUMBER: builtins.int
    network_url: builtins.str
    def __init__(
        self,
        *,
        network_url: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["network_url", b"network_url"]) -> None: ...

global___DnsManagedZoneXPeeringConfigXTargetNetwork = DnsManagedZoneXPeeringConfigXTargetNetwork

@typing_extensions.final
class DnsManagedZoneXPeeringConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TARGET_NETWORK_FIELD_NUMBER: builtins.int
    @property
    def target_network(self) -> global___DnsManagedZoneXPeeringConfigXTargetNetwork: ...
    def __init__(
        self,
        *,
        target_network: global___DnsManagedZoneXPeeringConfigXTargetNetwork | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["target_network", b"target_network"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["target_network", b"target_network"]) -> None: ...

global___DnsManagedZoneXPeeringConfig = DnsManagedZoneXPeeringConfig

@typing_extensions.final
class DnsManagedZoneXPrivateVisibilityConfigXNetworks(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NETWORK_URL_FIELD_NUMBER: builtins.int
    network_url: builtins.str
    def __init__(
        self,
        *,
        network_url: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["network_url", b"network_url"]) -> None: ...

global___DnsManagedZoneXPrivateVisibilityConfigXNetworks = DnsManagedZoneXPrivateVisibilityConfigXNetworks

@typing_extensions.final
class DnsManagedZoneXPrivateVisibilityConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NETWORKS_FIELD_NUMBER: builtins.int
    @property
    def networks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DnsManagedZoneXPrivateVisibilityConfigXNetworks]: ...
    def __init__(
        self,
        *,
        networks: collections.abc.Iterable[global___DnsManagedZoneXPrivateVisibilityConfigXNetworks] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["networks", b"networks"]) -> None: ...

global___DnsManagedZoneXPrivateVisibilityConfig = DnsManagedZoneXPrivateVisibilityConfig

@typing_extensions.final
class DnsManagedZoneXTimeouts(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATE_FIELD_NUMBER: builtins.int
    DELETE_FIELD_NUMBER: builtins.int
    UPDATE_FIELD_NUMBER: builtins.int
    create: builtins.str
    delete: builtins.str
    update: builtins.str
    def __init__(
        self,
        *,
        create: builtins.str = ...,
        delete: builtins.str = ...,
        update: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["create", b"create", "delete", b"delete", "update", b"update"]) -> None: ...

global___DnsManagedZoneXTimeouts = DnsManagedZoneXTimeouts

@typing_extensions.final
class DnsManagedZone(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    CREATION_TIME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DNS_NAME_FIELD_NUMBER: builtins.int
    FORCE_DESTROY_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    MANAGED_ZONE_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NAME_SERVERS_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    VISIBILITY_FIELD_NUMBER: builtins.int
    DNSSEC_CONFIG_FIELD_NUMBER: builtins.int
    FORWARDING_CONFIG_FIELD_NUMBER: builtins.int
    PEERING_CONFIG_FIELD_NUMBER: builtins.int
    PRIVATE_VISIBILITY_CONFIG_FIELD_NUMBER: builtins.int
    TIMEOUTS_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    creation_time: builtins.str
    description: builtins.str
    dns_name: builtins.str
    force_destroy: builtins.bool
    id: builtins.str
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    managed_zone_id: builtins.float
    name: builtins.str
    @property
    def name_servers(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    project: builtins.str
    visibility: builtins.str
    @property
    def dnssec_config(self) -> global___DnsManagedZoneXDnssecConfig: ...
    @property
    def forwarding_config(self) -> global___DnsManagedZoneXForwardingConfig: ...
    @property
    def peering_config(self) -> global___DnsManagedZoneXPeeringConfig: ...
    @property
    def private_visibility_config(self) -> global___DnsManagedZoneXPrivateVisibilityConfig: ...
    @property
    def timeouts(self) -> global___DnsManagedZoneXTimeouts: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        creation_time: builtins.str = ...,
        description: builtins.str = ...,
        dns_name: builtins.str = ...,
        force_destroy: builtins.bool = ...,
        id: builtins.str = ...,
        labels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        managed_zone_id: builtins.float = ...,
        name: builtins.str = ...,
        name_servers: collections.abc.Iterable[builtins.str] | None = ...,
        project: builtins.str = ...,
        visibility: builtins.str = ...,
        dnssec_config: global___DnsManagedZoneXDnssecConfig | None = ...,
        forwarding_config: global___DnsManagedZoneXForwardingConfig | None = ...,
        peering_config: global___DnsManagedZoneXPeeringConfig | None = ...,
        private_visibility_config: global___DnsManagedZoneXPrivateVisibilityConfig | None = ...,
        timeouts: global___DnsManagedZoneXTimeouts | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dnssec_config", b"dnssec_config", "forwarding_config", b"forwarding_config", "peering_config", b"peering_config", "private_visibility_config", b"private_visibility_config", "resource_info", b"resource_info", "timeouts", b"timeouts"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["creation_time", b"creation_time", "description", b"description", "dns_name", b"dns_name", "dnssec_config", b"dnssec_config", "force_destroy", b"force_destroy", "forwarding_config", b"forwarding_config", "id", b"id", "labels", b"labels", "managed_zone_id", b"managed_zone_id", "name", b"name", "name_servers", b"name_servers", "peering_config", b"peering_config", "private_visibility_config", b"private_visibility_config", "project", b"project", "resource_info", b"resource_info", "timeouts", b"timeouts", "visibility", b"visibility"]) -> None: ...

global___DnsManagedZone = DnsManagedZone

@typing_extensions.final
class DnsPolicyXAlternativeNameServerConfigXTargetNameServers(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FORWARDING_PATH_FIELD_NUMBER: builtins.int
    IPV4_ADDRESS_FIELD_NUMBER: builtins.int
    forwarding_path: builtins.str
    ipv4_address: builtins.str
    def __init__(
        self,
        *,
        forwarding_path: builtins.str = ...,
        ipv4_address: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["forwarding_path", b"forwarding_path", "ipv4_address", b"ipv4_address"]) -> None: ...

global___DnsPolicyXAlternativeNameServerConfigXTargetNameServers = DnsPolicyXAlternativeNameServerConfigXTargetNameServers

@typing_extensions.final
class DnsPolicyXAlternativeNameServerConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TARGET_NAME_SERVERS_FIELD_NUMBER: builtins.int
    @property
    def target_name_servers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DnsPolicyXAlternativeNameServerConfigXTargetNameServers]: ...
    def __init__(
        self,
        *,
        target_name_servers: collections.abc.Iterable[global___DnsPolicyXAlternativeNameServerConfigXTargetNameServers] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["target_name_servers", b"target_name_servers"]) -> None: ...

global___DnsPolicyXAlternativeNameServerConfig = DnsPolicyXAlternativeNameServerConfig

@typing_extensions.final
class DnsPolicyXNetworks(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NETWORK_URL_FIELD_NUMBER: builtins.int
    network_url: builtins.str
    def __init__(
        self,
        *,
        network_url: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["network_url", b"network_url"]) -> None: ...

global___DnsPolicyXNetworks = DnsPolicyXNetworks

@typing_extensions.final
class DnsPolicyXTimeouts(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATE_FIELD_NUMBER: builtins.int
    DELETE_FIELD_NUMBER: builtins.int
    UPDATE_FIELD_NUMBER: builtins.int
    create: builtins.str
    delete: builtins.str
    update: builtins.str
    def __init__(
        self,
        *,
        create: builtins.str = ...,
        delete: builtins.str = ...,
        update: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["create", b"create", "delete", b"delete", "update", b"update"]) -> None: ...

global___DnsPolicyXTimeouts = DnsPolicyXTimeouts

@typing_extensions.final
class DnsPolicy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DESCRIPTION_FIELD_NUMBER: builtins.int
    ENABLE_INBOUND_FORWARDING_FIELD_NUMBER: builtins.int
    ENABLE_LOGGING_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ALTERNATIVE_NAME_SERVER_CONFIG_FIELD_NUMBER: builtins.int
    NETWORKS_FIELD_NUMBER: builtins.int
    TIMEOUTS_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    description: builtins.str
    enable_inbound_forwarding: builtins.bool
    enable_logging: builtins.bool
    id: builtins.str
    name: builtins.str
    project: builtins.str
    @property
    def alternative_name_server_config(self) -> global___DnsPolicyXAlternativeNameServerConfig: ...
    @property
    def networks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DnsPolicyXNetworks]: ...
    @property
    def timeouts(self) -> global___DnsPolicyXTimeouts: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        description: builtins.str = ...,
        enable_inbound_forwarding: builtins.bool = ...,
        enable_logging: builtins.bool = ...,
        id: builtins.str = ...,
        name: builtins.str = ...,
        project: builtins.str = ...,
        alternative_name_server_config: global___DnsPolicyXAlternativeNameServerConfig | None = ...,
        networks: collections.abc.Iterable[global___DnsPolicyXNetworks] | None = ...,
        timeouts: global___DnsPolicyXTimeouts | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["alternative_name_server_config", b"alternative_name_server_config", "resource_info", b"resource_info", "timeouts", b"timeouts"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["alternative_name_server_config", b"alternative_name_server_config", "description", b"description", "enable_inbound_forwarding", b"enable_inbound_forwarding", "enable_logging", b"enable_logging", "id", b"id", "name", b"name", "networks", b"networks", "project", b"project", "resource_info", b"resource_info", "timeouts", b"timeouts"]) -> None: ...

global___DnsPolicy = DnsPolicy

@typing_extensions.final
class DnsRecordSetXRoutingPolicyXGeo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCATION_FIELD_NUMBER: builtins.int
    RRDATAS_FIELD_NUMBER: builtins.int
    location: builtins.str
    @property
    def rrdatas(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        location: builtins.str = ...,
        rrdatas: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["location", b"location", "rrdatas", b"rrdatas"]) -> None: ...

global___DnsRecordSetXRoutingPolicyXGeo = DnsRecordSetXRoutingPolicyXGeo

@typing_extensions.final
class DnsRecordSetXRoutingPolicyXWrr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RRDATAS_FIELD_NUMBER: builtins.int
    WEIGHT_FIELD_NUMBER: builtins.int
    @property
    def rrdatas(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    weight: builtins.float
    def __init__(
        self,
        *,
        rrdatas: collections.abc.Iterable[builtins.str] | None = ...,
        weight: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["rrdatas", b"rrdatas", "weight", b"weight"]) -> None: ...

global___DnsRecordSetXRoutingPolicyXWrr = DnsRecordSetXRoutingPolicyXWrr

@typing_extensions.final
class DnsRecordSetXRoutingPolicy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GEO_FIELD_NUMBER: builtins.int
    WRR_FIELD_NUMBER: builtins.int
    @property
    def geo(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DnsRecordSetXRoutingPolicyXGeo]: ...
    @property
    def wrr(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DnsRecordSetXRoutingPolicyXWrr]: ...
    def __init__(
        self,
        *,
        geo: collections.abc.Iterable[global___DnsRecordSetXRoutingPolicyXGeo] | None = ...,
        wrr: collections.abc.Iterable[global___DnsRecordSetXRoutingPolicyXWrr] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["geo", b"geo", "wrr", b"wrr"]) -> None: ...

global___DnsRecordSetXRoutingPolicy = DnsRecordSetXRoutingPolicy

@typing_extensions.final
class DnsRecordSet(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    MANAGED_ZONE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RRDATAS_FIELD_NUMBER: builtins.int
    TTL_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    ROUTING_POLICY_FIELD_NUMBER: builtins.int
    RESOURCE_INFO_FIELD_NUMBER: builtins.int
    id: builtins.str
    managed_zone: builtins.str
    name: builtins.str
    project: builtins.str
    @property
    def rrdatas(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    ttl: builtins.float
    type: builtins.str
    @property
    def routing_policy(self) -> global___DnsRecordSetXRoutingPolicy: ...
    @property
    def resource_info(self) -> shared.shared_pb2.ResourceInfo: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        managed_zone: builtins.str = ...,
        name: builtins.str = ...,
        project: builtins.str = ...,
        rrdatas: collections.abc.Iterable[builtins.str] | None = ...,
        ttl: builtins.float = ...,
        type: builtins.str = ...,
        routing_policy: global___DnsRecordSetXRoutingPolicy | None = ...,
        resource_info: shared.shared_pb2.ResourceInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_info", b"resource_info", "routing_policy", b"routing_policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "managed_zone", b"managed_zone", "name", b"name", "project", b"project", "resource_info", b"resource_info", "routing_policy", b"routing_policy", "rrdatas", b"rrdatas", "ttl", b"ttl", "type", b"type"]) -> None: ...

global___DnsRecordSet = DnsRecordSet
