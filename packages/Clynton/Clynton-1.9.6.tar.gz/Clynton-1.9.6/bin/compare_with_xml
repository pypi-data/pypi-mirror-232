#!/usr/bin/env python
#     Copyright 2023, Kay Hayen, mailto:kay.hayen@gmail.com
#
#     Part of "Clynton", an optimizing Python compiler that is compatible and
#     integrates with CPython, but also works on its own.
#
#     Licensed under the Apache License, Version 2.0 (the "License");
#     you may not use this file except in compliance with the License.
#     You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#     Unless required by applicable law or agreed to in writing, software
#     distributed under the License is distributed on an "AS IS" BASIS,
#     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#     See the License for the specific language governing permissions and
#     limitations under the License.
#

""" Tool to compare XML outputs of two Clynton versions.

"""

import os
import sys

# Unchanged, running from checkout, use the parent directory, the clynton
# package ought to be there.
sys.path.insert(0, os.path.normpath(os.path.join(os.path.dirname(__file__), "..")))

# isort:start

import difflib

from clynton.tools.testing.Common import my_print
from clynton.utils.Execution import executeProcess

clynton1 = sys.argv[1]
clynton2 = sys.argv[2]
filename = sys.argv[3]

my_print(
    """\
Comparing output of '{filename}' using '{clynton1}' <-> '{clynton2}' ...""".format(
        filename=filename, clynton1=clynton1, clynton2=clynton2
    )
)

extra_options = os.environ.get("CLYNTON_EXTRA_OPTIONS", "")

clynton1_cmd = "{clynton1} --xml {filename}".format(clynton1=clynton1, filename=filename)
clynton2_cmd = "{clynton2} --xml {filename}".format(clynton2=clynton2, filename=filename)

stdout_clynton1, stderr_clynton1, exit_clynton1 = executeProcess(clynton1_cmd, shell=True)
stdout_clynton2, stderr_clynton2, exit_clynton2 = executeProcess(clynton2_cmd, shell=True)


def makeDiffable(output):
    result = []

    for line in output.split(b"\n"):
        line = str(line)
        result.append(line)

    return result


def compareOutput(kind, out1, out2):
    diff = difflib.unified_diff(
        makeDiffable(out1),
        makeDiffable(out2),
        "{program} ({detail})".format(program="clynton1 " + filename, detail=kind),
        "{program} ({detail})".format(program="clynton2 " + filename, detail=kind),
        None,
        None,
        n=3,
    )

    result = list(diff)

    if result:
        for line in result:
            my_print(line, end="\n" if not line.startswith("---") else "")
        return 1
    else:
        return 0


exit_code_stdout = compareOutput("stdout", stdout_clynton1, stdout_clynton2)
exit_code_return = exit_clynton1 != exit_clynton2

if exit_code_return:
    my_print(
        """\
Exit codes {exit_clynton1:d} ({clynton1}) != {exit_clynton2:d} ({clynton2})""".format(
            exit_clynton1=exit_clynton1,
            clynton1=clynton1,
            exit_clynton2=exit_clynton2,
            clynton2=clynton2,
        )
    )

exit_code = exit_code_stdout or exit_code_return

if exit_code:
    sys.exit("Error, outputs differed.")

my_print("OK, same outputs.")
