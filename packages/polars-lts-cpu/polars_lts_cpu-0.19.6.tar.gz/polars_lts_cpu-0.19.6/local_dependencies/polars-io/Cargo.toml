[package]
name = "polars-io"
version = "0.33.2"
authors = ["Ritchie Vink <ritchie46@gmail.com>"]
edition = "2021"
homepage = "https://www.pola.rs/"
license = "MIT"
repository = "https://github.com/pola-rs/polars"
description = "IO related logic for the Polars DataFrame library"
resolver = "2"

[dependencies]
polars-arrow = { path = "../polars-arrow" }
polars-core = { path = "../polars-core" }
polars-error = { default-features = false , path = "../polars-error" }
polars-json = { optional = true , path = "../polars-json" }
polars-time = { features = [], optional = true , path = "../polars-time" }
polars-utils = { path = "../polars-utils" }
arrow = { path = "../arrow" }
async-trait = { version = "0.1.59", optional = true }
bytes = { version = "1.3" }
fast-float = { version = "0.2", optional = true }
flate2 = { version = "1", optional = true, default-features = false }
lexical = { version = "6", optional = true, default-features = false, features = ["std", "parse-integers"] }
memmap = { package = "memmap2", version = "0.7" }
serde_json = { version = "1", default-features = false, features = ["alloc", "raw_value"], optional = true }
ahash = "0.8"
chrono = { version = "0.4.31", default-features = false, features = ["std"] , optional = true }
chrono-tz = { version = "0.8.1", optional = true }
futures = { version = "0.3.25", optional = true }
itoa = { version = "1.0.6", optional = true }
lexical-core = { version = "0.8.5", optional = true }
memchr = "2.6"
num-traits = "0.2"
object_store = { version = "0.7", default-features = false , optional = true }
once_cell = "1"
percent-encoding = "2.3"
rayon = "1.8"
regex = "1.9"
reqwest = { version = "0.11", default-features = false , optional = true }
ryu = { version = "1.0.13", optional = true }
serde = { version = "1.0.188", optional = true , features = ["derive"] }
simd-json = { version = "0.10", features = ["allow-non-simd", "known-key"] , optional = true }
simdutf8 = { version = "0.1.4", optional = true }
smartstring = "1"
tokio = { version = "1.26", optional = true , features = ["net", "rt-multi-thread"] }
tokio-util = { version = "0.7.8", optional = true , features = ["io", "io-util"] }
url = { version = "2.4", optional = true }

[target.'cfg(not(target_family = "wasm"))'.dependencies]
home = "0.5.4"

[features]
default = ["decompress"]
# support for arrows json parsing
json = [
  "polars-json",
  "simd-json",
  "lexical",
  "lexical-core",
  "serde_json",
  "dtype-struct",
  "csv",
]
# support for arrows ipc file parsing
ipc = ["arrow/io_ipc", "arrow/io_ipc_compression"]
# support for arrows streaming ipc file parsing
ipc_streaming = ["arrow/io_ipc", "arrow/io_ipc_compression"]
# support for arrow avro parsing
avro = ["arrow/io_avro", "arrow/io_avro_compression"]
csv = ["lexical", "polars-core/rows", "itoa", "ryu", "fast-float", "simdutf8"]
decompress = ["flate2/rust_backend"]
decompress-fast = ["flate2/zlib-ng"]
dtype-categorical = ["polars-core/dtype-categorical"]
dtype-date = ["polars-core/dtype-date", "polars-time/dtype-date"]
object = []
dtype-datetime = [
  "polars-core/dtype-datetime",
  "polars-core/temporal",
  "polars-time/dtype-datetime",
  "chrono",
]
timezones = [
  "chrono-tz",
  "dtype-datetime",
]
dtype-time = ["polars-core/dtype-time", "polars-core/temporal", "polars-time/dtype-time"]
dtype-struct = ["polars-core/dtype-struct"]
dtype-decimal = ["polars-core/dtype-decimal"]
fmt = ["polars-core/fmt"]
lazy = []
parquet = ["polars-core/parquet", "arrow/io_parquet", "arrow/io_parquet_compression"]
async = ["async-trait", "futures", "tokio", "tokio-util", "arrow/io_ipc_write_async", "polars-error/regex"]
cloud = ["object_store", "async", "polars-error/object_store", "url"]
aws = ["object_store/aws", "cloud", "reqwest"]
azure = ["object_store/azure", "cloud"]
gcp = ["object_store/gcp", "cloud"]
partition = ["polars-core/partition_by"]
temporal = ["dtype-datetime", "dtype-date", "dtype-time"]
simd = []
python = ["polars-error/python"]

[package.metadata.docs.rs]
all-features = true
# defines the configuration attribute `docsrs`
rustdoc-args = ["--cfg", "docsrs"]
