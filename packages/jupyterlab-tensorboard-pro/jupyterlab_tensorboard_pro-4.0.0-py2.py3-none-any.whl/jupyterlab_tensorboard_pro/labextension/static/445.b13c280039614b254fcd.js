"use strict";(self.webpackChunkjupyterlab_tensorboard_pro=self.webpackChunkjupyterlab_tensorboard_pro||[]).push([[445],{2322:(e,t,n)=>{n.r(t),n.d(t,{addCommands:()=>O,default:()=>L,tensorboardIcon:()=>z});var r=n(1991),o=n(9250),a=n(2074),s=n(1007),i=n(8918),l=n(1840),d=n(1526),c=n(7019),m=n(6748);const u="api/tensorboard_pro",h="tensorboard_pro";var g,p;!function(e){e.startNew=function(e,t,n,r){return b.startNew(e,t,n,r)},e.getStaticConfig=function(e){return b.getStaticConfig(e)},e.listRunning=function(e){return b.listRunning(e)},e.shutdown=function(e,t){return b.shutdown(e,t)},e.shutdownAll=function(e){return b.shutdownAll(e)},e.getUrl=function(e,t){return b.getUrl(e,t)}}(g||(g={}));class b{constructor(e,t,n,r,o,a={}){this._isDisposed=!1,this._terminated=new l.Signal(this),this._name=e,this._logdir=t,this._lastReload=n,this._reloadInterval=r,this._enableMultiLog=Boolean(o),this.serverSettings=a.serverSettings||m.ServerConnection.makeSettings(),this._url=p.getTensorboardInstanceUrl(this.serverSettings.baseUrl,this._name)}get name(){return this._name}get model(){return{name:this._name,logdir:this._logdir,reload_time:this._lastReload,reload_interval:this._reloadInterval||0,enable_multi_log:this._enableMultiLog||!1}}get terminated(){return this._terminated}get isDisposed(){return this._isDisposed}dispose(){this._isDisposed||(this.terminated.emit(void 0),this._isDisposed=!0,delete p.running[this._url],l.Signal.clearData(this))}shutdown(){const{name:e,serverSettings:t}=this;return b.shutdown(e,t)}}!function(e){function t(e){e=e||m.ServerConnection.makeSettings();const t=p.getServiceUrl(e.baseUrl),n=p.getTensorboardInstanceRootUrl(e.baseUrl);return m.ServerConnection.makeRequest(t,{},e).then((e=>{if(200!==e.status)throw new m.ServerConnection.ResponseError(e);return e.json()})).then((e=>{if(!Array.isArray(e))throw new Error("Invalid tensorboard data");const t=(0,i.toArray)((0,i.map)(e,(e=>c.URLExt.join(n,e.name))));return(0,i.each)(Object.keys(p.running),(e=>{-1===t.indexOf(e)&&p.running[e].dispose()})),e}))}function n(e,t){t=t||m.ServerConnection.makeSettings();const n=p.getTensorboardUrl(t.baseUrl,e);return m.ServerConnection.makeRequest(n,{method:"DELETE"},t).then((e=>{if(404===e.status)return e.json().then((e=>{p.killTensorboard(n)}));if(204!==e.status)throw new m.ServerConnection.ResponseError(e);p.killTensorboard(n)}))}e.startNew=function(t,n,r,o={}){const a=o.serverSettings||m.ServerConnection.makeSettings(),s=p.getServiceUrl(a.baseUrl),i={method:"POST",headers:new Headers({"Content-Type":"application/json"}),body:JSON.stringify({logdir:t,reload_interval:n,enable_multi_log:r})};return m.ServerConnection.makeRequest(s,i,a).then((e=>{if(200!==e.status)throw new m.ServerConnection.ResponseError(e);return e.json()})).then((t=>{const n=t.name,r=t.logdir,s=t.reload_time,i=t.reload_interval,l=t.enable_multi_log;return new e(n,r,s,i,l,Object.assign(Object.assign({},o),{serverSettings:a}))}))},e.getStaticConfig=function(e){const t=p.getTensorboardStaticConfigUrl(e.baseUrl);return m.ServerConnection.makeRequest(t,{},e).then((e=>{if(200!==e.status)throw new m.ServerConnection.ResponseError(e);return e.json()})).then((e=>e))},e.listRunning=t,e.shutdown=n,e.shutdownAll=function(e){return t(e=e||m.ServerConnection.makeSettings()).then((t=>{(0,i.each)(t,(t=>{n(t.name,e)}))}))},e.getUrl=function(e,t){return t=t||m.ServerConnection.makeSettings(),p.getTensorboardInstanceUrl(t.baseUrl,e)}}(b||(b={})),function(e){e.running=Object.create(null),e.getTensorboardUrl=function(e,t){return c.URLExt.join(e,u,t)},e.getTensorboardStaticConfigUrl=function(e){return c.URLExt.join(e,"api/tensorboard_pro_static_config")},e.getServiceUrl=function(e){return c.URLExt.join(e,u)},e.killTensorboard=function(t){e.running[t]&&e.running[t].dispose()},e.getTensorboardInstanceRootUrl=function(e){return c.URLExt.join(e,h)},e.getTensorboardInstanceUrl=function(e,t){return c.URLExt.join(e,h,t)}}(p||(p={}));class f{constructor(e={}){this._models=[],this._tensorboards=new Set,this._isDisposed=!1,this._isReady=!1,this._refreshTimer=-1,this._runningChanged=new l.Signal(this),this._statusConfig=null,this.serverSettings=e.serverSettings||m.ServerConnection.makeSettings(),this._readyPromise=this._refreshRunning(),this._refreshTimer=setInterval((()=>{"undefined"!=typeof document&&document.hidden||this._refreshRunning()}),1e4),this.getStaticConfigPromise=this._getStaticConfig()}get runningChanged(){return this._runningChanged}get isDisposed(){return this._isDisposed}dispose(){this.isDisposed||(this._isDisposed=!0,clearInterval(this._refreshTimer),l.Signal.clearData(this),this._models=[])}get isReady(){return this._isReady}get ready(){return this._readyPromise}running(){return(0,i.iter)(this._models)}formatDir(e){var t;const n=null===(t=this._statusConfig)||void 0===t?void 0:t.notebook_dir;if(e.includes(","))return e.split(",").map((e=>e.includes(":")?`${e.split(":")[0]}:${this.formatDir(e.split(":")[1])}`:this.formatDir(e))).join(",");if(n&&0===e.indexOf(n)){let t=e.replace(n,"");""===t&&(t="/");return`${t}`.replace(/^\//,"")||"<workspace_root>"}return e}startNew(e,t=120,n=!1,r){return g.startNew(e,t,n,this._getOptions(r)).then((e=>(this._onStarted(e),e)))}async shutdown(e){const t=i.ArrayExt.findFirstIndex(this._models,(t=>t.name===e));if(-1!==t)return this._models.splice(t,1),this._runningChanged.emit(this._models.slice()),g.shutdown(e,this.serverSettings).then((()=>{const t=[];this._tensorboards.forEach((n=>{n.name===e&&(n.dispose(),t.push(n))})),t.forEach((e=>{this._tensorboards.delete(e)}))}))}shutdownAll(){const e=this._models;return e.length>0&&(this._models=[],this._runningChanged.emit([])),this._refreshRunning().then((()=>Promise.all(e.map((e=>g.shutdown(e.name,this.serverSettings).then((()=>{const e=[];this._tensorboards.forEach((t=>{t.dispose(),e.push(t)})),e.forEach((e=>{this._tensorboards.delete(e)}))}))))).then((()=>{}))))}refreshRunning(){return this._refreshRunning()}_onTerminated(e){const t=i.ArrayExt.findFirstIndex(this._models,(t=>t.name===e));-1!==t&&(this._models.splice(t,1),this._runningChanged.emit(this._models.slice()))}_onStarted(e){const t=e.name;this._tensorboards.add(e),-1===i.ArrayExt.findFirstIndex(this._models,(e=>e.name===t))&&(this._models.push(e.model),this._runningChanged.emit(this._models.slice())),e.terminated.connect((()=>{this._onTerminated(t)}))}_refreshRunning(){return g.listRunning(this.serverSettings).then((e=>{if(this._isReady=!0,!d.JSONExt.deepEqual(e,this._models)){const t=e.map((e=>e.name)),n=[];this._tensorboards.forEach((e=>{-1===t.indexOf(e.name)&&(e.dispose(),n.push(e))})),n.forEach((e=>{this._tensorboards.delete(e)})),this._models=e.slice(),this._runningChanged.emit(e)}}))}_getStaticConfig(){return g.getStaticConfig(this.serverSettings).then((e=>{this._statusConfig=e}))}_getOptions(e={}){return Object.assign(Object.assign({},e),{serverSettings:this.serverSettings})}}var v,w=n(5645),_=n(8912),E=n(6271),N=n.n(E);!function(e){e.createNew="tensorboard:create-new",e.inputDirect="tensorboard:choose-direct",e.open="tensorboard:open",e.openDoc="tensorboard:openDoc",e.close="tensorboard:close"}(v||(v={}));var y=n(9848),C=n(294),S=n(1508),D=n(312),T=n(7673),k=n(2184),R=n.n(k),x=n(9252);const M=e=>N().createElement("div",{className:"tensorboard-loading-container"},N().createElement("div",{className:"lds-ring"},N().createElement("div",null),N().createElement("div",null),N().createElement("div",null),N().createElement("div",null)),e.title&&N().createElement("p",{className:"title"},e.title),e.desc&&N().createElement("p",{className:"desc"},e.desc)),B=e=>{const[t,n]=(0,E.useState)(e.getCWD()),[r,o]=(0,E.useState)(120),[a,s]=(0,E.useState)(!1),[i,l]=(0,E.useState)(!1);return N().createElement("div",{className:"tensorboard-ng-creator"},N().createElement("div",{className:"tensorboard-ng-config"},N().createElement("div",{className:"input-container tensorboard-ng-logdir"},N().createElement("label",{title:"Path relative to workspace, don\\'t start with `/`"},N().createElement("strong",null,"Log Dir")),N().createElement(S.B,{style:{width:160},small:!0,placeholder:"Enter your log dir...",value:t,onChange:e=>{n(e.target.value),e.target.value.includes(",")&&l(!0)}})),N().createElement("div",{className:"input-container tensorboard-ng-logdir"},N().createElement(D.rs,{className:"multi-log-switch",checked:i,onChange:()=>{l(!i)},labelElement:N().createElement("strong",{title:"Use `--logdir_spec` instead of `--logdir` to support multi log dirs, This flag is discouraged and can usually be avoided. for finer-grained control, prefer using a symlink tree. Some features may not work when using `--logdir_spec` instead of `--logdir`"},"Multi LogDir")}),N().createElement(D.rs,{className:"interval-switch",checked:a,onChange:()=>{s(!a)},labelElement:N().createElement("strong",{title:"Setting reload interval may cause additional burden on the jupyter backend"},"Reload Interval")}),a&&N().createElement(S.B,{style:{width:80},small:!0,placeholder:"Enter your reload_interval ...",value:a?`${r}`:"",onChange:e=>{o(Number(e.target.value))},rightElement:N().createElement(T.V,{minimal:!0},"s"),type:"number"}))),N().createElement("div",{className:"tensorboard-ng-ops create"},N().createElement(y.z,{small:!0,intent:"warning",className:"tensorboard-ng-op-btn",onClick:()=>{e.startTensorBoard(t,a?r:0,i)},disabled:e.disable},"Create TensorBoard")),N().createElement("div",{className:"tensorboard-ng-expand"}),N().createElement(y.z,{small:!0,outlined:!0,icon:"help",onClick:()=>{e.openDoc()}},"Document"))},I=x.P.ofType(),U=e=>{const[t,n]=(0,E.useState)(e),r=(0,E.useRef)(t);return[t,r,e=>{n(e),r.current=e}]},j=e=>{const[t,n,o]=U(!1),[a,s,l]=U(!1),[d,c,m]=U(!1),[u,h]=(0,E.useState)(!1),[p,b]=(0,E.useState)(!1),[f,v]=(0,E.useState)(null),w=(0,E.useRef)(f),_=t=>{e.updateCurrentModel(t),v(t),w.current=t},[S,D]=(0,E.useState)([]),[T,k]=(0,E.useState)(!1),x=d||a,j=()=>{s.current||c.current||e.tensorboardManager.refreshRunning().then((()=>{const t=[...(0,i.toArray)(e.tensorboardManager.running())],r=[];for(const e of t)r.push(e);if(D(r),n.current)return void(w.current&&(r.find((e=>e.name===w.current.name))||k(!0)));const a=e.createdModelName?r.find((t=>t.name===e.createdModelName)):null;a?(_(a),b(!0),e.setWidgetName&&e.setWidgetName(`${a.name}:`+e.tensorboardManager.formatDir(a.logdir))):(h(!0),b(!1)),o(!0)}))},W=t=>{const n=e.tensorboardManager.formatDir(t.logdir);return`${t.name} - ${n}`};return(0,E.useEffect)((()=>{j();const e=setInterval(j,3e4);return()=>{clearInterval(e)}}),[]),N().createElement("div",{className:"tensorboard-ng-main"},t&&N().createElement("div",{className:R()("tensorboard-ng-control-layout",{"hide-one":!(u&&p)})},N().createElement("div",{className:R()("tensorboard-ng-control-row",{hide:!p})},N().createElement("div",{className:"tensorboard-ng-config"},N().createElement("div",{className:"input-container tensorboard-ng-logdir"},N().createElement(y.z,{className:"refresh-dir-btn",small:!0,icon:"refresh",disabled:x,onClick:j}),N().createElement(I,{className:"tb-ng-model-selector",popoverProps:{minimal:!0},itemRenderer:(e,{handleClick:t})=>N().createElement(C.s,{key:e.name,onClick:t,text:W(e)}),items:S,onItemSelect:t=>(t=>{(null==f?void 0:f.name)!==t.name&&(e.setWidgetName&&e.setWidgetName(`${t.name}:`+e.tensorboardManager.formatDir(t.logdir)),v(t))})(t),filterable:!1,activeItem:f,disabled:x},N().createElement(y.z,{title:f?W(f):"NONE",className:"selector-active-btn",rightIcon:"caret-down",text:N().createElement("span",{className:"active-btn-text"},f?W(f):"NONE"),small:!0})),N().createElement(y.z,{className:"refresh-dir-btn",small:!0,icon:"document-open",disabled:x,onClick:()=>{f&&window.open(g.getUrl(f.name))}}),f&&f.enable_multi_log&&N().createElement("p",{className:"multi-log-tip"},"Multi LogDir"),f&&N().createElement("p",{className:"reload-tip"},"reload interval(s): ",(null==f?void 0:f.reload_interval)||"Never"))),N().createElement("div",{className:"tensorboard-ng-expand"}),N().createElement("div",{className:"tensorboard-ng-ops"},N().createElement(y.z,{small:!0,intent:"primary",className:"tensorboard-ng-op-btn",onClick:()=>{if(!f)return;m(!0),_(null);const t="number"==typeof f.reload_interval?f.reload_interval:120,n=f.logdir,o=f.enable_multi_log,a=t=>{(0,r.showDialog)({title:"TensorBoard Reload Error",body:"The panel has been closed, you can reopen to create new",buttons:[r.Dialog.okButton()]}),e.closeWidget()};try{e.tensorboardManager.shutdown(f.name).then((r=>{e.tensorboardManager.startNew(n,t,o).then((e=>{j(),m(!1),_(f)})).catch((e=>{a()}))})).catch((e=>{a()}))}catch(e){a()}},disabled:x},"Reload"),N().createElement(y.z,{small:!0,intent:"danger",disabled:x,className:"tensorboard-ng-op-btn",onClick:()=>{f&&e.tensorboardManager.shutdown(f.name).then((t=>{e.closeWidget()}))},title:"Destroy current tensorboard, sidebar `running terminals and kernels` supports destroy all"},"Destroy"),N().createElement(y.z,{small:!0,intent:"none",disabled:x,className:"tensorboard-ng-op-btn",onClick:()=>{f&&e.openTensorBoard(f.name,!0)}},"Duplicate"),N().createElement(y.z,{small:!0,intent:"none",disabled:x,className:"tensorboard-ng-op-btn",onClick:()=>{h(!u)},active:u},"New.."))),N().createElement("div",{className:R()("tensorboard-ng-control-row creator",{hide:!u})},N().createElement(B,{disable:x,getCWD:e.getCWD,startTensorBoard:(t,n,o)=>{if(Number.isNaN(n)||n<0)return(0,r.showDialog)({title:"Param Check Failed",body:"reloadInterval should > 0 when enabled",buttons:[r.Dialog.okButton()]});l(!0);const a=null==f?void 0:f.name;e.startNew(t,n,o).then((t=>{a===t.model.name&&(0,r.showDialog)({body:"Existing tensorBoard for the logDir will be reused directly",buttons:[r.Dialog.okButton()]}),e.setWidgetName&&e.setWidgetName(`${t.model.name}:`+e.tensorboardManager.formatDir(t.model.logdir)),_(t.model),l(!1),j(),b(!0),h(!1)})).catch((e=>{(0,r.showDialog)({body:"Start TensorBoard internal error",buttons:[r.Dialog.okButton()]})}))},openDoc:e.openDoc}),N().createElement("div",{className:"tensorboard-ng-expand"}))),N().createElement("div",{className:"tensorboard-ng-iframe-container"},f&&N().createElement("iframe",{sandbox:"allow-scripts allow-forms allow-same-origin",referrerPolicy:"no-referrer",className:"tensorboard-ng-iframe",src:g.getUrl(f.name)}),!f&&N().createElement("div",{className:"tensorboard-ng-iframe-tip"},t?a?N().createElement(M,{title:"TensorBoard is initializing",desc:"This stage may take a long time (the more content in the directory, the longer it will be)"}):d?N().createElement(M,{title:"TensorBoard is reloading",desc:"This stage may take a long time (the more content in the directory, the longer it will be)"}):N().createElement("div",{className:"common-tip"},N().createElement("p",{className:"title"},"No instance for current directory yet, please create a new TensorBoard"),N().createElement("p",{className:"desc"},N().createElement("i",null,"If the selected log directory has too much content, tensorboard initialization may take a long time, during which jupyter will get stuck"))):N().createElement(M,{title:"initializing"})),T&&N().createElement("div",{className:"tensorboard-ng-iframe-tip"},N().createElement("p",{className:"error"},"Current Tensorboard is not active. Please select others or create a new one."))))};class W extends r.ReactWidget{constructor(e){super(),this.currentTensorBoardModel=null,this.closeCurrent=()=>{this.dispose(),this.close()},this.updateCurrentModel=e=>{this.currentTensorBoardModel=e,this.currentLogDir=(null==e?void 0:e.logdir)||""},this.getCWD=()=>this.browserFactory.defaultBrowser.model.path,this.openTensorBoard=(e,t)=>{this.app.commands.execute(v.open,{modelName:e,copy:t})},this.openDoc=()=>{this.app.commands.execute(v.openDoc)},this.startNew=(e,t,n,r)=>(this.currentLogDir=e,this.tensorboardManager.startNew(e,t,n,r)),this.setWidgetName=e=>{this.title.label=e||"Tensorboard",this.title.caption=`Name: ${this.title.label}`},this.browserFactory=e.browserFactory,this.tensorboardManager=e.tensorboardManager,this.createdModelName=e.createdModelName,this.app=e.app,this.createdModelName||(this.currentLogDir=this.getCWD()),this.addClass("tensorboard-ng-widget"),this.addClass("jp-Tensorboard"),this.title.icon="jp-Tensorboards-itemIcon",this.title.closable=!0,this.title.label="Tensorboard",this.title.caption=`Name: ${this.title.label}`}dispose(){super.dispose()}onCloseRequest(e){super.onCloseRequest(e),this.dispose()}render(){return N().createElement(j,{setWidgetName:this.setWidgetName,update:this.update.bind(this),updateCurrentModel:this.updateCurrentModel,tensorboardManager:this.tensorboardManager,startNew:this.startNew,getCWD:this.getCWD,openTensorBoard:this.openTensorBoard,closeWidget:this.closeCurrent,openDoc:this.openDoc,createdModelName:this.createdModelName})}}const z=new _.LabIcon({name:"jupyterlab-tensorboard-p:tensorboard",svgstr:'<?xml version="1.0" encoding="UTF-8" standalone="no"?>\r\n<svg\r\n   xmlns:dc="http://purl.org/dc/elements/1.1/"\r\n   xmlns:cc="http://creativecommons.org/ns#"\r\n   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"\r\n   xmlns:svg="http://www.w3.org/2000/svg"\r\n   xmlns="http://www.w3.org/2000/svg"\r\n   id="svg8"\r\n   version="1.1"\r\n   viewBox="0 0 30.31081 32.499828"\r\n   height="122.83399"\r\n   width="114.56054">\r\n  <defs\r\n     id="defs2" />\r\n  <metadata\r\n     id="metadata5">\r\n    <rdf:RDF>\r\n      <cc:Work\r\n         rdf:about="">\r\n        <dc:format>image/svg+xml</dc:format>\r\n        <dc:type\r\n           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />\r\n        <dc:title></dc:title>\r\n      </cc:Work>\r\n    </rdf:RDF>\r\n  </metadata>\r\n  <g\r\n     transform="translate(-77.942529,-177.00005)"\r\n     id="layer1">\r\n    <g\r\n       id="g4550">\r\n      <path\r\n         style="fill:#e55b2d;fill-opacity:1"\r\n         d="m 360.04883,687.87305 v 18.89843 l 32.73047,18.89844 v -18.89844 z m -65.46289,18.89843 v 18.89844 l 16.36523,9.44727 V 716.2207 Z m 49.0957,9.44922 -16.36523,9.44922 v 56.69141 l 16.36523,9.44922 v -37.79493 l 16.36719,9.44922 v -18.89843 l -16.36719,-9.44922 z"\r\n         transform="scale(0.26458333)"\r\n         id="path4508" />\r\n      <path\r\n         style="fill:#ed8e24;fill-opacity:1"\r\n         d="m 360.04883,687.87305 -49.09766,28.34765 v 18.89649 l 32.73047,-18.89649 v 18.89649 l 16.36719,-9.44727 z m 49.09765,9.44922 -16.36718,9.44921 v 18.89844 l 16.36718,-9.44922 z m -32.73242,37.79492 -16.36523,9.44922 v 18.89843 l 16.36523,-9.44922 z m -16.36523,28.34765 -16.36719,-9.44922 v 37.79493 l 16.36719,-9.44922 z"\r\n         transform="scale(0.26458333)"\r\n         id="path4491" />\r\n      <path\r\n         style="fill:#f8bf3c;fill-opacity:1"\r\n         d="m 360.04883,668.97656 -65.46289,37.79492 16.36523,9.44922 49.09766,-28.34765 32.73047,18.89843 16.36718,-9.44921 z m 0,56.69336 -16.36719,9.44727 16.36719,9.44922 16.36523,-9.44922 z"\r\n         transform="scale(0.26458333)"\r\n         id="path4506" />\r\n    </g>\r\n  </g>\r\n</svg>\r\n'}),L={id:"tensorboard",requires:[r.ICommandPalette,s.IFileBrowserFactory],optional:[o.ILauncher,a.IMainMenu,w.IRunningSessionManagers],autoStart:!0,activate:async function(e,t,n,o,a,s){const l=new f,d=new r.WidgetTracker({namespace:"tensorboard"});return O(e,l,d,n,o,a),s&&await function(e,t,n){class r{constructor(e,t){this._model=e,this.manager=t}open(){t.commands.execute(v.open,{modelName:this._model.name})}icon(){return z}label(){return`${this._model.name}:${this.manager.formatDir(this._model.logdir)}`}shutdown(){return t.commands.execute(v.close,{tb:this._model}),n.shutdown(this._model.name)}}return n.getStaticConfigPromise.then((()=>{e.add({name:"Tensorboard",running:()=>(0,i.toArray)(n.running()).map((e=>new r(e,n))),shutdownAll:()=>n.shutdownAll(),refreshRunning:()=>n.refreshRunning(),runningChanged:n.runningChanged})}))}(s,e,l),t.addItem({command:v.inputDirect,category:"Tensorboard"}),d}};function O(e,t,n,o,a,s){const{commands:l,serviceManager:d}=e;l.addCommand(v.open,{execute:a=>{let s=a.modelName;const l=a.copy,d=o.defaultBrowser.model.path;let c=null;if(s?l||(c=n.find((e=>{var t;return(null===(t=e.content.currentTensorBoardModel)||void 0===t?void 0:t.name)===s}))):c=n.find((e=>t.formatDir(e.content.currentLogDir||"")===t.formatDir(d))),c)return e.shell.activateById(c.id),c;{if(!s){const e=[...(0,i.toArray)(t.running())];for(const n of e)t.formatDir(n.logdir)===t.formatDir(d)&&(s=n.name)}const a=new W({browserFactory:o,tensorboardManager:t,app:e,createdModelName:s}),c=new r.MainAreaWidget({content:a});return n.add(c),e.shell.add(c,"main",{mode:l?"split-right":void 0}),e.shell.activateById(c.id),c}}}),l.addCommand(v.openDoc,{execute:e=>{window.open("https://github.com/HFAiLab/jupyterlab_tensorboard_pro")}}),l.addCommand(v.close,{execute:e=>{const t=e.tb;n.forEach((e=>{e.content.currentTensorBoardModel&&e.content.currentTensorBoardModel.name===t.name&&(e.dispose(),e.close())}))}}),l.addCommand(v.inputDirect,{label:()=>"Open TensorBoard",execute:t=>e.commands.execute(v.open)}),l.addCommand(v.createNew,{label:e=>e.isPalette?"New TensorBoard":"TensorBoard",caption:"Start a new tensorboard",icon:e=>e.isPalette?void 0:z,execute:t=>{const n=t.cwd||o.defaultBrowser.model.path,a=void 0===t.logdir?n:t.logdir;return d.contents.get(a,{type:"directory"}).then((t=>{try{e.shell.activateById("jp-running-sessions")}catch(e){}e.commands.execute(v.open)}),(()=>(0,r.showDialog)({title:"Cannot create tensorboard.",body:"Directory not found",buttons:[r.Dialog.okButton()]})))}}),a&&a.add({command:v.createNew,category:"Other",rank:2}),s&&s.fileMenu.newMenu.addGroup([{command:v.createNew}],30)}}}]);