# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetBgpGracefulRestartResult',
    'AwaitableGetBgpGracefulRestartResult',
    'get_bgp_graceful_restart',
    'get_bgp_graceful_restart_output',
]

@pulumi.output_type
class GetBgpGracefulRestartResult:
    """
    A collection of values returned by getBgpGracefulRestart.
    """
    def __init__(__self__, asn=None, device=None, id=None, restart_interval=None, stale_interval=None, vrf=None):
        if asn and not isinstance(asn, str):
            raise TypeError("Expected argument 'asn' to be a str")
        pulumi.set(__self__, "asn", asn)
        if device and not isinstance(device, str):
            raise TypeError("Expected argument 'device' to be a str")
        pulumi.set(__self__, "device", device)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if restart_interval and not isinstance(restart_interval, int):
            raise TypeError("Expected argument 'restart_interval' to be a int")
        pulumi.set(__self__, "restart_interval", restart_interval)
        if stale_interval and not isinstance(stale_interval, int):
            raise TypeError("Expected argument 'stale_interval' to be a int")
        pulumi.set(__self__, "stale_interval", stale_interval)
        if vrf and not isinstance(vrf, str):
            raise TypeError("Expected argument 'vrf' to be a str")
        pulumi.set(__self__, "vrf", vrf)

    @property
    @pulumi.getter
    def asn(self) -> str:
        """
        Autonomous system number.
        """
        return pulumi.get(self, "asn")

    @property
    @pulumi.getter
    def device(self) -> Optional[str]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The distinguished name of the object.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="restartInterval")
    def restart_interval(self) -> int:
        """
        The graceful restart interval.
        """
        return pulumi.get(self, "restart_interval")

    @property
    @pulumi.getter(name="staleInterval")
    def stale_interval(self) -> int:
        """
        The stale interval for routes advertised by the BGP peer.
        """
        return pulumi.get(self, "stale_interval")

    @property
    @pulumi.getter
    def vrf(self) -> str:
        """
        VRF name.
        """
        return pulumi.get(self, "vrf")


class AwaitableGetBgpGracefulRestartResult(GetBgpGracefulRestartResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBgpGracefulRestartResult(
            asn=self.asn,
            device=self.device,
            id=self.id,
            restart_interval=self.restart_interval,
            stale_interval=self.stale_interval,
            vrf=self.vrf)


def get_bgp_graceful_restart(asn: Optional[str] = None,
                             device: Optional[str] = None,
                             vrf: Optional[str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetBgpGracefulRestartResult:
    """
    This data source can read the BGP domain (VRF) graceful restart configuration.

    - API Documentation: [bgpGr](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:Gr/)

    ## Example Usage

    ```python
    import pulumi
    import pulumi_nxos as nxos

    example = nxos.get_bgp_graceful_restart(asn="65001",
        vrf="default")
    ```


    :param str asn: Autonomous system number.
    :param str device: A device name from the provider configuration.
    :param str vrf: VRF name.
    """
    __args__ = dict()
    __args__['asn'] = asn
    __args__['device'] = device
    __args__['vrf'] = vrf
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('nxos:index/getBgpGracefulRestart:getBgpGracefulRestart', __args__, opts=opts, typ=GetBgpGracefulRestartResult).value

    return AwaitableGetBgpGracefulRestartResult(
        asn=pulumi.get(__ret__, 'asn'),
        device=pulumi.get(__ret__, 'device'),
        id=pulumi.get(__ret__, 'id'),
        restart_interval=pulumi.get(__ret__, 'restart_interval'),
        stale_interval=pulumi.get(__ret__, 'stale_interval'),
        vrf=pulumi.get(__ret__, 'vrf'))


@_utilities.lift_output_func(get_bgp_graceful_restart)
def get_bgp_graceful_restart_output(asn: Optional[pulumi.Input[str]] = None,
                                    device: Optional[pulumi.Input[Optional[str]]] = None,
                                    vrf: Optional[pulumi.Input[str]] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetBgpGracefulRestartResult]:
    """
    This data source can read the BGP domain (VRF) graceful restart configuration.

    - API Documentation: [bgpGr](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:Gr/)

    ## Example Usage

    ```python
    import pulumi
    import pulumi_nxos as nxos

    example = nxos.get_bgp_graceful_restart(asn="65001",
        vrf="default")
    ```


    :param str asn: Autonomous system number.
    :param str device: A device name from the provider configuration.
    :param str vrf: VRF name.
    """
    ...
