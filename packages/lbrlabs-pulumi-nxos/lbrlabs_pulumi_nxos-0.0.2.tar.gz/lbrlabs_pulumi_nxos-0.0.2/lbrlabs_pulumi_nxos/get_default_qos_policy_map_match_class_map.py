# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetDefaultQosPolicyMapMatchClassMapResult',
    'AwaitableGetDefaultQosPolicyMapMatchClassMapResult',
    'get_default_qos_policy_map_match_class_map',
    'get_default_qos_policy_map_match_class_map_output',
]

@pulumi.output_type
class GetDefaultQosPolicyMapMatchClassMapResult:
    """
    A collection of values returned by getDefaultQosPolicyMapMatchClassMap.
    """
    def __init__(__self__, device=None, id=None, name=None, policy_map_name=None):
        if device and not isinstance(device, str):
            raise TypeError("Expected argument 'device' to be a str")
        pulumi.set(__self__, "device", device)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if policy_map_name and not isinstance(policy_map_name, str):
            raise TypeError("Expected argument 'policy_map_name' to be a str")
        pulumi.set(__self__, "policy_map_name", policy_map_name)

    @property
    @pulumi.getter
    def device(self) -> Optional[str]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The distinguished name of the object.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Class map name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="policyMapName")
    def policy_map_name(self) -> str:
        """
        Policy map name.
        """
        return pulumi.get(self, "policy_map_name")


class AwaitableGetDefaultQosPolicyMapMatchClassMapResult(GetDefaultQosPolicyMapMatchClassMapResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDefaultQosPolicyMapMatchClassMapResult(
            device=self.device,
            id=self.id,
            name=self.name,
            policy_map_name=self.policy_map_name)


def get_default_qos_policy_map_match_class_map(device: Optional[str] = None,
                                               name: Optional[str] = None,
                                               policy_map_name: Optional[str] = None,
                                               opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDefaultQosPolicyMapMatchClassMapResult:
    """
    This data source can read the default QoS policy map match class map configuration.

    - API Documentation: [ipqosMatchCMap](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:MatchCMap/)

    ## Example Usage

    ```python
    import pulumi
    import pulumi_nxos as nxos

    example = nxos.get_default_qos_policy_map_match_class_map(name="Voice",
        policy_map_name="PM1")
    ```


    :param str device: A device name from the provider configuration.
    :param str name: Class map name.
    :param str policy_map_name: Policy map name.
    """
    __args__ = dict()
    __args__['device'] = device
    __args__['name'] = name
    __args__['policyMapName'] = policy_map_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('nxos:index/getDefaultQosPolicyMapMatchClassMap:getDefaultQosPolicyMapMatchClassMap', __args__, opts=opts, typ=GetDefaultQosPolicyMapMatchClassMapResult).value

    return AwaitableGetDefaultQosPolicyMapMatchClassMapResult(
        device=pulumi.get(__ret__, 'device'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        policy_map_name=pulumi.get(__ret__, 'policy_map_name'))


@_utilities.lift_output_func(get_default_qos_policy_map_match_class_map)
def get_default_qos_policy_map_match_class_map_output(device: Optional[pulumi.Input[Optional[str]]] = None,
                                                      name: Optional[pulumi.Input[str]] = None,
                                                      policy_map_name: Optional[pulumi.Input[str]] = None,
                                                      opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetDefaultQosPolicyMapMatchClassMapResult]:
    """
    This data source can read the default QoS policy map match class map configuration.

    - API Documentation: [ipqosMatchCMap](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Qos/ipqos:MatchCMap/)

    ## Example Usage

    ```python
    import pulumi
    import pulumi_nxos as nxos

    example = nxos.get_default_qos_policy_map_match_class_map(name="Voice",
        policy_map_name="PM1")
    ```


    :param str device: A device name from the provider configuration.
    :param str name: Class map name.
    :param str policy_map_name: Policy map name.
    """
    ...
