# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetPimStaticRpResult',
    'AwaitableGetPimStaticRpResult',
    'get_pim_static_rp',
    'get_pim_static_rp_output',
]

@pulumi.output_type
class GetPimStaticRpResult:
    """
    A collection of values returned by getPimStaticRp.
    """
    def __init__(__self__, address=None, device=None, id=None, vrf_name=None):
        if address and not isinstance(address, str):
            raise TypeError("Expected argument 'address' to be a str")
        pulumi.set(__self__, "address", address)
        if device and not isinstance(device, str):
            raise TypeError("Expected argument 'device' to be a str")
        pulumi.set(__self__, "device", device)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if vrf_name and not isinstance(vrf_name, str):
            raise TypeError("Expected argument 'vrf_name' to be a str")
        pulumi.set(__self__, "vrf_name", vrf_name)

    @property
    @pulumi.getter
    def address(self) -> str:
        """
        Address.
        """
        return pulumi.get(self, "address")

    @property
    @pulumi.getter
    def device(self) -> Optional[str]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The distinguished name of the object.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="vrfName")
    def vrf_name(self) -> str:
        """
        VRF name.
        """
        return pulumi.get(self, "vrf_name")


class AwaitableGetPimStaticRpResult(GetPimStaticRpResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPimStaticRpResult(
            address=self.address,
            device=self.device,
            id=self.id,
            vrf_name=self.vrf_name)


def get_pim_static_rp(address: Optional[str] = None,
                      device: Optional[str] = None,
                      vrf_name: Optional[str] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPimStaticRpResult:
    """
    This data source can read the PIM Static RP configuration.

    - API Documentation: [pimStaticRP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:StaticRP/)

    ## Example Usage

    ```python
    import pulumi
    import pulumi_nxos as nxos

    example = nxos.get_pim_static_rp(address="1.2.3.4",
        vrf_name="default")
    ```


    :param str address: Address.
    :param str device: A device name from the provider configuration.
    :param str vrf_name: VRF name.
    """
    __args__ = dict()
    __args__['address'] = address
    __args__['device'] = device
    __args__['vrfName'] = vrf_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('nxos:index/getPimStaticRp:getPimStaticRp', __args__, opts=opts, typ=GetPimStaticRpResult).value

    return AwaitableGetPimStaticRpResult(
        address=pulumi.get(__ret__, 'address'),
        device=pulumi.get(__ret__, 'device'),
        id=pulumi.get(__ret__, 'id'),
        vrf_name=pulumi.get(__ret__, 'vrf_name'))


@_utilities.lift_output_func(get_pim_static_rp)
def get_pim_static_rp_output(address: Optional[pulumi.Input[str]] = None,
                             device: Optional[pulumi.Input[Optional[str]]] = None,
                             vrf_name: Optional[pulumi.Input[str]] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetPimStaticRpResult]:
    """
    This data source can read the PIM Static RP configuration.

    - API Documentation: [pimStaticRP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:StaticRP/)

    ## Example Usage

    ```python
    import pulumi
    import pulumi_nxos as nxos

    example = nxos.get_pim_static_rp(address="1.2.3.4",
        vrf_name="default")
    ```


    :param str address: Address.
    :param str device: A device name from the provider configuration.
    :param str vrf_name: VRF name.
    """
    ...
