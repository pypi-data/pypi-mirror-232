# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetBgpPeerResult',
    'AwaitableGetBgpPeerResult',
    'get_bgp_peer',
    'get_bgp_peer_output',
]

@pulumi.output_type
class GetBgpPeerResult:
    """
    A collection of values returned by getBgpPeer.
    """
    def __init__(__self__, address=None, asn=None, description=None, device=None, hold_time=None, id=None, keepalive=None, peer_template=None, peer_type=None, remote_asn=None, source_interface=None, vrf=None):
        if address and not isinstance(address, str):
            raise TypeError("Expected argument 'address' to be a str")
        pulumi.set(__self__, "address", address)
        if asn and not isinstance(asn, str):
            raise TypeError("Expected argument 'asn' to be a str")
        pulumi.set(__self__, "asn", asn)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if device and not isinstance(device, str):
            raise TypeError("Expected argument 'device' to be a str")
        pulumi.set(__self__, "device", device)
        if hold_time and not isinstance(hold_time, int):
            raise TypeError("Expected argument 'hold_time' to be a int")
        pulumi.set(__self__, "hold_time", hold_time)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if keepalive and not isinstance(keepalive, int):
            raise TypeError("Expected argument 'keepalive' to be a int")
        pulumi.set(__self__, "keepalive", keepalive)
        if peer_template and not isinstance(peer_template, str):
            raise TypeError("Expected argument 'peer_template' to be a str")
        pulumi.set(__self__, "peer_template", peer_template)
        if peer_type and not isinstance(peer_type, str):
            raise TypeError("Expected argument 'peer_type' to be a str")
        pulumi.set(__self__, "peer_type", peer_type)
        if remote_asn and not isinstance(remote_asn, str):
            raise TypeError("Expected argument 'remote_asn' to be a str")
        pulumi.set(__self__, "remote_asn", remote_asn)
        if source_interface and not isinstance(source_interface, str):
            raise TypeError("Expected argument 'source_interface' to be a str")
        pulumi.set(__self__, "source_interface", source_interface)
        if vrf and not isinstance(vrf, str):
            raise TypeError("Expected argument 'vrf' to be a str")
        pulumi.set(__self__, "vrf", vrf)

    @property
    @pulumi.getter
    def address(self) -> str:
        """
        Peer address.
        """
        return pulumi.get(self, "address")

    @property
    @pulumi.getter
    def asn(self) -> str:
        """
        Autonomous system number.
        """
        return pulumi.get(self, "asn")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        Peer description.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def device(self) -> Optional[str]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @property
    @pulumi.getter(name="holdTime")
    def hold_time(self) -> int:
        """
        BGP Hold Timer in seconds. The value must be greater than the keepalive timer
        """
        return pulumi.get(self, "hold_time")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The distinguished name of the object.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def keepalive(self) -> int:
        """
        BGP Keepalive Timer in seconds
        """
        return pulumi.get(self, "keepalive")

    @property
    @pulumi.getter(name="peerTemplate")
    def peer_template(self) -> str:
        """
        Peer template name.
        """
        return pulumi.get(self, "peer_template")

    @property
    @pulumi.getter(name="peerType")
    def peer_type(self) -> str:
        """
        Neighbor Fabric Type.
        """
        return pulumi.get(self, "peer_type")

    @property
    @pulumi.getter(name="remoteAsn")
    def remote_asn(self) -> str:
        """
        Peer autonomous system number.
        """
        return pulumi.get(self, "remote_asn")

    @property
    @pulumi.getter(name="sourceInterface")
    def source_interface(self) -> str:
        """
        Source Interface. Must match first field in the output of `show intf brief`.
        """
        return pulumi.get(self, "source_interface")

    @property
    @pulumi.getter
    def vrf(self) -> str:
        """
        VRF name.
        """
        return pulumi.get(self, "vrf")


class AwaitableGetBgpPeerResult(GetBgpPeerResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBgpPeerResult(
            address=self.address,
            asn=self.asn,
            description=self.description,
            device=self.device,
            hold_time=self.hold_time,
            id=self.id,
            keepalive=self.keepalive,
            peer_template=self.peer_template,
            peer_type=self.peer_type,
            remote_asn=self.remote_asn,
            source_interface=self.source_interface,
            vrf=self.vrf)


def get_bgp_peer(address: Optional[str] = None,
                 asn: Optional[str] = None,
                 device: Optional[str] = None,
                 vrf: Optional[str] = None,
                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetBgpPeerResult:
    """
    This data source can read the BGP peer configuration.

    - API Documentation: [bgpPeer](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:Peer/)

    ## Example Usage

    ```python
    import pulumi
    import pulumi_nxos as nxos

    example = nxos.get_bgp_peer(address="192.168.0.1",
        asn="65001",
        vrf="default")
    ```


    :param str address: Peer address.
    :param str asn: Autonomous system number.
    :param str device: A device name from the provider configuration.
    :param str vrf: VRF name.
    """
    __args__ = dict()
    __args__['address'] = address
    __args__['asn'] = asn
    __args__['device'] = device
    __args__['vrf'] = vrf
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('nxos:index/getBgpPeer:getBgpPeer', __args__, opts=opts, typ=GetBgpPeerResult).value

    return AwaitableGetBgpPeerResult(
        address=pulumi.get(__ret__, 'address'),
        asn=pulumi.get(__ret__, 'asn'),
        description=pulumi.get(__ret__, 'description'),
        device=pulumi.get(__ret__, 'device'),
        hold_time=pulumi.get(__ret__, 'hold_time'),
        id=pulumi.get(__ret__, 'id'),
        keepalive=pulumi.get(__ret__, 'keepalive'),
        peer_template=pulumi.get(__ret__, 'peer_template'),
        peer_type=pulumi.get(__ret__, 'peer_type'),
        remote_asn=pulumi.get(__ret__, 'remote_asn'),
        source_interface=pulumi.get(__ret__, 'source_interface'),
        vrf=pulumi.get(__ret__, 'vrf'))


@_utilities.lift_output_func(get_bgp_peer)
def get_bgp_peer_output(address: Optional[pulumi.Input[str]] = None,
                        asn: Optional[pulumi.Input[str]] = None,
                        device: Optional[pulumi.Input[Optional[str]]] = None,
                        vrf: Optional[pulumi.Input[str]] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetBgpPeerResult]:
    """
    This data source can read the BGP peer configuration.

    - API Documentation: [bgpPeer](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/bgp:Peer/)

    ## Example Usage

    ```python
    import pulumi
    import pulumi_nxos as nxos

    example = nxos.get_bgp_peer(address="192.168.0.1",
        asn="65001",
        vrf="default")
    ```


    :param str address: Peer address.
    :param str asn: Autonomous system number.
    :param str device: A device name from the provider configuration.
    :param str vrf: VRF name.
    """
    ...
