# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetNveVniIngressReplicationResult',
    'AwaitableGetNveVniIngressReplicationResult',
    'get_nve_vni_ingress_replication',
    'get_nve_vni_ingress_replication_output',
]

@pulumi.output_type
class GetNveVniIngressReplicationResult:
    """
    A collection of values returned by getNveVniIngressReplication.
    """
    def __init__(__self__, device=None, id=None, protocol=None, vni=None):
        if device and not isinstance(device, str):
            raise TypeError("Expected argument 'device' to be a str")
        pulumi.set(__self__, "device", device)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if protocol and not isinstance(protocol, str):
            raise TypeError("Expected argument 'protocol' to be a str")
        pulumi.set(__self__, "protocol", protocol)
        if vni and not isinstance(vni, int):
            raise TypeError("Expected argument 'vni' to be a int")
        pulumi.set(__self__, "vni", vni)

    @property
    @pulumi.getter
    def device(self) -> Optional[str]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The distinguished name of the object.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def protocol(self) -> str:
        """
        Configure VxLAN Ingress Replication mode.
        """
        return pulumi.get(self, "protocol")

    @property
    @pulumi.getter
    def vni(self) -> int:
        """
        Virtual Network ID.
        """
        return pulumi.get(self, "vni")


class AwaitableGetNveVniIngressReplicationResult(GetNveVniIngressReplicationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNveVniIngressReplicationResult(
            device=self.device,
            id=self.id,
            protocol=self.protocol,
            vni=self.vni)


def get_nve_vni_ingress_replication(device: Optional[str] = None,
                                    vni: Optional[int] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetNveVniIngressReplicationResult:
    """
    This data source can read the configuration of Ingress Replication for Virtual Network ID (VNI).

    - API Documentation: [nvoIngRepl](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Network%20Virtualization/nvo:IngRepl/)

    ## Example Usage

    ```python
    import pulumi
    import pulumi_nxos as nxos

    example = nxos.get_nve_vni_ingress_replication(vni=103100)
    ```


    :param str device: A device name from the provider configuration.
    :param int vni: Virtual Network ID.
    """
    __args__ = dict()
    __args__['device'] = device
    __args__['vni'] = vni
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('nxos:index/getNveVniIngressReplication:getNveVniIngressReplication', __args__, opts=opts, typ=GetNveVniIngressReplicationResult).value

    return AwaitableGetNveVniIngressReplicationResult(
        device=pulumi.get(__ret__, 'device'),
        id=pulumi.get(__ret__, 'id'),
        protocol=pulumi.get(__ret__, 'protocol'),
        vni=pulumi.get(__ret__, 'vni'))


@_utilities.lift_output_func(get_nve_vni_ingress_replication)
def get_nve_vni_ingress_replication_output(device: Optional[pulumi.Input[Optional[str]]] = None,
                                           vni: Optional[pulumi.Input[int]] = None,
                                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetNveVniIngressReplicationResult]:
    """
    This data source can read the configuration of Ingress Replication for Virtual Network ID (VNI).

    - API Documentation: [nvoIngRepl](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Network%20Virtualization/nvo:IngRepl/)

    ## Example Usage

    ```python
    import pulumi
    import pulumi_nxos as nxos

    example = nxos.get_nve_vni_ingress_replication(vni=103100)
    ```


    :param str device: A device name from the provider configuration.
    :param int vni: Virtual Network ID.
    """
    ...
