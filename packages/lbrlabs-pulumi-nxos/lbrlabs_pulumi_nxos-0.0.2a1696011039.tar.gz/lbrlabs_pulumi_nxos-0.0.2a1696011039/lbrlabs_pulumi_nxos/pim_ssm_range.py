# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['PimSsmRangeArgs', 'PimSsmRange']

@pulumi.input_type
class PimSsmRangeArgs:
    def __init__(__self__, *,
                 vrf_name: pulumi.Input[str],
                 device: Optional[pulumi.Input[str]] = None,
                 group_list1: Optional[pulumi.Input[str]] = None,
                 group_list2: Optional[pulumi.Input[str]] = None,
                 group_list3: Optional[pulumi.Input[str]] = None,
                 group_list4: Optional[pulumi.Input[str]] = None,
                 prefix_list: Optional[pulumi.Input[str]] = None,
                 route_map: Optional[pulumi.Input[str]] = None,
                 ssm_none: Optional[pulumi.Input[bool]] = None):
        """
        The set of arguments for constructing a PimSsmRange resource.
        :param pulumi.Input[str] vrf_name: VRF name.
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[str] group_list1: Group list 1. - Default value: `0.0.0.0`
        :param pulumi.Input[str] group_list2: Group list 2. - Default value: `0.0.0.0`
        :param pulumi.Input[str] group_list3: Group list 3. - Default value: `0.0.0.0`
        :param pulumi.Input[str] group_list4: Group list 4. - Default value: `0.0.0.0`
        :param pulumi.Input[str] prefix_list: Prefix list name.
        :param pulumi.Input[str] route_map: Route map name.
        :param pulumi.Input[bool] ssm_none: Exclude standard SSM range (232.0.0.0/8). - Default value: `false`
        """
        pulumi.set(__self__, "vrf_name", vrf_name)
        if device is not None:
            pulumi.set(__self__, "device", device)
        if group_list1 is not None:
            pulumi.set(__self__, "group_list1", group_list1)
        if group_list2 is not None:
            pulumi.set(__self__, "group_list2", group_list2)
        if group_list3 is not None:
            pulumi.set(__self__, "group_list3", group_list3)
        if group_list4 is not None:
            pulumi.set(__self__, "group_list4", group_list4)
        if prefix_list is not None:
            pulumi.set(__self__, "prefix_list", prefix_list)
        if route_map is not None:
            pulumi.set(__self__, "route_map", route_map)
        if ssm_none is not None:
            pulumi.set(__self__, "ssm_none", ssm_none)

    @property
    @pulumi.getter(name="vrfName")
    def vrf_name(self) -> pulumi.Input[str]:
        """
        VRF name.
        """
        return pulumi.get(self, "vrf_name")

    @vrf_name.setter
    def vrf_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "vrf_name", value)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter(name="groupList1")
    def group_list1(self) -> Optional[pulumi.Input[str]]:
        """
        Group list 1. - Default value: `0.0.0.0`
        """
        return pulumi.get(self, "group_list1")

    @group_list1.setter
    def group_list1(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "group_list1", value)

    @property
    @pulumi.getter(name="groupList2")
    def group_list2(self) -> Optional[pulumi.Input[str]]:
        """
        Group list 2. - Default value: `0.0.0.0`
        """
        return pulumi.get(self, "group_list2")

    @group_list2.setter
    def group_list2(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "group_list2", value)

    @property
    @pulumi.getter(name="groupList3")
    def group_list3(self) -> Optional[pulumi.Input[str]]:
        """
        Group list 3. - Default value: `0.0.0.0`
        """
        return pulumi.get(self, "group_list3")

    @group_list3.setter
    def group_list3(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "group_list3", value)

    @property
    @pulumi.getter(name="groupList4")
    def group_list4(self) -> Optional[pulumi.Input[str]]:
        """
        Group list 4. - Default value: `0.0.0.0`
        """
        return pulumi.get(self, "group_list4")

    @group_list4.setter
    def group_list4(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "group_list4", value)

    @property
    @pulumi.getter(name="prefixList")
    def prefix_list(self) -> Optional[pulumi.Input[str]]:
        """
        Prefix list name.
        """
        return pulumi.get(self, "prefix_list")

    @prefix_list.setter
    def prefix_list(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "prefix_list", value)

    @property
    @pulumi.getter(name="routeMap")
    def route_map(self) -> Optional[pulumi.Input[str]]:
        """
        Route map name.
        """
        return pulumi.get(self, "route_map")

    @route_map.setter
    def route_map(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "route_map", value)

    @property
    @pulumi.getter(name="ssmNone")
    def ssm_none(self) -> Optional[pulumi.Input[bool]]:
        """
        Exclude standard SSM range (232.0.0.0/8). - Default value: `false`
        """
        return pulumi.get(self, "ssm_none")

    @ssm_none.setter
    def ssm_none(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "ssm_none", value)


@pulumi.input_type
class _PimSsmRangeState:
    def __init__(__self__, *,
                 device: Optional[pulumi.Input[str]] = None,
                 group_list1: Optional[pulumi.Input[str]] = None,
                 group_list2: Optional[pulumi.Input[str]] = None,
                 group_list3: Optional[pulumi.Input[str]] = None,
                 group_list4: Optional[pulumi.Input[str]] = None,
                 prefix_list: Optional[pulumi.Input[str]] = None,
                 route_map: Optional[pulumi.Input[str]] = None,
                 ssm_none: Optional[pulumi.Input[bool]] = None,
                 vrf_name: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering PimSsmRange resources.
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[str] group_list1: Group list 1. - Default value: `0.0.0.0`
        :param pulumi.Input[str] group_list2: Group list 2. - Default value: `0.0.0.0`
        :param pulumi.Input[str] group_list3: Group list 3. - Default value: `0.0.0.0`
        :param pulumi.Input[str] group_list4: Group list 4. - Default value: `0.0.0.0`
        :param pulumi.Input[str] prefix_list: Prefix list name.
        :param pulumi.Input[str] route_map: Route map name.
        :param pulumi.Input[bool] ssm_none: Exclude standard SSM range (232.0.0.0/8). - Default value: `false`
        :param pulumi.Input[str] vrf_name: VRF name.
        """
        if device is not None:
            pulumi.set(__self__, "device", device)
        if group_list1 is not None:
            pulumi.set(__self__, "group_list1", group_list1)
        if group_list2 is not None:
            pulumi.set(__self__, "group_list2", group_list2)
        if group_list3 is not None:
            pulumi.set(__self__, "group_list3", group_list3)
        if group_list4 is not None:
            pulumi.set(__self__, "group_list4", group_list4)
        if prefix_list is not None:
            pulumi.set(__self__, "prefix_list", prefix_list)
        if route_map is not None:
            pulumi.set(__self__, "route_map", route_map)
        if ssm_none is not None:
            pulumi.set(__self__, "ssm_none", ssm_none)
        if vrf_name is not None:
            pulumi.set(__self__, "vrf_name", vrf_name)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter(name="groupList1")
    def group_list1(self) -> Optional[pulumi.Input[str]]:
        """
        Group list 1. - Default value: `0.0.0.0`
        """
        return pulumi.get(self, "group_list1")

    @group_list1.setter
    def group_list1(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "group_list1", value)

    @property
    @pulumi.getter(name="groupList2")
    def group_list2(self) -> Optional[pulumi.Input[str]]:
        """
        Group list 2. - Default value: `0.0.0.0`
        """
        return pulumi.get(self, "group_list2")

    @group_list2.setter
    def group_list2(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "group_list2", value)

    @property
    @pulumi.getter(name="groupList3")
    def group_list3(self) -> Optional[pulumi.Input[str]]:
        """
        Group list 3. - Default value: `0.0.0.0`
        """
        return pulumi.get(self, "group_list3")

    @group_list3.setter
    def group_list3(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "group_list3", value)

    @property
    @pulumi.getter(name="groupList4")
    def group_list4(self) -> Optional[pulumi.Input[str]]:
        """
        Group list 4. - Default value: `0.0.0.0`
        """
        return pulumi.get(self, "group_list4")

    @group_list4.setter
    def group_list4(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "group_list4", value)

    @property
    @pulumi.getter(name="prefixList")
    def prefix_list(self) -> Optional[pulumi.Input[str]]:
        """
        Prefix list name.
        """
        return pulumi.get(self, "prefix_list")

    @prefix_list.setter
    def prefix_list(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "prefix_list", value)

    @property
    @pulumi.getter(name="routeMap")
    def route_map(self) -> Optional[pulumi.Input[str]]:
        """
        Route map name.
        """
        return pulumi.get(self, "route_map")

    @route_map.setter
    def route_map(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "route_map", value)

    @property
    @pulumi.getter(name="ssmNone")
    def ssm_none(self) -> Optional[pulumi.Input[bool]]:
        """
        Exclude standard SSM range (232.0.0.0/8). - Default value: `false`
        """
        return pulumi.get(self, "ssm_none")

    @ssm_none.setter
    def ssm_none(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "ssm_none", value)

    @property
    @pulumi.getter(name="vrfName")
    def vrf_name(self) -> Optional[pulumi.Input[str]]:
        """
        VRF name.
        """
        return pulumi.get(self, "vrf_name")

    @vrf_name.setter
    def vrf_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vrf_name", value)


class PimSsmRange(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 group_list1: Optional[pulumi.Input[str]] = None,
                 group_list2: Optional[pulumi.Input[str]] = None,
                 group_list3: Optional[pulumi.Input[str]] = None,
                 group_list4: Optional[pulumi.Input[str]] = None,
                 prefix_list: Optional[pulumi.Input[str]] = None,
                 route_map: Optional[pulumi.Input[str]] = None,
                 ssm_none: Optional[pulumi.Input[bool]] = None,
                 vrf_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        This resource can manage the PIM SSM range configuration.

        - API Documentation: [pimSSMRangeP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:SSMRangeP/)

        ## Example Usage

        ```python
        import pulumi
        import lbrlabs_pulumi_nxos as nxos

        example = nxos.PimSsmRange("example",
            group_list1="232.0.0.0/8",
            group_list2="233.0.0.0/8",
            group_list3="0.0.0.0",
            group_list4="0.0.0.0",
            prefix_list="",
            route_map="",
            ssm_none=False,
            vrf_name="default")
        ```

        ## Import

        ```sh
         $ pulumi import nxos:index/pimSsmRange:PimSsmRange example "sys/pim/inst/dom-[default]/ssm/range"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[str] group_list1: Group list 1. - Default value: `0.0.0.0`
        :param pulumi.Input[str] group_list2: Group list 2. - Default value: `0.0.0.0`
        :param pulumi.Input[str] group_list3: Group list 3. - Default value: `0.0.0.0`
        :param pulumi.Input[str] group_list4: Group list 4. - Default value: `0.0.0.0`
        :param pulumi.Input[str] prefix_list: Prefix list name.
        :param pulumi.Input[str] route_map: Route map name.
        :param pulumi.Input[bool] ssm_none: Exclude standard SSM range (232.0.0.0/8). - Default value: `false`
        :param pulumi.Input[str] vrf_name: VRF name.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PimSsmRangeArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource can manage the PIM SSM range configuration.

        - API Documentation: [pimSSMRangeP](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Layer%203/pim:SSMRangeP/)

        ## Example Usage

        ```python
        import pulumi
        import lbrlabs_pulumi_nxos as nxos

        example = nxos.PimSsmRange("example",
            group_list1="232.0.0.0/8",
            group_list2="233.0.0.0/8",
            group_list3="0.0.0.0",
            group_list4="0.0.0.0",
            prefix_list="",
            route_map="",
            ssm_none=False,
            vrf_name="default")
        ```

        ## Import

        ```sh
         $ pulumi import nxos:index/pimSsmRange:PimSsmRange example "sys/pim/inst/dom-[default]/ssm/range"
        ```

        :param str resource_name: The name of the resource.
        :param PimSsmRangeArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PimSsmRangeArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 group_list1: Optional[pulumi.Input[str]] = None,
                 group_list2: Optional[pulumi.Input[str]] = None,
                 group_list3: Optional[pulumi.Input[str]] = None,
                 group_list4: Optional[pulumi.Input[str]] = None,
                 prefix_list: Optional[pulumi.Input[str]] = None,
                 route_map: Optional[pulumi.Input[str]] = None,
                 ssm_none: Optional[pulumi.Input[bool]] = None,
                 vrf_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PimSsmRangeArgs.__new__(PimSsmRangeArgs)

            __props__.__dict__["device"] = device
            __props__.__dict__["group_list1"] = group_list1
            __props__.__dict__["group_list2"] = group_list2
            __props__.__dict__["group_list3"] = group_list3
            __props__.__dict__["group_list4"] = group_list4
            __props__.__dict__["prefix_list"] = prefix_list
            __props__.__dict__["route_map"] = route_map
            __props__.__dict__["ssm_none"] = ssm_none
            if vrf_name is None and not opts.urn:
                raise TypeError("Missing required property 'vrf_name'")
            __props__.__dict__["vrf_name"] = vrf_name
        super(PimSsmRange, __self__).__init__(
            'nxos:index/pimSsmRange:PimSsmRange',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            device: Optional[pulumi.Input[str]] = None,
            group_list1: Optional[pulumi.Input[str]] = None,
            group_list2: Optional[pulumi.Input[str]] = None,
            group_list3: Optional[pulumi.Input[str]] = None,
            group_list4: Optional[pulumi.Input[str]] = None,
            prefix_list: Optional[pulumi.Input[str]] = None,
            route_map: Optional[pulumi.Input[str]] = None,
            ssm_none: Optional[pulumi.Input[bool]] = None,
            vrf_name: Optional[pulumi.Input[str]] = None) -> 'PimSsmRange':
        """
        Get an existing PimSsmRange resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[str] group_list1: Group list 1. - Default value: `0.0.0.0`
        :param pulumi.Input[str] group_list2: Group list 2. - Default value: `0.0.0.0`
        :param pulumi.Input[str] group_list3: Group list 3. - Default value: `0.0.0.0`
        :param pulumi.Input[str] group_list4: Group list 4. - Default value: `0.0.0.0`
        :param pulumi.Input[str] prefix_list: Prefix list name.
        :param pulumi.Input[str] route_map: Route map name.
        :param pulumi.Input[bool] ssm_none: Exclude standard SSM range (232.0.0.0/8). - Default value: `false`
        :param pulumi.Input[str] vrf_name: VRF name.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PimSsmRangeState.__new__(_PimSsmRangeState)

        __props__.__dict__["device"] = device
        __props__.__dict__["group_list1"] = group_list1
        __props__.__dict__["group_list2"] = group_list2
        __props__.__dict__["group_list3"] = group_list3
        __props__.__dict__["group_list4"] = group_list4
        __props__.__dict__["prefix_list"] = prefix_list
        __props__.__dict__["route_map"] = route_map
        __props__.__dict__["ssm_none"] = ssm_none
        __props__.__dict__["vrf_name"] = vrf_name
        return PimSsmRange(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def device(self) -> pulumi.Output[Optional[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @property
    @pulumi.getter(name="groupList1")
    def group_list1(self) -> pulumi.Output[str]:
        """
        Group list 1. - Default value: `0.0.0.0`
        """
        return pulumi.get(self, "group_list1")

    @property
    @pulumi.getter(name="groupList2")
    def group_list2(self) -> pulumi.Output[str]:
        """
        Group list 2. - Default value: `0.0.0.0`
        """
        return pulumi.get(self, "group_list2")

    @property
    @pulumi.getter(name="groupList3")
    def group_list3(self) -> pulumi.Output[str]:
        """
        Group list 3. - Default value: `0.0.0.0`
        """
        return pulumi.get(self, "group_list3")

    @property
    @pulumi.getter(name="groupList4")
    def group_list4(self) -> pulumi.Output[str]:
        """
        Group list 4. - Default value: `0.0.0.0`
        """
        return pulumi.get(self, "group_list4")

    @property
    @pulumi.getter(name="prefixList")
    def prefix_list(self) -> pulumi.Output[Optional[str]]:
        """
        Prefix list name.
        """
        return pulumi.get(self, "prefix_list")

    @property
    @pulumi.getter(name="routeMap")
    def route_map(self) -> pulumi.Output[Optional[str]]:
        """
        Route map name.
        """
        return pulumi.get(self, "route_map")

    @property
    @pulumi.getter(name="ssmNone")
    def ssm_none(self) -> pulumi.Output[bool]:
        """
        Exclude standard SSM range (232.0.0.0/8). - Default value: `false`
        """
        return pulumi.get(self, "ssm_none")

    @property
    @pulumi.getter(name="vrfName")
    def vrf_name(self) -> pulumi.Output[str]:
        """
        VRF name.
        """
        return pulumi.get(self, "vrf_name")

