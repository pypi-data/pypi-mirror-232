# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['OspfInterfaceArgs', 'OspfInterface']

@pulumi.input_type
class OspfInterfaceArgs:
    def __init__(__self__, *,
                 instance_name: pulumi.Input[str],
                 interface_id: pulumi.Input[str],
                 vrf_name: pulumi.Input[str],
                 advertise_secondaries: Optional[pulumi.Input[bool]] = None,
                 area: Optional[pulumi.Input[str]] = None,
                 bfd: Optional[pulumi.Input[str]] = None,
                 cost: Optional[pulumi.Input[int]] = None,
                 dead_interval: Optional[pulumi.Input[int]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 hello_interval: Optional[pulumi.Input[int]] = None,
                 network_type: Optional[pulumi.Input[str]] = None,
                 passive: Optional[pulumi.Input[str]] = None,
                 priority: Optional[pulumi.Input[int]] = None):
        """
        The set of arguments for constructing a OspfInterface resource.
        :param pulumi.Input[str] instance_name: OSPF instance name.
        :param pulumi.Input[str] interface_id: Must match first field in the output of `show intf brief`. Example: `eth1/1`.
        :param pulumi.Input[str] vrf_name: VRF name.
        :param pulumi.Input[bool] advertise_secondaries: Advertise secondary IP addresses. - Default value: `true`
        :param pulumi.Input[str] area: Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`
        :param pulumi.Input[str] bfd: Bidirectional Forwarding Detection (BFD). - Choices: `unspecified`, `enabled`, `disabled` - Default value: `unspecified`
        :param pulumi.Input[int] cost: Specifies the cost of interface. - Range: `0`-`65535` - Default value: `0`
        :param pulumi.Input[int] dead_interval: Dead interval, interval after which router declares that neighbor as down. - Range: `0`-`65535` - Default value: `0`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[int] hello_interval: Hello interval, interval between hello packets that OSPF sends on the interface. - Range: `0`-`65535` - Default value:
               `10`
        :param pulumi.Input[str] network_type: Network type. - Choices: `unspecified`, `p2p`, `bcast` - Default value: `unspecified`
        :param pulumi.Input[str] passive: Passive interface control. Interface can be configured as passive or non-passive. - Choices: `unspecified`, `enabled`,
               `disabled` - Default value: `unspecified`
        :param pulumi.Input[int] priority: Priority, used in determining the designated router on this network. - Range: `0`-`255` - Default value: `1`
        """
        pulumi.set(__self__, "instance_name", instance_name)
        pulumi.set(__self__, "interface_id", interface_id)
        pulumi.set(__self__, "vrf_name", vrf_name)
        if advertise_secondaries is not None:
            pulumi.set(__self__, "advertise_secondaries", advertise_secondaries)
        if area is not None:
            pulumi.set(__self__, "area", area)
        if bfd is not None:
            pulumi.set(__self__, "bfd", bfd)
        if cost is not None:
            pulumi.set(__self__, "cost", cost)
        if dead_interval is not None:
            pulumi.set(__self__, "dead_interval", dead_interval)
        if device is not None:
            pulumi.set(__self__, "device", device)
        if hello_interval is not None:
            pulumi.set(__self__, "hello_interval", hello_interval)
        if network_type is not None:
            pulumi.set(__self__, "network_type", network_type)
        if passive is not None:
            pulumi.set(__self__, "passive", passive)
        if priority is not None:
            pulumi.set(__self__, "priority", priority)

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> pulumi.Input[str]:
        """
        OSPF instance name.
        """
        return pulumi.get(self, "instance_name")

    @instance_name.setter
    def instance_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "instance_name", value)

    @property
    @pulumi.getter(name="interfaceId")
    def interface_id(self) -> pulumi.Input[str]:
        """
        Must match first field in the output of `show intf brief`. Example: `eth1/1`.
        """
        return pulumi.get(self, "interface_id")

    @interface_id.setter
    def interface_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "interface_id", value)

    @property
    @pulumi.getter(name="vrfName")
    def vrf_name(self) -> pulumi.Input[str]:
        """
        VRF name.
        """
        return pulumi.get(self, "vrf_name")

    @vrf_name.setter
    def vrf_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "vrf_name", value)

    @property
    @pulumi.getter(name="advertiseSecondaries")
    def advertise_secondaries(self) -> Optional[pulumi.Input[bool]]:
        """
        Advertise secondary IP addresses. - Default value: `true`
        """
        return pulumi.get(self, "advertise_secondaries")

    @advertise_secondaries.setter
    def advertise_secondaries(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "advertise_secondaries", value)

    @property
    @pulumi.getter
    def area(self) -> Optional[pulumi.Input[str]]:
        """
        Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`
        """
        return pulumi.get(self, "area")

    @area.setter
    def area(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "area", value)

    @property
    @pulumi.getter
    def bfd(self) -> Optional[pulumi.Input[str]]:
        """
        Bidirectional Forwarding Detection (BFD). - Choices: `unspecified`, `enabled`, `disabled` - Default value: `unspecified`
        """
        return pulumi.get(self, "bfd")

    @bfd.setter
    def bfd(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "bfd", value)

    @property
    @pulumi.getter
    def cost(self) -> Optional[pulumi.Input[int]]:
        """
        Specifies the cost of interface. - Range: `0`-`65535` - Default value: `0`
        """
        return pulumi.get(self, "cost")

    @cost.setter
    def cost(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "cost", value)

    @property
    @pulumi.getter(name="deadInterval")
    def dead_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Dead interval, interval after which router declares that neighbor as down. - Range: `0`-`65535` - Default value: `0`
        """
        return pulumi.get(self, "dead_interval")

    @dead_interval.setter
    def dead_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "dead_interval", value)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter(name="helloInterval")
    def hello_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Hello interval, interval between hello packets that OSPF sends on the interface. - Range: `0`-`65535` - Default value:
        `10`
        """
        return pulumi.get(self, "hello_interval")

    @hello_interval.setter
    def hello_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "hello_interval", value)

    @property
    @pulumi.getter(name="networkType")
    def network_type(self) -> Optional[pulumi.Input[str]]:
        """
        Network type. - Choices: `unspecified`, `p2p`, `bcast` - Default value: `unspecified`
        """
        return pulumi.get(self, "network_type")

    @network_type.setter
    def network_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "network_type", value)

    @property
    @pulumi.getter
    def passive(self) -> Optional[pulumi.Input[str]]:
        """
        Passive interface control. Interface can be configured as passive or non-passive. - Choices: `unspecified`, `enabled`,
        `disabled` - Default value: `unspecified`
        """
        return pulumi.get(self, "passive")

    @passive.setter
    def passive(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "passive", value)

    @property
    @pulumi.getter
    def priority(self) -> Optional[pulumi.Input[int]]:
        """
        Priority, used in determining the designated router on this network. - Range: `0`-`255` - Default value: `1`
        """
        return pulumi.get(self, "priority")

    @priority.setter
    def priority(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "priority", value)


@pulumi.input_type
class _OspfInterfaceState:
    def __init__(__self__, *,
                 advertise_secondaries: Optional[pulumi.Input[bool]] = None,
                 area: Optional[pulumi.Input[str]] = None,
                 bfd: Optional[pulumi.Input[str]] = None,
                 cost: Optional[pulumi.Input[int]] = None,
                 dead_interval: Optional[pulumi.Input[int]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 hello_interval: Optional[pulumi.Input[int]] = None,
                 instance_name: Optional[pulumi.Input[str]] = None,
                 interface_id: Optional[pulumi.Input[str]] = None,
                 network_type: Optional[pulumi.Input[str]] = None,
                 passive: Optional[pulumi.Input[str]] = None,
                 priority: Optional[pulumi.Input[int]] = None,
                 vrf_name: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering OspfInterface resources.
        :param pulumi.Input[bool] advertise_secondaries: Advertise secondary IP addresses. - Default value: `true`
        :param pulumi.Input[str] area: Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`
        :param pulumi.Input[str] bfd: Bidirectional Forwarding Detection (BFD). - Choices: `unspecified`, `enabled`, `disabled` - Default value: `unspecified`
        :param pulumi.Input[int] cost: Specifies the cost of interface. - Range: `0`-`65535` - Default value: `0`
        :param pulumi.Input[int] dead_interval: Dead interval, interval after which router declares that neighbor as down. - Range: `0`-`65535` - Default value: `0`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[int] hello_interval: Hello interval, interval between hello packets that OSPF sends on the interface. - Range: `0`-`65535` - Default value:
               `10`
        :param pulumi.Input[str] instance_name: OSPF instance name.
        :param pulumi.Input[str] interface_id: Must match first field in the output of `show intf brief`. Example: `eth1/1`.
        :param pulumi.Input[str] network_type: Network type. - Choices: `unspecified`, `p2p`, `bcast` - Default value: `unspecified`
        :param pulumi.Input[str] passive: Passive interface control. Interface can be configured as passive or non-passive. - Choices: `unspecified`, `enabled`,
               `disabled` - Default value: `unspecified`
        :param pulumi.Input[int] priority: Priority, used in determining the designated router on this network. - Range: `0`-`255` - Default value: `1`
        :param pulumi.Input[str] vrf_name: VRF name.
        """
        if advertise_secondaries is not None:
            pulumi.set(__self__, "advertise_secondaries", advertise_secondaries)
        if area is not None:
            pulumi.set(__self__, "area", area)
        if bfd is not None:
            pulumi.set(__self__, "bfd", bfd)
        if cost is not None:
            pulumi.set(__self__, "cost", cost)
        if dead_interval is not None:
            pulumi.set(__self__, "dead_interval", dead_interval)
        if device is not None:
            pulumi.set(__self__, "device", device)
        if hello_interval is not None:
            pulumi.set(__self__, "hello_interval", hello_interval)
        if instance_name is not None:
            pulumi.set(__self__, "instance_name", instance_name)
        if interface_id is not None:
            pulumi.set(__self__, "interface_id", interface_id)
        if network_type is not None:
            pulumi.set(__self__, "network_type", network_type)
        if passive is not None:
            pulumi.set(__self__, "passive", passive)
        if priority is not None:
            pulumi.set(__self__, "priority", priority)
        if vrf_name is not None:
            pulumi.set(__self__, "vrf_name", vrf_name)

    @property
    @pulumi.getter(name="advertiseSecondaries")
    def advertise_secondaries(self) -> Optional[pulumi.Input[bool]]:
        """
        Advertise secondary IP addresses. - Default value: `true`
        """
        return pulumi.get(self, "advertise_secondaries")

    @advertise_secondaries.setter
    def advertise_secondaries(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "advertise_secondaries", value)

    @property
    @pulumi.getter
    def area(self) -> Optional[pulumi.Input[str]]:
        """
        Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`
        """
        return pulumi.get(self, "area")

    @area.setter
    def area(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "area", value)

    @property
    @pulumi.getter
    def bfd(self) -> Optional[pulumi.Input[str]]:
        """
        Bidirectional Forwarding Detection (BFD). - Choices: `unspecified`, `enabled`, `disabled` - Default value: `unspecified`
        """
        return pulumi.get(self, "bfd")

    @bfd.setter
    def bfd(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "bfd", value)

    @property
    @pulumi.getter
    def cost(self) -> Optional[pulumi.Input[int]]:
        """
        Specifies the cost of interface. - Range: `0`-`65535` - Default value: `0`
        """
        return pulumi.get(self, "cost")

    @cost.setter
    def cost(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "cost", value)

    @property
    @pulumi.getter(name="deadInterval")
    def dead_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Dead interval, interval after which router declares that neighbor as down. - Range: `0`-`65535` - Default value: `0`
        """
        return pulumi.get(self, "dead_interval")

    @dead_interval.setter
    def dead_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "dead_interval", value)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter(name="helloInterval")
    def hello_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Hello interval, interval between hello packets that OSPF sends on the interface. - Range: `0`-`65535` - Default value:
        `10`
        """
        return pulumi.get(self, "hello_interval")

    @hello_interval.setter
    def hello_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "hello_interval", value)

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> Optional[pulumi.Input[str]]:
        """
        OSPF instance name.
        """
        return pulumi.get(self, "instance_name")

    @instance_name.setter
    def instance_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_name", value)

    @property
    @pulumi.getter(name="interfaceId")
    def interface_id(self) -> Optional[pulumi.Input[str]]:
        """
        Must match first field in the output of `show intf brief`. Example: `eth1/1`.
        """
        return pulumi.get(self, "interface_id")

    @interface_id.setter
    def interface_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "interface_id", value)

    @property
    @pulumi.getter(name="networkType")
    def network_type(self) -> Optional[pulumi.Input[str]]:
        """
        Network type. - Choices: `unspecified`, `p2p`, `bcast` - Default value: `unspecified`
        """
        return pulumi.get(self, "network_type")

    @network_type.setter
    def network_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "network_type", value)

    @property
    @pulumi.getter
    def passive(self) -> Optional[pulumi.Input[str]]:
        """
        Passive interface control. Interface can be configured as passive or non-passive. - Choices: `unspecified`, `enabled`,
        `disabled` - Default value: `unspecified`
        """
        return pulumi.get(self, "passive")

    @passive.setter
    def passive(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "passive", value)

    @property
    @pulumi.getter
    def priority(self) -> Optional[pulumi.Input[int]]:
        """
        Priority, used in determining the designated router on this network. - Range: `0`-`255` - Default value: `1`
        """
        return pulumi.get(self, "priority")

    @priority.setter
    def priority(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "priority", value)

    @property
    @pulumi.getter(name="vrfName")
    def vrf_name(self) -> Optional[pulumi.Input[str]]:
        """
        VRF name.
        """
        return pulumi.get(self, "vrf_name")

    @vrf_name.setter
    def vrf_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vrf_name", value)


class OspfInterface(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 advertise_secondaries: Optional[pulumi.Input[bool]] = None,
                 area: Optional[pulumi.Input[str]] = None,
                 bfd: Optional[pulumi.Input[str]] = None,
                 cost: Optional[pulumi.Input[int]] = None,
                 dead_interval: Optional[pulumi.Input[int]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 hello_interval: Optional[pulumi.Input[int]] = None,
                 instance_name: Optional[pulumi.Input[str]] = None,
                 interface_id: Optional[pulumi.Input[str]] = None,
                 network_type: Optional[pulumi.Input[str]] = None,
                 passive: Optional[pulumi.Input[str]] = None,
                 priority: Optional[pulumi.Input[int]] = None,
                 vrf_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        This resource can manage the OSPF interface configuration.

        - API Documentation: [ospfIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/ospf:If/)

        ## Example Usage

        ```python
        import pulumi
        import lbrlabs_pulumi_nxos as nxos

        example = nxos.OspfInterface("example",
            advertise_secondaries=False,
            area="0.0.0.10",
            bfd="disabled",
            cost=1000,
            dead_interval=60,
            hello_interval=15,
            instance_name="OSPF1",
            interface_id="eth1/10",
            network_type="p2p",
            passive="enabled",
            priority=10,
            vrf_name="VRF1")
        ```

        ## Import

        ```sh
         $ pulumi import nxos:index/ospfInterface:OspfInterface example "sys/ospf/inst-[OSPF1]/dom-[VRF1]/if-[eth1/10]"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] advertise_secondaries: Advertise secondary IP addresses. - Default value: `true`
        :param pulumi.Input[str] area: Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`
        :param pulumi.Input[str] bfd: Bidirectional Forwarding Detection (BFD). - Choices: `unspecified`, `enabled`, `disabled` - Default value: `unspecified`
        :param pulumi.Input[int] cost: Specifies the cost of interface. - Range: `0`-`65535` - Default value: `0`
        :param pulumi.Input[int] dead_interval: Dead interval, interval after which router declares that neighbor as down. - Range: `0`-`65535` - Default value: `0`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[int] hello_interval: Hello interval, interval between hello packets that OSPF sends on the interface. - Range: `0`-`65535` - Default value:
               `10`
        :param pulumi.Input[str] instance_name: OSPF instance name.
        :param pulumi.Input[str] interface_id: Must match first field in the output of `show intf brief`. Example: `eth1/1`.
        :param pulumi.Input[str] network_type: Network type. - Choices: `unspecified`, `p2p`, `bcast` - Default value: `unspecified`
        :param pulumi.Input[str] passive: Passive interface control. Interface can be configured as passive or non-passive. - Choices: `unspecified`, `enabled`,
               `disabled` - Default value: `unspecified`
        :param pulumi.Input[int] priority: Priority, used in determining the designated router on this network. - Range: `0`-`255` - Default value: `1`
        :param pulumi.Input[str] vrf_name: VRF name.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: OspfInterfaceArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource can manage the OSPF interface configuration.

        - API Documentation: [ospfIf](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/Routing%20and%20Forwarding/ospf:If/)

        ## Example Usage

        ```python
        import pulumi
        import lbrlabs_pulumi_nxos as nxos

        example = nxos.OspfInterface("example",
            advertise_secondaries=False,
            area="0.0.0.10",
            bfd="disabled",
            cost=1000,
            dead_interval=60,
            hello_interval=15,
            instance_name="OSPF1",
            interface_id="eth1/10",
            network_type="p2p",
            passive="enabled",
            priority=10,
            vrf_name="VRF1")
        ```

        ## Import

        ```sh
         $ pulumi import nxos:index/ospfInterface:OspfInterface example "sys/ospf/inst-[OSPF1]/dom-[VRF1]/if-[eth1/10]"
        ```

        :param str resource_name: The name of the resource.
        :param OspfInterfaceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OspfInterfaceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 advertise_secondaries: Optional[pulumi.Input[bool]] = None,
                 area: Optional[pulumi.Input[str]] = None,
                 bfd: Optional[pulumi.Input[str]] = None,
                 cost: Optional[pulumi.Input[int]] = None,
                 dead_interval: Optional[pulumi.Input[int]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 hello_interval: Optional[pulumi.Input[int]] = None,
                 instance_name: Optional[pulumi.Input[str]] = None,
                 interface_id: Optional[pulumi.Input[str]] = None,
                 network_type: Optional[pulumi.Input[str]] = None,
                 passive: Optional[pulumi.Input[str]] = None,
                 priority: Optional[pulumi.Input[int]] = None,
                 vrf_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OspfInterfaceArgs.__new__(OspfInterfaceArgs)

            __props__.__dict__["advertise_secondaries"] = advertise_secondaries
            __props__.__dict__["area"] = area
            __props__.__dict__["bfd"] = bfd
            __props__.__dict__["cost"] = cost
            __props__.__dict__["dead_interval"] = dead_interval
            __props__.__dict__["device"] = device
            __props__.__dict__["hello_interval"] = hello_interval
            if instance_name is None and not opts.urn:
                raise TypeError("Missing required property 'instance_name'")
            __props__.__dict__["instance_name"] = instance_name
            if interface_id is None and not opts.urn:
                raise TypeError("Missing required property 'interface_id'")
            __props__.__dict__["interface_id"] = interface_id
            __props__.__dict__["network_type"] = network_type
            __props__.__dict__["passive"] = passive
            __props__.__dict__["priority"] = priority
            if vrf_name is None and not opts.urn:
                raise TypeError("Missing required property 'vrf_name'")
            __props__.__dict__["vrf_name"] = vrf_name
        super(OspfInterface, __self__).__init__(
            'nxos:index/ospfInterface:OspfInterface',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            advertise_secondaries: Optional[pulumi.Input[bool]] = None,
            area: Optional[pulumi.Input[str]] = None,
            bfd: Optional[pulumi.Input[str]] = None,
            cost: Optional[pulumi.Input[int]] = None,
            dead_interval: Optional[pulumi.Input[int]] = None,
            device: Optional[pulumi.Input[str]] = None,
            hello_interval: Optional[pulumi.Input[int]] = None,
            instance_name: Optional[pulumi.Input[str]] = None,
            interface_id: Optional[pulumi.Input[str]] = None,
            network_type: Optional[pulumi.Input[str]] = None,
            passive: Optional[pulumi.Input[str]] = None,
            priority: Optional[pulumi.Input[int]] = None,
            vrf_name: Optional[pulumi.Input[str]] = None) -> 'OspfInterface':
        """
        Get an existing OspfInterface resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] advertise_secondaries: Advertise secondary IP addresses. - Default value: `true`
        :param pulumi.Input[str] area: Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`
        :param pulumi.Input[str] bfd: Bidirectional Forwarding Detection (BFD). - Choices: `unspecified`, `enabled`, `disabled` - Default value: `unspecified`
        :param pulumi.Input[int] cost: Specifies the cost of interface. - Range: `0`-`65535` - Default value: `0`
        :param pulumi.Input[int] dead_interval: Dead interval, interval after which router declares that neighbor as down. - Range: `0`-`65535` - Default value: `0`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[int] hello_interval: Hello interval, interval between hello packets that OSPF sends on the interface. - Range: `0`-`65535` - Default value:
               `10`
        :param pulumi.Input[str] instance_name: OSPF instance name.
        :param pulumi.Input[str] interface_id: Must match first field in the output of `show intf brief`. Example: `eth1/1`.
        :param pulumi.Input[str] network_type: Network type. - Choices: `unspecified`, `p2p`, `bcast` - Default value: `unspecified`
        :param pulumi.Input[str] passive: Passive interface control. Interface can be configured as passive or non-passive. - Choices: `unspecified`, `enabled`,
               `disabled` - Default value: `unspecified`
        :param pulumi.Input[int] priority: Priority, used in determining the designated router on this network. - Range: `0`-`255` - Default value: `1`
        :param pulumi.Input[str] vrf_name: VRF name.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _OspfInterfaceState.__new__(_OspfInterfaceState)

        __props__.__dict__["advertise_secondaries"] = advertise_secondaries
        __props__.__dict__["area"] = area
        __props__.__dict__["bfd"] = bfd
        __props__.__dict__["cost"] = cost
        __props__.__dict__["dead_interval"] = dead_interval
        __props__.__dict__["device"] = device
        __props__.__dict__["hello_interval"] = hello_interval
        __props__.__dict__["instance_name"] = instance_name
        __props__.__dict__["interface_id"] = interface_id
        __props__.__dict__["network_type"] = network_type
        __props__.__dict__["passive"] = passive
        __props__.__dict__["priority"] = priority
        __props__.__dict__["vrf_name"] = vrf_name
        return OspfInterface(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="advertiseSecondaries")
    def advertise_secondaries(self) -> pulumi.Output[bool]:
        """
        Advertise secondary IP addresses. - Default value: `true`
        """
        return pulumi.get(self, "advertise_secondaries")

    @property
    @pulumi.getter
    def area(self) -> pulumi.Output[str]:
        """
        Area identifier to which a network or interface belongs in IPv4 address format. - Default value: `0.0.0.0`
        """
        return pulumi.get(self, "area")

    @property
    @pulumi.getter
    def bfd(self) -> pulumi.Output[str]:
        """
        Bidirectional Forwarding Detection (BFD). - Choices: `unspecified`, `enabled`, `disabled` - Default value: `unspecified`
        """
        return pulumi.get(self, "bfd")

    @property
    @pulumi.getter
    def cost(self) -> pulumi.Output[int]:
        """
        Specifies the cost of interface. - Range: `0`-`65535` - Default value: `0`
        """
        return pulumi.get(self, "cost")

    @property
    @pulumi.getter(name="deadInterval")
    def dead_interval(self) -> pulumi.Output[int]:
        """
        Dead interval, interval after which router declares that neighbor as down. - Range: `0`-`65535` - Default value: `0`
        """
        return pulumi.get(self, "dead_interval")

    @property
    @pulumi.getter
    def device(self) -> pulumi.Output[Optional[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @property
    @pulumi.getter(name="helloInterval")
    def hello_interval(self) -> pulumi.Output[int]:
        """
        Hello interval, interval between hello packets that OSPF sends on the interface. - Range: `0`-`65535` - Default value:
        `10`
        """
        return pulumi.get(self, "hello_interval")

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> pulumi.Output[str]:
        """
        OSPF instance name.
        """
        return pulumi.get(self, "instance_name")

    @property
    @pulumi.getter(name="interfaceId")
    def interface_id(self) -> pulumi.Output[str]:
        """
        Must match first field in the output of `show intf brief`. Example: `eth1/1`.
        """
        return pulumi.get(self, "interface_id")

    @property
    @pulumi.getter(name="networkType")
    def network_type(self) -> pulumi.Output[str]:
        """
        Network type. - Choices: `unspecified`, `p2p`, `bcast` - Default value: `unspecified`
        """
        return pulumi.get(self, "network_type")

    @property
    @pulumi.getter
    def passive(self) -> pulumi.Output[str]:
        """
        Passive interface control. Interface can be configured as passive or non-passive. - Choices: `unspecified`, `enabled`,
        `disabled` - Default value: `unspecified`
        """
        return pulumi.get(self, "passive")

    @property
    @pulumi.getter
    def priority(self) -> pulumi.Output[int]:
        """
        Priority, used in determining the designated router on this network. - Range: `0`-`255` - Default value: `1`
        """
        return pulumi.get(self, "priority")

    @property
    @pulumi.getter(name="vrfName")
    def vrf_name(self) -> pulumi.Output[str]:
        """
        VRF name.
        """
        return pulumi.get(self, "vrf_name")

