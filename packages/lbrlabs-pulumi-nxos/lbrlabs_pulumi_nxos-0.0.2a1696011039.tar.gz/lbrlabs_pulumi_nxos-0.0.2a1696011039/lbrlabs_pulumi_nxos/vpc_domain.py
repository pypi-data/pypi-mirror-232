# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['VpcDomainArgs', 'VpcDomain']

@pulumi.input_type
class VpcDomainArgs:
    def __init__(__self__, *,
                 domain_id: pulumi.Input[int],
                 admin_state: Optional[pulumi.Input[str]] = None,
                 auto_recovery: Optional[pulumi.Input[str]] = None,
                 auto_recovery_interval: Optional[pulumi.Input[int]] = None,
                 delay_restore_orphan_port: Optional[pulumi.Input[int]] = None,
                 delay_restore_svi: Optional[pulumi.Input[int]] = None,
                 delay_restore_vpc: Optional[pulumi.Input[int]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 dscp: Optional[pulumi.Input[int]] = None,
                 fast_convergence: Optional[pulumi.Input[str]] = None,
                 graceful_consistency_check: Optional[pulumi.Input[str]] = None,
                 l3_peer_router: Optional[pulumi.Input[str]] = None,
                 l3_peer_router_syslog: Optional[pulumi.Input[str]] = None,
                 l3_peer_router_syslog_interval: Optional[pulumi.Input[int]] = None,
                 peer_gateway: Optional[pulumi.Input[str]] = None,
                 peer_ip: Optional[pulumi.Input[str]] = None,
                 peer_switch: Optional[pulumi.Input[str]] = None,
                 role_priority: Optional[pulumi.Input[int]] = None,
                 sys_mac: Optional[pulumi.Input[str]] = None,
                 system_priority: Optional[pulumi.Input[int]] = None,
                 track: Optional[pulumi.Input[int]] = None,
                 virtual_ip: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a VpcDomain resource.
        :param pulumi.Input[int] domain_id: Domain id. - Range: `1`-`1000`
        :param pulumi.Input[str] admin_state: vPC suspend locally. - Choices: `enabled`, `disabled` - Default value: `enabled`
        :param pulumi.Input[str] auto_recovery: Auto Recovery. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[int] auto_recovery_interval: Auto Recovery interval. - Range: `60`-`3600` - Default value: `240`
        :param pulumi.Input[int] delay_restore_orphan_port: Delay restore for orphan ports. - Range: `0`-`300` - Default value: `0`
        :param pulumi.Input[int] delay_restore_svi: Delay restore for SVI. - Range: `1`-`3600` - Default value: `10`
        :param pulumi.Input[int] delay_restore_vpc: Delay restore for vPC links. - Range: `1`-`3600` - Default value: `30`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[int] dscp: DSCP. - Range: `0`-`63` - Default value: `0`
        :param pulumi.Input[str] fast_convergence: Fast Convergence. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[str] graceful_consistency_check: Graceful Type-1 Consistency Check. - Choices: `enabled`, `disabled` - Default value: `enabled`
        :param pulumi.Input[str] l3_peer_router: L3 Peer Router. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[str] l3_peer_router_syslog: L3 Peer Router Syslog. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[int] l3_peer_router_syslog_interval: L3 Peer Router Syslog Interval. - Range: `1`-`3600` - Default value: `3600`
        :param pulumi.Input[str] peer_gateway: Peer Gateway. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[str] peer_ip: vPC peer IP address.
        :param pulumi.Input[str] peer_switch: vPC pair switches. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[int] role_priority: Role priority. - Range: `1`-`65535` - Default value: `32667`
        :param pulumi.Input[str] sys_mac: System MAC.
        :param pulumi.Input[int] system_priority: System priority. - Range: `1`-`65535` - Default value: `32667`
        :param pulumi.Input[int] track: Tracking object to suspend vPC if object goes down. - Range: `0`-`500` - Default value: `0`
        :param pulumi.Input[str] virtual_ip: vPC virtual IP address (vIP).
        """
        pulumi.set(__self__, "domain_id", domain_id)
        if admin_state is not None:
            pulumi.set(__self__, "admin_state", admin_state)
        if auto_recovery is not None:
            pulumi.set(__self__, "auto_recovery", auto_recovery)
        if auto_recovery_interval is not None:
            pulumi.set(__self__, "auto_recovery_interval", auto_recovery_interval)
        if delay_restore_orphan_port is not None:
            pulumi.set(__self__, "delay_restore_orphan_port", delay_restore_orphan_port)
        if delay_restore_svi is not None:
            pulumi.set(__self__, "delay_restore_svi", delay_restore_svi)
        if delay_restore_vpc is not None:
            pulumi.set(__self__, "delay_restore_vpc", delay_restore_vpc)
        if device is not None:
            pulumi.set(__self__, "device", device)
        if dscp is not None:
            pulumi.set(__self__, "dscp", dscp)
        if fast_convergence is not None:
            pulumi.set(__self__, "fast_convergence", fast_convergence)
        if graceful_consistency_check is not None:
            pulumi.set(__self__, "graceful_consistency_check", graceful_consistency_check)
        if l3_peer_router is not None:
            pulumi.set(__self__, "l3_peer_router", l3_peer_router)
        if l3_peer_router_syslog is not None:
            pulumi.set(__self__, "l3_peer_router_syslog", l3_peer_router_syslog)
        if l3_peer_router_syslog_interval is not None:
            pulumi.set(__self__, "l3_peer_router_syslog_interval", l3_peer_router_syslog_interval)
        if peer_gateway is not None:
            pulumi.set(__self__, "peer_gateway", peer_gateway)
        if peer_ip is not None:
            pulumi.set(__self__, "peer_ip", peer_ip)
        if peer_switch is not None:
            pulumi.set(__self__, "peer_switch", peer_switch)
        if role_priority is not None:
            pulumi.set(__self__, "role_priority", role_priority)
        if sys_mac is not None:
            pulumi.set(__self__, "sys_mac", sys_mac)
        if system_priority is not None:
            pulumi.set(__self__, "system_priority", system_priority)
        if track is not None:
            pulumi.set(__self__, "track", track)
        if virtual_ip is not None:
            pulumi.set(__self__, "virtual_ip", virtual_ip)

    @property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> pulumi.Input[int]:
        """
        Domain id. - Range: `1`-`1000`
        """
        return pulumi.get(self, "domain_id")

    @domain_id.setter
    def domain_id(self, value: pulumi.Input[int]):
        pulumi.set(self, "domain_id", value)

    @property
    @pulumi.getter(name="adminState")
    def admin_state(self) -> Optional[pulumi.Input[str]]:
        """
        vPC suspend locally. - Choices: `enabled`, `disabled` - Default value: `enabled`
        """
        return pulumi.get(self, "admin_state")

    @admin_state.setter
    def admin_state(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "admin_state", value)

    @property
    @pulumi.getter(name="autoRecovery")
    def auto_recovery(self) -> Optional[pulumi.Input[str]]:
        """
        Auto Recovery. - Choices: `enabled`, `disabled` - Default value: `disabled`
        """
        return pulumi.get(self, "auto_recovery")

    @auto_recovery.setter
    def auto_recovery(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "auto_recovery", value)

    @property
    @pulumi.getter(name="autoRecoveryInterval")
    def auto_recovery_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Auto Recovery interval. - Range: `60`-`3600` - Default value: `240`
        """
        return pulumi.get(self, "auto_recovery_interval")

    @auto_recovery_interval.setter
    def auto_recovery_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "auto_recovery_interval", value)

    @property
    @pulumi.getter(name="delayRestoreOrphanPort")
    def delay_restore_orphan_port(self) -> Optional[pulumi.Input[int]]:
        """
        Delay restore for orphan ports. - Range: `0`-`300` - Default value: `0`
        """
        return pulumi.get(self, "delay_restore_orphan_port")

    @delay_restore_orphan_port.setter
    def delay_restore_orphan_port(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "delay_restore_orphan_port", value)

    @property
    @pulumi.getter(name="delayRestoreSvi")
    def delay_restore_svi(self) -> Optional[pulumi.Input[int]]:
        """
        Delay restore for SVI. - Range: `1`-`3600` - Default value: `10`
        """
        return pulumi.get(self, "delay_restore_svi")

    @delay_restore_svi.setter
    def delay_restore_svi(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "delay_restore_svi", value)

    @property
    @pulumi.getter(name="delayRestoreVpc")
    def delay_restore_vpc(self) -> Optional[pulumi.Input[int]]:
        """
        Delay restore for vPC links. - Range: `1`-`3600` - Default value: `30`
        """
        return pulumi.get(self, "delay_restore_vpc")

    @delay_restore_vpc.setter
    def delay_restore_vpc(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "delay_restore_vpc", value)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter
    def dscp(self) -> Optional[pulumi.Input[int]]:
        """
        DSCP. - Range: `0`-`63` - Default value: `0`
        """
        return pulumi.get(self, "dscp")

    @dscp.setter
    def dscp(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "dscp", value)

    @property
    @pulumi.getter(name="fastConvergence")
    def fast_convergence(self) -> Optional[pulumi.Input[str]]:
        """
        Fast Convergence. - Choices: `enabled`, `disabled` - Default value: `disabled`
        """
        return pulumi.get(self, "fast_convergence")

    @fast_convergence.setter
    def fast_convergence(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fast_convergence", value)

    @property
    @pulumi.getter(name="gracefulConsistencyCheck")
    def graceful_consistency_check(self) -> Optional[pulumi.Input[str]]:
        """
        Graceful Type-1 Consistency Check. - Choices: `enabled`, `disabled` - Default value: `enabled`
        """
        return pulumi.get(self, "graceful_consistency_check")

    @graceful_consistency_check.setter
    def graceful_consistency_check(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "graceful_consistency_check", value)

    @property
    @pulumi.getter(name="l3PeerRouter")
    def l3_peer_router(self) -> Optional[pulumi.Input[str]]:
        """
        L3 Peer Router. - Choices: `enabled`, `disabled` - Default value: `disabled`
        """
        return pulumi.get(self, "l3_peer_router")

    @l3_peer_router.setter
    def l3_peer_router(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "l3_peer_router", value)

    @property
    @pulumi.getter(name="l3PeerRouterSyslog")
    def l3_peer_router_syslog(self) -> Optional[pulumi.Input[str]]:
        """
        L3 Peer Router Syslog. - Choices: `enabled`, `disabled` - Default value: `disabled`
        """
        return pulumi.get(self, "l3_peer_router_syslog")

    @l3_peer_router_syslog.setter
    def l3_peer_router_syslog(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "l3_peer_router_syslog", value)

    @property
    @pulumi.getter(name="l3PeerRouterSyslogInterval")
    def l3_peer_router_syslog_interval(self) -> Optional[pulumi.Input[int]]:
        """
        L3 Peer Router Syslog Interval. - Range: `1`-`3600` - Default value: `3600`
        """
        return pulumi.get(self, "l3_peer_router_syslog_interval")

    @l3_peer_router_syslog_interval.setter
    def l3_peer_router_syslog_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "l3_peer_router_syslog_interval", value)

    @property
    @pulumi.getter(name="peerGateway")
    def peer_gateway(self) -> Optional[pulumi.Input[str]]:
        """
        Peer Gateway. - Choices: `enabled`, `disabled` - Default value: `disabled`
        """
        return pulumi.get(self, "peer_gateway")

    @peer_gateway.setter
    def peer_gateway(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "peer_gateway", value)

    @property
    @pulumi.getter(name="peerIp")
    def peer_ip(self) -> Optional[pulumi.Input[str]]:
        """
        vPC peer IP address.
        """
        return pulumi.get(self, "peer_ip")

    @peer_ip.setter
    def peer_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "peer_ip", value)

    @property
    @pulumi.getter(name="peerSwitch")
    def peer_switch(self) -> Optional[pulumi.Input[str]]:
        """
        vPC pair switches. - Choices: `enabled`, `disabled` - Default value: `disabled`
        """
        return pulumi.get(self, "peer_switch")

    @peer_switch.setter
    def peer_switch(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "peer_switch", value)

    @property
    @pulumi.getter(name="rolePriority")
    def role_priority(self) -> Optional[pulumi.Input[int]]:
        """
        Role priority. - Range: `1`-`65535` - Default value: `32667`
        """
        return pulumi.get(self, "role_priority")

    @role_priority.setter
    def role_priority(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "role_priority", value)

    @property
    @pulumi.getter(name="sysMac")
    def sys_mac(self) -> Optional[pulumi.Input[str]]:
        """
        System MAC.
        """
        return pulumi.get(self, "sys_mac")

    @sys_mac.setter
    def sys_mac(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sys_mac", value)

    @property
    @pulumi.getter(name="systemPriority")
    def system_priority(self) -> Optional[pulumi.Input[int]]:
        """
        System priority. - Range: `1`-`65535` - Default value: `32667`
        """
        return pulumi.get(self, "system_priority")

    @system_priority.setter
    def system_priority(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "system_priority", value)

    @property
    @pulumi.getter
    def track(self) -> Optional[pulumi.Input[int]]:
        """
        Tracking object to suspend vPC if object goes down. - Range: `0`-`500` - Default value: `0`
        """
        return pulumi.get(self, "track")

    @track.setter
    def track(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "track", value)

    @property
    @pulumi.getter(name="virtualIp")
    def virtual_ip(self) -> Optional[pulumi.Input[str]]:
        """
        vPC virtual IP address (vIP).
        """
        return pulumi.get(self, "virtual_ip")

    @virtual_ip.setter
    def virtual_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "virtual_ip", value)


@pulumi.input_type
class _VpcDomainState:
    def __init__(__self__, *,
                 admin_state: Optional[pulumi.Input[str]] = None,
                 auto_recovery: Optional[pulumi.Input[str]] = None,
                 auto_recovery_interval: Optional[pulumi.Input[int]] = None,
                 delay_restore_orphan_port: Optional[pulumi.Input[int]] = None,
                 delay_restore_svi: Optional[pulumi.Input[int]] = None,
                 delay_restore_vpc: Optional[pulumi.Input[int]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 domain_id: Optional[pulumi.Input[int]] = None,
                 dscp: Optional[pulumi.Input[int]] = None,
                 fast_convergence: Optional[pulumi.Input[str]] = None,
                 graceful_consistency_check: Optional[pulumi.Input[str]] = None,
                 l3_peer_router: Optional[pulumi.Input[str]] = None,
                 l3_peer_router_syslog: Optional[pulumi.Input[str]] = None,
                 l3_peer_router_syslog_interval: Optional[pulumi.Input[int]] = None,
                 peer_gateway: Optional[pulumi.Input[str]] = None,
                 peer_ip: Optional[pulumi.Input[str]] = None,
                 peer_switch: Optional[pulumi.Input[str]] = None,
                 role_priority: Optional[pulumi.Input[int]] = None,
                 sys_mac: Optional[pulumi.Input[str]] = None,
                 system_priority: Optional[pulumi.Input[int]] = None,
                 track: Optional[pulumi.Input[int]] = None,
                 virtual_ip: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering VpcDomain resources.
        :param pulumi.Input[str] admin_state: vPC suspend locally. - Choices: `enabled`, `disabled` - Default value: `enabled`
        :param pulumi.Input[str] auto_recovery: Auto Recovery. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[int] auto_recovery_interval: Auto Recovery interval. - Range: `60`-`3600` - Default value: `240`
        :param pulumi.Input[int] delay_restore_orphan_port: Delay restore for orphan ports. - Range: `0`-`300` - Default value: `0`
        :param pulumi.Input[int] delay_restore_svi: Delay restore for SVI. - Range: `1`-`3600` - Default value: `10`
        :param pulumi.Input[int] delay_restore_vpc: Delay restore for vPC links. - Range: `1`-`3600` - Default value: `30`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[int] domain_id: Domain id. - Range: `1`-`1000`
        :param pulumi.Input[int] dscp: DSCP. - Range: `0`-`63` - Default value: `0`
        :param pulumi.Input[str] fast_convergence: Fast Convergence. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[str] graceful_consistency_check: Graceful Type-1 Consistency Check. - Choices: `enabled`, `disabled` - Default value: `enabled`
        :param pulumi.Input[str] l3_peer_router: L3 Peer Router. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[str] l3_peer_router_syslog: L3 Peer Router Syslog. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[int] l3_peer_router_syslog_interval: L3 Peer Router Syslog Interval. - Range: `1`-`3600` - Default value: `3600`
        :param pulumi.Input[str] peer_gateway: Peer Gateway. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[str] peer_ip: vPC peer IP address.
        :param pulumi.Input[str] peer_switch: vPC pair switches. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[int] role_priority: Role priority. - Range: `1`-`65535` - Default value: `32667`
        :param pulumi.Input[str] sys_mac: System MAC.
        :param pulumi.Input[int] system_priority: System priority. - Range: `1`-`65535` - Default value: `32667`
        :param pulumi.Input[int] track: Tracking object to suspend vPC if object goes down. - Range: `0`-`500` - Default value: `0`
        :param pulumi.Input[str] virtual_ip: vPC virtual IP address (vIP).
        """
        if admin_state is not None:
            pulumi.set(__self__, "admin_state", admin_state)
        if auto_recovery is not None:
            pulumi.set(__self__, "auto_recovery", auto_recovery)
        if auto_recovery_interval is not None:
            pulumi.set(__self__, "auto_recovery_interval", auto_recovery_interval)
        if delay_restore_orphan_port is not None:
            pulumi.set(__self__, "delay_restore_orphan_port", delay_restore_orphan_port)
        if delay_restore_svi is not None:
            pulumi.set(__self__, "delay_restore_svi", delay_restore_svi)
        if delay_restore_vpc is not None:
            pulumi.set(__self__, "delay_restore_vpc", delay_restore_vpc)
        if device is not None:
            pulumi.set(__self__, "device", device)
        if domain_id is not None:
            pulumi.set(__self__, "domain_id", domain_id)
        if dscp is not None:
            pulumi.set(__self__, "dscp", dscp)
        if fast_convergence is not None:
            pulumi.set(__self__, "fast_convergence", fast_convergence)
        if graceful_consistency_check is not None:
            pulumi.set(__self__, "graceful_consistency_check", graceful_consistency_check)
        if l3_peer_router is not None:
            pulumi.set(__self__, "l3_peer_router", l3_peer_router)
        if l3_peer_router_syslog is not None:
            pulumi.set(__self__, "l3_peer_router_syslog", l3_peer_router_syslog)
        if l3_peer_router_syslog_interval is not None:
            pulumi.set(__self__, "l3_peer_router_syslog_interval", l3_peer_router_syslog_interval)
        if peer_gateway is not None:
            pulumi.set(__self__, "peer_gateway", peer_gateway)
        if peer_ip is not None:
            pulumi.set(__self__, "peer_ip", peer_ip)
        if peer_switch is not None:
            pulumi.set(__self__, "peer_switch", peer_switch)
        if role_priority is not None:
            pulumi.set(__self__, "role_priority", role_priority)
        if sys_mac is not None:
            pulumi.set(__self__, "sys_mac", sys_mac)
        if system_priority is not None:
            pulumi.set(__self__, "system_priority", system_priority)
        if track is not None:
            pulumi.set(__self__, "track", track)
        if virtual_ip is not None:
            pulumi.set(__self__, "virtual_ip", virtual_ip)

    @property
    @pulumi.getter(name="adminState")
    def admin_state(self) -> Optional[pulumi.Input[str]]:
        """
        vPC suspend locally. - Choices: `enabled`, `disabled` - Default value: `enabled`
        """
        return pulumi.get(self, "admin_state")

    @admin_state.setter
    def admin_state(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "admin_state", value)

    @property
    @pulumi.getter(name="autoRecovery")
    def auto_recovery(self) -> Optional[pulumi.Input[str]]:
        """
        Auto Recovery. - Choices: `enabled`, `disabled` - Default value: `disabled`
        """
        return pulumi.get(self, "auto_recovery")

    @auto_recovery.setter
    def auto_recovery(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "auto_recovery", value)

    @property
    @pulumi.getter(name="autoRecoveryInterval")
    def auto_recovery_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Auto Recovery interval. - Range: `60`-`3600` - Default value: `240`
        """
        return pulumi.get(self, "auto_recovery_interval")

    @auto_recovery_interval.setter
    def auto_recovery_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "auto_recovery_interval", value)

    @property
    @pulumi.getter(name="delayRestoreOrphanPort")
    def delay_restore_orphan_port(self) -> Optional[pulumi.Input[int]]:
        """
        Delay restore for orphan ports. - Range: `0`-`300` - Default value: `0`
        """
        return pulumi.get(self, "delay_restore_orphan_port")

    @delay_restore_orphan_port.setter
    def delay_restore_orphan_port(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "delay_restore_orphan_port", value)

    @property
    @pulumi.getter(name="delayRestoreSvi")
    def delay_restore_svi(self) -> Optional[pulumi.Input[int]]:
        """
        Delay restore for SVI. - Range: `1`-`3600` - Default value: `10`
        """
        return pulumi.get(self, "delay_restore_svi")

    @delay_restore_svi.setter
    def delay_restore_svi(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "delay_restore_svi", value)

    @property
    @pulumi.getter(name="delayRestoreVpc")
    def delay_restore_vpc(self) -> Optional[pulumi.Input[int]]:
        """
        Delay restore for vPC links. - Range: `1`-`3600` - Default value: `30`
        """
        return pulumi.get(self, "delay_restore_vpc")

    @delay_restore_vpc.setter
    def delay_restore_vpc(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "delay_restore_vpc", value)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> Optional[pulumi.Input[int]]:
        """
        Domain id. - Range: `1`-`1000`
        """
        return pulumi.get(self, "domain_id")

    @domain_id.setter
    def domain_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "domain_id", value)

    @property
    @pulumi.getter
    def dscp(self) -> Optional[pulumi.Input[int]]:
        """
        DSCP. - Range: `0`-`63` - Default value: `0`
        """
        return pulumi.get(self, "dscp")

    @dscp.setter
    def dscp(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "dscp", value)

    @property
    @pulumi.getter(name="fastConvergence")
    def fast_convergence(self) -> Optional[pulumi.Input[str]]:
        """
        Fast Convergence. - Choices: `enabled`, `disabled` - Default value: `disabled`
        """
        return pulumi.get(self, "fast_convergence")

    @fast_convergence.setter
    def fast_convergence(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fast_convergence", value)

    @property
    @pulumi.getter(name="gracefulConsistencyCheck")
    def graceful_consistency_check(self) -> Optional[pulumi.Input[str]]:
        """
        Graceful Type-1 Consistency Check. - Choices: `enabled`, `disabled` - Default value: `enabled`
        """
        return pulumi.get(self, "graceful_consistency_check")

    @graceful_consistency_check.setter
    def graceful_consistency_check(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "graceful_consistency_check", value)

    @property
    @pulumi.getter(name="l3PeerRouter")
    def l3_peer_router(self) -> Optional[pulumi.Input[str]]:
        """
        L3 Peer Router. - Choices: `enabled`, `disabled` - Default value: `disabled`
        """
        return pulumi.get(self, "l3_peer_router")

    @l3_peer_router.setter
    def l3_peer_router(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "l3_peer_router", value)

    @property
    @pulumi.getter(name="l3PeerRouterSyslog")
    def l3_peer_router_syslog(self) -> Optional[pulumi.Input[str]]:
        """
        L3 Peer Router Syslog. - Choices: `enabled`, `disabled` - Default value: `disabled`
        """
        return pulumi.get(self, "l3_peer_router_syslog")

    @l3_peer_router_syslog.setter
    def l3_peer_router_syslog(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "l3_peer_router_syslog", value)

    @property
    @pulumi.getter(name="l3PeerRouterSyslogInterval")
    def l3_peer_router_syslog_interval(self) -> Optional[pulumi.Input[int]]:
        """
        L3 Peer Router Syslog Interval. - Range: `1`-`3600` - Default value: `3600`
        """
        return pulumi.get(self, "l3_peer_router_syslog_interval")

    @l3_peer_router_syslog_interval.setter
    def l3_peer_router_syslog_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "l3_peer_router_syslog_interval", value)

    @property
    @pulumi.getter(name="peerGateway")
    def peer_gateway(self) -> Optional[pulumi.Input[str]]:
        """
        Peer Gateway. - Choices: `enabled`, `disabled` - Default value: `disabled`
        """
        return pulumi.get(self, "peer_gateway")

    @peer_gateway.setter
    def peer_gateway(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "peer_gateway", value)

    @property
    @pulumi.getter(name="peerIp")
    def peer_ip(self) -> Optional[pulumi.Input[str]]:
        """
        vPC peer IP address.
        """
        return pulumi.get(self, "peer_ip")

    @peer_ip.setter
    def peer_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "peer_ip", value)

    @property
    @pulumi.getter(name="peerSwitch")
    def peer_switch(self) -> Optional[pulumi.Input[str]]:
        """
        vPC pair switches. - Choices: `enabled`, `disabled` - Default value: `disabled`
        """
        return pulumi.get(self, "peer_switch")

    @peer_switch.setter
    def peer_switch(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "peer_switch", value)

    @property
    @pulumi.getter(name="rolePriority")
    def role_priority(self) -> Optional[pulumi.Input[int]]:
        """
        Role priority. - Range: `1`-`65535` - Default value: `32667`
        """
        return pulumi.get(self, "role_priority")

    @role_priority.setter
    def role_priority(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "role_priority", value)

    @property
    @pulumi.getter(name="sysMac")
    def sys_mac(self) -> Optional[pulumi.Input[str]]:
        """
        System MAC.
        """
        return pulumi.get(self, "sys_mac")

    @sys_mac.setter
    def sys_mac(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sys_mac", value)

    @property
    @pulumi.getter(name="systemPriority")
    def system_priority(self) -> Optional[pulumi.Input[int]]:
        """
        System priority. - Range: `1`-`65535` - Default value: `32667`
        """
        return pulumi.get(self, "system_priority")

    @system_priority.setter
    def system_priority(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "system_priority", value)

    @property
    @pulumi.getter
    def track(self) -> Optional[pulumi.Input[int]]:
        """
        Tracking object to suspend vPC if object goes down. - Range: `0`-`500` - Default value: `0`
        """
        return pulumi.get(self, "track")

    @track.setter
    def track(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "track", value)

    @property
    @pulumi.getter(name="virtualIp")
    def virtual_ip(self) -> Optional[pulumi.Input[str]]:
        """
        vPC virtual IP address (vIP).
        """
        return pulumi.get(self, "virtual_ip")

    @virtual_ip.setter
    def virtual_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "virtual_ip", value)


class VpcDomain(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 admin_state: Optional[pulumi.Input[str]] = None,
                 auto_recovery: Optional[pulumi.Input[str]] = None,
                 auto_recovery_interval: Optional[pulumi.Input[int]] = None,
                 delay_restore_orphan_port: Optional[pulumi.Input[int]] = None,
                 delay_restore_svi: Optional[pulumi.Input[int]] = None,
                 delay_restore_vpc: Optional[pulumi.Input[int]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 domain_id: Optional[pulumi.Input[int]] = None,
                 dscp: Optional[pulumi.Input[int]] = None,
                 fast_convergence: Optional[pulumi.Input[str]] = None,
                 graceful_consistency_check: Optional[pulumi.Input[str]] = None,
                 l3_peer_router: Optional[pulumi.Input[str]] = None,
                 l3_peer_router_syslog: Optional[pulumi.Input[str]] = None,
                 l3_peer_router_syslog_interval: Optional[pulumi.Input[int]] = None,
                 peer_gateway: Optional[pulumi.Input[str]] = None,
                 peer_ip: Optional[pulumi.Input[str]] = None,
                 peer_switch: Optional[pulumi.Input[str]] = None,
                 role_priority: Optional[pulumi.Input[int]] = None,
                 sys_mac: Optional[pulumi.Input[str]] = None,
                 system_priority: Optional[pulumi.Input[int]] = None,
                 track: Optional[pulumi.Input[int]] = None,
                 virtual_ip: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        This resource can manage the vPC domain configuration.

        - API Documentation: [vpcDom](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/System/vpc:Dom/)

        ## Example Usage

        ```python
        import pulumi
        import lbrlabs_pulumi_nxos as nxos

        example = nxos.VpcDomain("example",
            admin_state="enabled",
            auto_recovery="enabled",
            auto_recovery_interval=480,
            delay_restore_orphan_port=10,
            delay_restore_svi=20,
            delay_restore_vpc=60,
            domain_id=100,
            dscp=0,
            fast_convergence="enabled",
            graceful_consistency_check="disabled",
            l3_peer_router="enabled",
            l3_peer_router_syslog="enabled",
            l3_peer_router_syslog_interval=3000,
            peer_gateway="enabled",
            peer_ip="1.2.3.4",
            peer_switch="enabled",
            role_priority=100,
            sys_mac="01:01:01:01:01:01",
            system_priority=100,
            track=10,
            virtual_ip="1.1.1.1")
        ```

        ## Import

        ```sh
         $ pulumi import nxos:index/vpcDomain:VpcDomain example "sys/vpc/inst/dom"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] admin_state: vPC suspend locally. - Choices: `enabled`, `disabled` - Default value: `enabled`
        :param pulumi.Input[str] auto_recovery: Auto Recovery. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[int] auto_recovery_interval: Auto Recovery interval. - Range: `60`-`3600` - Default value: `240`
        :param pulumi.Input[int] delay_restore_orphan_port: Delay restore for orphan ports. - Range: `0`-`300` - Default value: `0`
        :param pulumi.Input[int] delay_restore_svi: Delay restore for SVI. - Range: `1`-`3600` - Default value: `10`
        :param pulumi.Input[int] delay_restore_vpc: Delay restore for vPC links. - Range: `1`-`3600` - Default value: `30`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[int] domain_id: Domain id. - Range: `1`-`1000`
        :param pulumi.Input[int] dscp: DSCP. - Range: `0`-`63` - Default value: `0`
        :param pulumi.Input[str] fast_convergence: Fast Convergence. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[str] graceful_consistency_check: Graceful Type-1 Consistency Check. - Choices: `enabled`, `disabled` - Default value: `enabled`
        :param pulumi.Input[str] l3_peer_router: L3 Peer Router. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[str] l3_peer_router_syslog: L3 Peer Router Syslog. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[int] l3_peer_router_syslog_interval: L3 Peer Router Syslog Interval. - Range: `1`-`3600` - Default value: `3600`
        :param pulumi.Input[str] peer_gateway: Peer Gateway. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[str] peer_ip: vPC peer IP address.
        :param pulumi.Input[str] peer_switch: vPC pair switches. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[int] role_priority: Role priority. - Range: `1`-`65535` - Default value: `32667`
        :param pulumi.Input[str] sys_mac: System MAC.
        :param pulumi.Input[int] system_priority: System priority. - Range: `1`-`65535` - Default value: `32667`
        :param pulumi.Input[int] track: Tracking object to suspend vPC if object goes down. - Range: `0`-`500` - Default value: `0`
        :param pulumi.Input[str] virtual_ip: vPC virtual IP address (vIP).
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: VpcDomainArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource can manage the vPC domain configuration.

        - API Documentation: [vpcDom](https://pubhub.devnetcloud.com/media/dme-docs-10-2-2/docs/System/vpc:Dom/)

        ## Example Usage

        ```python
        import pulumi
        import lbrlabs_pulumi_nxos as nxos

        example = nxos.VpcDomain("example",
            admin_state="enabled",
            auto_recovery="enabled",
            auto_recovery_interval=480,
            delay_restore_orphan_port=10,
            delay_restore_svi=20,
            delay_restore_vpc=60,
            domain_id=100,
            dscp=0,
            fast_convergence="enabled",
            graceful_consistency_check="disabled",
            l3_peer_router="enabled",
            l3_peer_router_syslog="enabled",
            l3_peer_router_syslog_interval=3000,
            peer_gateway="enabled",
            peer_ip="1.2.3.4",
            peer_switch="enabled",
            role_priority=100,
            sys_mac="01:01:01:01:01:01",
            system_priority=100,
            track=10,
            virtual_ip="1.1.1.1")
        ```

        ## Import

        ```sh
         $ pulumi import nxos:index/vpcDomain:VpcDomain example "sys/vpc/inst/dom"
        ```

        :param str resource_name: The name of the resource.
        :param VpcDomainArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(VpcDomainArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 admin_state: Optional[pulumi.Input[str]] = None,
                 auto_recovery: Optional[pulumi.Input[str]] = None,
                 auto_recovery_interval: Optional[pulumi.Input[int]] = None,
                 delay_restore_orphan_port: Optional[pulumi.Input[int]] = None,
                 delay_restore_svi: Optional[pulumi.Input[int]] = None,
                 delay_restore_vpc: Optional[pulumi.Input[int]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 domain_id: Optional[pulumi.Input[int]] = None,
                 dscp: Optional[pulumi.Input[int]] = None,
                 fast_convergence: Optional[pulumi.Input[str]] = None,
                 graceful_consistency_check: Optional[pulumi.Input[str]] = None,
                 l3_peer_router: Optional[pulumi.Input[str]] = None,
                 l3_peer_router_syslog: Optional[pulumi.Input[str]] = None,
                 l3_peer_router_syslog_interval: Optional[pulumi.Input[int]] = None,
                 peer_gateway: Optional[pulumi.Input[str]] = None,
                 peer_ip: Optional[pulumi.Input[str]] = None,
                 peer_switch: Optional[pulumi.Input[str]] = None,
                 role_priority: Optional[pulumi.Input[int]] = None,
                 sys_mac: Optional[pulumi.Input[str]] = None,
                 system_priority: Optional[pulumi.Input[int]] = None,
                 track: Optional[pulumi.Input[int]] = None,
                 virtual_ip: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = VpcDomainArgs.__new__(VpcDomainArgs)

            __props__.__dict__["admin_state"] = admin_state
            __props__.__dict__["auto_recovery"] = auto_recovery
            __props__.__dict__["auto_recovery_interval"] = auto_recovery_interval
            __props__.__dict__["delay_restore_orphan_port"] = delay_restore_orphan_port
            __props__.__dict__["delay_restore_svi"] = delay_restore_svi
            __props__.__dict__["delay_restore_vpc"] = delay_restore_vpc
            __props__.__dict__["device"] = device
            if domain_id is None and not opts.urn:
                raise TypeError("Missing required property 'domain_id'")
            __props__.__dict__["domain_id"] = domain_id
            __props__.__dict__["dscp"] = dscp
            __props__.__dict__["fast_convergence"] = fast_convergence
            __props__.__dict__["graceful_consistency_check"] = graceful_consistency_check
            __props__.__dict__["l3_peer_router"] = l3_peer_router
            __props__.__dict__["l3_peer_router_syslog"] = l3_peer_router_syslog
            __props__.__dict__["l3_peer_router_syslog_interval"] = l3_peer_router_syslog_interval
            __props__.__dict__["peer_gateway"] = peer_gateway
            __props__.__dict__["peer_ip"] = peer_ip
            __props__.__dict__["peer_switch"] = peer_switch
            __props__.__dict__["role_priority"] = role_priority
            __props__.__dict__["sys_mac"] = sys_mac
            __props__.__dict__["system_priority"] = system_priority
            __props__.__dict__["track"] = track
            __props__.__dict__["virtual_ip"] = virtual_ip
        super(VpcDomain, __self__).__init__(
            'nxos:index/vpcDomain:VpcDomain',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            admin_state: Optional[pulumi.Input[str]] = None,
            auto_recovery: Optional[pulumi.Input[str]] = None,
            auto_recovery_interval: Optional[pulumi.Input[int]] = None,
            delay_restore_orphan_port: Optional[pulumi.Input[int]] = None,
            delay_restore_svi: Optional[pulumi.Input[int]] = None,
            delay_restore_vpc: Optional[pulumi.Input[int]] = None,
            device: Optional[pulumi.Input[str]] = None,
            domain_id: Optional[pulumi.Input[int]] = None,
            dscp: Optional[pulumi.Input[int]] = None,
            fast_convergence: Optional[pulumi.Input[str]] = None,
            graceful_consistency_check: Optional[pulumi.Input[str]] = None,
            l3_peer_router: Optional[pulumi.Input[str]] = None,
            l3_peer_router_syslog: Optional[pulumi.Input[str]] = None,
            l3_peer_router_syslog_interval: Optional[pulumi.Input[int]] = None,
            peer_gateway: Optional[pulumi.Input[str]] = None,
            peer_ip: Optional[pulumi.Input[str]] = None,
            peer_switch: Optional[pulumi.Input[str]] = None,
            role_priority: Optional[pulumi.Input[int]] = None,
            sys_mac: Optional[pulumi.Input[str]] = None,
            system_priority: Optional[pulumi.Input[int]] = None,
            track: Optional[pulumi.Input[int]] = None,
            virtual_ip: Optional[pulumi.Input[str]] = None) -> 'VpcDomain':
        """
        Get an existing VpcDomain resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] admin_state: vPC suspend locally. - Choices: `enabled`, `disabled` - Default value: `enabled`
        :param pulumi.Input[str] auto_recovery: Auto Recovery. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[int] auto_recovery_interval: Auto Recovery interval. - Range: `60`-`3600` - Default value: `240`
        :param pulumi.Input[int] delay_restore_orphan_port: Delay restore for orphan ports. - Range: `0`-`300` - Default value: `0`
        :param pulumi.Input[int] delay_restore_svi: Delay restore for SVI. - Range: `1`-`3600` - Default value: `10`
        :param pulumi.Input[int] delay_restore_vpc: Delay restore for vPC links. - Range: `1`-`3600` - Default value: `30`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[int] domain_id: Domain id. - Range: `1`-`1000`
        :param pulumi.Input[int] dscp: DSCP. - Range: `0`-`63` - Default value: `0`
        :param pulumi.Input[str] fast_convergence: Fast Convergence. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[str] graceful_consistency_check: Graceful Type-1 Consistency Check. - Choices: `enabled`, `disabled` - Default value: `enabled`
        :param pulumi.Input[str] l3_peer_router: L3 Peer Router. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[str] l3_peer_router_syslog: L3 Peer Router Syslog. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[int] l3_peer_router_syslog_interval: L3 Peer Router Syslog Interval. - Range: `1`-`3600` - Default value: `3600`
        :param pulumi.Input[str] peer_gateway: Peer Gateway. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[str] peer_ip: vPC peer IP address.
        :param pulumi.Input[str] peer_switch: vPC pair switches. - Choices: `enabled`, `disabled` - Default value: `disabled`
        :param pulumi.Input[int] role_priority: Role priority. - Range: `1`-`65535` - Default value: `32667`
        :param pulumi.Input[str] sys_mac: System MAC.
        :param pulumi.Input[int] system_priority: System priority. - Range: `1`-`65535` - Default value: `32667`
        :param pulumi.Input[int] track: Tracking object to suspend vPC if object goes down. - Range: `0`-`500` - Default value: `0`
        :param pulumi.Input[str] virtual_ip: vPC virtual IP address (vIP).
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _VpcDomainState.__new__(_VpcDomainState)

        __props__.__dict__["admin_state"] = admin_state
        __props__.__dict__["auto_recovery"] = auto_recovery
        __props__.__dict__["auto_recovery_interval"] = auto_recovery_interval
        __props__.__dict__["delay_restore_orphan_port"] = delay_restore_orphan_port
        __props__.__dict__["delay_restore_svi"] = delay_restore_svi
        __props__.__dict__["delay_restore_vpc"] = delay_restore_vpc
        __props__.__dict__["device"] = device
        __props__.__dict__["domain_id"] = domain_id
        __props__.__dict__["dscp"] = dscp
        __props__.__dict__["fast_convergence"] = fast_convergence
        __props__.__dict__["graceful_consistency_check"] = graceful_consistency_check
        __props__.__dict__["l3_peer_router"] = l3_peer_router
        __props__.__dict__["l3_peer_router_syslog"] = l3_peer_router_syslog
        __props__.__dict__["l3_peer_router_syslog_interval"] = l3_peer_router_syslog_interval
        __props__.__dict__["peer_gateway"] = peer_gateway
        __props__.__dict__["peer_ip"] = peer_ip
        __props__.__dict__["peer_switch"] = peer_switch
        __props__.__dict__["role_priority"] = role_priority
        __props__.__dict__["sys_mac"] = sys_mac
        __props__.__dict__["system_priority"] = system_priority
        __props__.__dict__["track"] = track
        __props__.__dict__["virtual_ip"] = virtual_ip
        return VpcDomain(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="adminState")
    def admin_state(self) -> pulumi.Output[str]:
        """
        vPC suspend locally. - Choices: `enabled`, `disabled` - Default value: `enabled`
        """
        return pulumi.get(self, "admin_state")

    @property
    @pulumi.getter(name="autoRecovery")
    def auto_recovery(self) -> pulumi.Output[str]:
        """
        Auto Recovery. - Choices: `enabled`, `disabled` - Default value: `disabled`
        """
        return pulumi.get(self, "auto_recovery")

    @property
    @pulumi.getter(name="autoRecoveryInterval")
    def auto_recovery_interval(self) -> pulumi.Output[int]:
        """
        Auto Recovery interval. - Range: `60`-`3600` - Default value: `240`
        """
        return pulumi.get(self, "auto_recovery_interval")

    @property
    @pulumi.getter(name="delayRestoreOrphanPort")
    def delay_restore_orphan_port(self) -> pulumi.Output[int]:
        """
        Delay restore for orphan ports. - Range: `0`-`300` - Default value: `0`
        """
        return pulumi.get(self, "delay_restore_orphan_port")

    @property
    @pulumi.getter(name="delayRestoreSvi")
    def delay_restore_svi(self) -> pulumi.Output[int]:
        """
        Delay restore for SVI. - Range: `1`-`3600` - Default value: `10`
        """
        return pulumi.get(self, "delay_restore_svi")

    @property
    @pulumi.getter(name="delayRestoreVpc")
    def delay_restore_vpc(self) -> pulumi.Output[int]:
        """
        Delay restore for vPC links. - Range: `1`-`3600` - Default value: `30`
        """
        return pulumi.get(self, "delay_restore_vpc")

    @property
    @pulumi.getter
    def device(self) -> pulumi.Output[Optional[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> pulumi.Output[int]:
        """
        Domain id. - Range: `1`-`1000`
        """
        return pulumi.get(self, "domain_id")

    @property
    @pulumi.getter
    def dscp(self) -> pulumi.Output[int]:
        """
        DSCP. - Range: `0`-`63` - Default value: `0`
        """
        return pulumi.get(self, "dscp")

    @property
    @pulumi.getter(name="fastConvergence")
    def fast_convergence(self) -> pulumi.Output[str]:
        """
        Fast Convergence. - Choices: `enabled`, `disabled` - Default value: `disabled`
        """
        return pulumi.get(self, "fast_convergence")

    @property
    @pulumi.getter(name="gracefulConsistencyCheck")
    def graceful_consistency_check(self) -> pulumi.Output[str]:
        """
        Graceful Type-1 Consistency Check. - Choices: `enabled`, `disabled` - Default value: `enabled`
        """
        return pulumi.get(self, "graceful_consistency_check")

    @property
    @pulumi.getter(name="l3PeerRouter")
    def l3_peer_router(self) -> pulumi.Output[str]:
        """
        L3 Peer Router. - Choices: `enabled`, `disabled` - Default value: `disabled`
        """
        return pulumi.get(self, "l3_peer_router")

    @property
    @pulumi.getter(name="l3PeerRouterSyslog")
    def l3_peer_router_syslog(self) -> pulumi.Output[str]:
        """
        L3 Peer Router Syslog. - Choices: `enabled`, `disabled` - Default value: `disabled`
        """
        return pulumi.get(self, "l3_peer_router_syslog")

    @property
    @pulumi.getter(name="l3PeerRouterSyslogInterval")
    def l3_peer_router_syslog_interval(self) -> pulumi.Output[int]:
        """
        L3 Peer Router Syslog Interval. - Range: `1`-`3600` - Default value: `3600`
        """
        return pulumi.get(self, "l3_peer_router_syslog_interval")

    @property
    @pulumi.getter(name="peerGateway")
    def peer_gateway(self) -> pulumi.Output[str]:
        """
        Peer Gateway. - Choices: `enabled`, `disabled` - Default value: `disabled`
        """
        return pulumi.get(self, "peer_gateway")

    @property
    @pulumi.getter(name="peerIp")
    def peer_ip(self) -> pulumi.Output[Optional[str]]:
        """
        vPC peer IP address.
        """
        return pulumi.get(self, "peer_ip")

    @property
    @pulumi.getter(name="peerSwitch")
    def peer_switch(self) -> pulumi.Output[str]:
        """
        vPC pair switches. - Choices: `enabled`, `disabled` - Default value: `disabled`
        """
        return pulumi.get(self, "peer_switch")

    @property
    @pulumi.getter(name="rolePriority")
    def role_priority(self) -> pulumi.Output[int]:
        """
        Role priority. - Range: `1`-`65535` - Default value: `32667`
        """
        return pulumi.get(self, "role_priority")

    @property
    @pulumi.getter(name="sysMac")
    def sys_mac(self) -> pulumi.Output[Optional[str]]:
        """
        System MAC.
        """
        return pulumi.get(self, "sys_mac")

    @property
    @pulumi.getter(name="systemPriority")
    def system_priority(self) -> pulumi.Output[int]:
        """
        System priority. - Range: `1`-`65535` - Default value: `32667`
        """
        return pulumi.get(self, "system_priority")

    @property
    @pulumi.getter
    def track(self) -> pulumi.Output[int]:
        """
        Tracking object to suspend vPC if object goes down. - Range: `0`-`500` - Default value: `0`
        """
        return pulumi.get(self, "track")

    @property
    @pulumi.getter(name="virtualIp")
    def virtual_ip(self) -> pulumi.Output[Optional[str]]:
        """
        vPC virtual IP address (vIP).
        """
        return pulumi.get(self, "virtual_ip")

