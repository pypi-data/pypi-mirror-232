[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
name = "wordcab"
dynamic = ["version"]
description = "ðŸ“– Transcribe and Summarize any business communication at scale with Wordcab's API"
license = "Apache-2.0"
readme = "README.md"
requires-python = ">=3.8,<3.12"
keywords = ["wordcab", "sdk", "api", "transcription", "summarization"]
authors = [
    { name = "Thomas Chaigneau", email = "thomas@wordcab.com" },
    { name = "Wordcab", email = "info@wordcab.com" },
]
classifiers = [
  "Topic :: Internet",
  "Topic :: Software Development",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "click>=8.0.1",
    "requests>=2.31.0",
    "validators>=0.20.0",
]

[project.urls]
Changelog = "https://github.com/Wordcab/wordcab-python/releases"
Documentation = "https://wordcab-python.readthedocs.io"
Homepage = "https://github.com/Wordcab/wordcab-python"
Issues = "https://github.com/Wordcab/wordcab-python/issues"
Source = "https://github.com/Wordcab/wordcab-python"

[tool.hatch.version]
path = "src/wordcab/__init__.py"

[project.optional-dependencies]
live = [
  "numpy>=1.21.2",
  "pyaudio>=0.2.11",
  "websockets>=11.0.3",
]
docs = [
  "mkdocs>=1.4.0",
  "mkdocs-material>=8.5.4",
  "mkdocs-git-revision-date-localized-plugin>=1.1.0",
  "mkdocstrings[python]>=0.20.0",
]
quality = [
  "black>=22.10.0",
  "ruff>=0.0.263",
  "pre-commit>=2.20.0",
]
tests = [
  "httpx>=0.23.3",
  "numpy>=1.21.2",
  "pyaudio>=0.2.11",
  "pytest>=7.4",
  "pytest-asyncio>=0.21.1",
  "pytest-cov>=4.1",
  "responses>=0.23.3",
  "websockets>=11.0.3",
]

[project.scripts]
wordcab = "wordcab.__main__:main"

[tool.hatch.envs.quality]
features = [
  "quality",
]

[tool.hatch.envs.quality.scripts]
check = [
  "black --check --diff --preview src tests",
  "ruff src tests",
]
format = [
  "black --preview src tests",
  "ruff --fix src tests",
  "check",
]

[tool.ruff]
ignore = [
  "E501", # line too long, handled by black
  "B008", # do not perform function calls in argument defaults
  "C901", # too complex
]
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "I", # isort
  "C", # flake8-comprehensions
  "B", # flake8-bugbear
]

[tool.ruff.isort]
known-first-party = ["wordcab_transcribe"]

[tool.hatch.envs.tests]
features = [
  "tests",
]

[tool.hatch.envs.tests.scripts]
run = "pytest --cov=wordcab --cov-report=term-missing tests/ --durations 0 -s -vv {args:tests}"

[tool.hatch.envs.docs]
features = [
  "docs",
]

[tool.hatch.envs.docs.scripts]
build = [
  "mkdocs build",
]
serve = [
  "mkdocs serve",
]

[[tool.hatch.envs.tests.matrix]]
python = ["38"]

[tool.hatch.build.targets.sdist]
exclude = [
  "/.github",
  "/.vscode",
  "/docs",
  "/.devcontainer",
  "/.pre-commit-config.yaml",
  "/.gitignore",
  "/tests",
  "/Dockerfile",
  "/.dockerignore",
]
