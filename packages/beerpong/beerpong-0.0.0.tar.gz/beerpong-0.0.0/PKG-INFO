Metadata-Version: 2.1
Name: beerpong
Version: 0.0.0
Summary: Bracketing tool with beerpong in mind
Home-page: https://github.com/juhannc/beerpong.git
Author: Johann Christensen
Author-email: johannchristensen@outlook.de
License: MIT
Project-URL: Source, https://github.com/juhannc/beerpong.git
Project-URL: Tracker, https://github.com/juhannc/beerpong/issues
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: X11 Applications :: Qt
Classifier: Intended Audience :: End Users/Desktop
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Games/Entertainment
Requires-Python: >=3.8
Description-Content-Type: text/markdown; charset=UTF-8
License-File: LICENSE
Requires-Dist: PyQt6==6.5.2
Provides-Extra: tests
Requires-Dist: coverage; extra == "tests"
Requires-Dist: flake8; extra == "tests"
Requires-Dist: mypy; extra == "tests"
Requires-Dist: pre-commit; extra == "tests"
Requires-Dist: pycodestyle; extra == "tests"
Requires-Dist: pytest>=6.2.2; extra == "tests"
Requires-Dist: pytest-cov; extra == "tests"
Requires-Dist: pylint; extra == "tests"
Provides-Extra: all
Requires-Dist: coverage; extra == "all"
Requires-Dist: flake8; extra == "all"
Requires-Dist: mypy; extra == "all"
Requires-Dist: pre-commit; extra == "all"
Requires-Dist: pycodestyle; extra == "all"
Requires-Dist: pytest>=6.2.2; extra == "all"
Requires-Dist: pytest-cov; extra == "all"
Requires-Dist: pylint; extra == "all"

# Beerpong

![pytest](https://github.com/juhannc/beerpong/actions/workflows/pytest.yml/badge.svg)
[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/juhannc/beerpong/main.svg)](https://results.pre-commit.ci/latest/github/juhannc/beerpong/main)
[![codecov](https://codecov.io/gh/juhannc/beerpong/branch/main/graph/badge.svg)](https://codecov.io/gh/juhannc/beerpong)
[![Maintainability](https://api.codeclimate.com/v1/badges/ba14c01e22ad0343af8c/maintainability)](https://codeclimate.com/github/juhannc/beerpong/maintainability)

[![Pypi Status](https://badge.fury.io/py/beerpong.svg)](https://badge.fury.io/py/beerpong)

Bracketing tool with beerpong in mind

## Description

A simple yet powerful bracketing tool with dual window design and beerpong in mind.

## Installation

### End user

Install the most recent stable build via

```shell
pip install beerpong
```

### Developers

Clone the repository via

```shell
git clone https://github.com/juhannc/beerpong.git
```

Afterwards, navigate into the cloned repository and create a install the package via

```shell
python3 -m pip install -e .
```

for basic features.

Or, if you also want to locally run tests, you can use

```shell
python3 -m pip install -e '.[tests]'
```

If you want to have _all_ the dependencies installed, use

```shell
python3 -m pip install -e '.[all]'
```

Finally, to install the pre-commit hooks, run

```shell
pre-commit install
```

Now, prior to any commit, the hooks defined in [`.pre-commit-config.yaml`](./.pre-commit-config.yaml) will be ran.
A failure in any hook will block the commit.
Although, most of the errors, like formatting, will correct themselves.
You just have to re-add all changed files and commit again.

Alternatively, you can run the pipeline at any time to invoke changes before they block commits with

```shell
pre-commit run --all-files
```

## Usage

To run the app, simply use

```shell
beerpong
```
