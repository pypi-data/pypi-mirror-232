name: "Python Release"
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]
jobs:
  unit-tests:
    strategy:
        matrix:
            os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: 'us-east-1'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install pypa/build
        run: >-
          python3 -m
          pip install
          build hatchling
          --user
      - name: Make VERSION
        run: python make_version.py
      - name: install self
        run: pip install -e .
      - name: Configure AWS
        run: |
            aws --profile default configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws --profile default configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws --profile default configure set region "us-east-1"
            aws sts get-caller-identity
      - name: Unit Tests
        run: pytest
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Style Guide
        run: flake8
  build-and-publish:
    name: Build and publish Python 🐍 distributions 📦 to PyPI and TestPyPI
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
            echo "$GITHUB_CONTEXT"
            echo "${{github.ref}}"
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install pypa/build
        run: >-
          python3 -m
          pip install
          build
          --user
      - name: Make VERSION
        run: python make_version.py
      - name: Build a binary wheel and a source tarball
        run: >-
          python3 -m
          build
          --sdist
          --wheel
          --outdir dist/
          .
      - name: Publish distribution 📦 to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
      - name: Publish distribution 📦 to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
