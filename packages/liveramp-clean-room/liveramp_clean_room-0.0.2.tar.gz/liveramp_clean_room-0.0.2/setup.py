# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['liveramp_clean_room', 'liveramp_clean_room.datahub']

package_data = \
{'': ['*'], 'liveramp_clean_room': ['config/*']}

install_requires = \
['Jinja2>=3.1.2,<4.0.0',
 'backoff>=2.2.1,<3.0.0',
 'cachetools>=4.2.1,<5.0.0',
 'numpy>=1.22.0,<2.0.0',
 'pandas>=1.5.3,<2.0.0',
 'pyarrow>=11.0.0,<12.0.0',
 'requests>=2.31.0,<3.0.0',
 'sqlglot>=18.1.0,<19.0.0',
 'toml>=0.10.2,<0.11.0']

setup_kwargs = {
    'name': 'liveramp-clean-room',
    'version': '0.0.2',
    'description': "This module provides high level functions for interacting with liveramp's clean room API.",
    'long_description': '# Liveramp clean room\nThis library provides high level functions for interacting with liveramp\'s clean room API. Whilst users can directly interact with the API, we highly recommend the use of this client as it provides the following benefits:\n- Automatic fetching and efficient caching of access token\n- Automatic fetching of query status with exponential backoff\n- Provides a simple interface for fetching query result as a pandas dataframe\n- Provides user friendly interfaces for interacting with assets and associated permissions\n- Provides clear and intuitive error messages\n\n\n## Pre-Requisites\n\n\n### Credentials File\n\n\nUse of the client requires an account configured with access to an organization within Data Hub. LiveRamp customers must use a service account for that purpose. A service account credential, in the form of a JSON file, can be generated by a LiveRamp employee and shared securely.\n\n\n### Installation\n\n\nThe Client is hosted on https://pypi.org/project/liveramp-clean-room/ and thus can be installed via\n\n\n```bash\npip install liveramp_clean_room\n```\n\n\nOnce installed the client be instantiated and added to your code as the example below shows:\n\n\n```python\nfrom liveramp_clean_room import datahub\n\n\n## Initialize a client\norg_id = "00XXX0XXX0XXX00X0XXX000XXX"\ncredentials_file = "Path to service account file"\nclient = datahub.Client(org_id, credentials_file)\n```\nWhere `org_id` is the id of an organization within DataHub and `credentials_file` is the JSON file location of your service account\n\n\n## Running Queries\n\n\nTo run a query utilize the run_query function. DataHub supports the following query types:\n\n\n- Data Manipulation Language (DML)\n\n\n    `SELECT query`\n\n\n- Data Definition Language (DDL)\n\n\n    `CREATE OR REPLACE FUNCTION/DROP FUNCTION)`, used to create or drop UDFs, a createdAssetID will be returned in the response. \n\n\nExample: Run a query and get results\n---\n```python\nfrom liveramp_clean_room import datahub\n\n\norg_id = "00XXX0XXX0XXX00X0XXX000XXX"\ncredentials_file = "Path to service account file"\nclient = datahub.Client(org_id, credentials_file)\nquery_id = client.run_query("select * from schema.mytable")\n\n\n## Fetch result as a pandas dataframe\ndataframe = client.get_result(query_id)\n```\n\n\n> Note that the client returns a Pandas Dataframe\n\n',
    'author': 'Datahub Eng',
    'author_email': 'datahub_ops@liveramp.com',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'None',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.8,<4.0',
}


setup(**setup_kwargs)
