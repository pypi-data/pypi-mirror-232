# AUTOGENERATED! DO NOT EDIT! File to edit: ../notebooks/08_etf_pipeline.ipynb.

# %% auto 0
__all__ = ['execution_environment', 'overrides', 'directory_path', 'etfs', 'equities', 'date_range', 'markouts',
           'finest_resample', 'max_markout', 'load', 'clip_trading_hours', 'add_ticker_column', 'ticker',
           'set_hydra_overrides']

# %% ../notebooks/08_etf_pipeline.ipynb 4
import os

import click
from arcticdb import Arctic, QueryBuilder
from hydra import initialize, initialize_config_module, initialize_config_dir, compose
from omegaconf import OmegaConf
from pathlib import Path
from .config import MainConfig, register_configs
from .preprocessing import *
from .querying import *
from .flow_decomposition import *
import pandas as pd
from sklearn.linear_model import LinearRegression
from itertools import product
import datetime
from dataclasses import dataclass
from functools import partial
import json
from typing import Literal
import numpy as np
from pprint import pprint

# %% ../notebooks/08_etf_pipeline.ipynb 5
def set_hydra_overrides(execution_environment: Literal["local", "server"]):
    match execution_environment:
        case "local":
            overrides = ["hyperparameters=simple", "universe=simple", "data_config=local"]
        case "server":
            # overrides = ["hyperparameters=full", "universe=XLE", "data_config=server"]
            overrides = ["hyperparameters=full"]
        case _:
            raise ValueError("execution_environment must be either 'local' or 'server'")
    return overrides

os.environ["ETF_RUN_MODE"] = "server"
execution_environment = os.environ.get("ETF_RUN_MODE")
overrides = set_hydra_overrides(execution_environment)
print(overrides)
overrides = ["hyperparameters=simple", "universe=simple", "data_config=local"]

register_configs()
with initialize(version_base=None, config_path=None):
    
    # defaults = [{"hyperparameters": "simple"}, "_self_", {"override hydra/launcher": "joblib"}]
    overrides = ["data_config.csv_files_path=baz"]
    overrides = ["data_config=server"]
    cfg_omega = compose(config_name="config", overrides=overrides)
    print(cfg_omega)
    cfg: MainConfig = OmegaConf.to_object(compose(config_name="config", overrides=overrides))
    print(cfg)

directory_path = cfg.data_config.csv_files_path
etfs = cfg.universe.etfs
equities = cfg.universe.equities
# fix this
date_range = tuple(cfg.data_config.date_range)
markouts = cfg.hyperparameters.markouts
finest_resample = cfg.hyperparameters.finest_resample
max_markout = cfg.hyperparameters.max_markout

load: Literal["both", "messages", "book"] = "both"
clip_trading_hours = True
add_ticker_column = True

ticker = "APA"
date_range = ("2020-01-02", "2020-01-04")
date_range = "2020-01-02"
